<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Windows Firewall Enable " treePres="3" id="1823281657" folderId="300164648983704" treeFullPath="myProcedures - provaltech.com/surender.kumar.I - P">
    <Body description="">
      <Statement description="Intended Target : Windows Machines&#xD;&#xA;Description : This Agent procedure is used for Enable Windows Firewall.&#xD;&#xA;Output: Log message on the Computer Management Window script tab.&#xD;&#xA;Originally Created Date: 10/31/2022&#xD;&#xA;Latest Update Date: 10/31/2022&#xD;&#xA;Created By: ProVal Tech&#xD;&#xA;****************************************************************************&#xD;&#xA;Checking Private Firewall Status" name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-NetFirewallProfile -Name Private | Select-Object -ExpandProperty Enabled &gt;&gt;C:\provaltech\pvtfw.txt" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="C:\provaltech\pvtfw.txt" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
          <Parameter xsi:type="StringParameter" name="Value" value="True" />
        </Condition>
        <Then>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Private Firewall is ON" />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Private Firewall is OFF" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-NetFirewallProfile -Profile Private -Enabled True" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
        </Else>
      </If>
      <Statement description="Checking Public Firewall Status" name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-NetFirewallProfile -Name Public | Select-Object -ExpandProperty Enabled &gt;&gt;C:\provaltech\pblfw.txt" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="C:\provaltech\pblfw.txt" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
          <Parameter xsi:type="StringParameter" name="Value" value="True" />
        </Condition>
        <Then>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Public Firewall is ON" />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Public Firewall is OFF" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-NetFirewallProfile -Profile Public -Enabled True" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
        </Else>
      </If>
      <Statement description="compare output between two files" name="DeleteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="C:\provaltech\pvtfw.txt" />
      </Statement>
      <Statement name="DeleteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="C:\provaltech\pblfw.txt" />
      </Statement>
      <Statement name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-NetFirewallProfile -Name Private | Select-Object -ExpandProperty Enabled &gt;&gt;C:\provaltech\pvtfw.txt" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <Statement name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-NetFirewallProfile -Name Public | Select-Object -ExpandProperty Enabled &gt;&gt;C:\provaltech\pblfw.txt" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="fc C:\provaltech\pvtfw.txt C:\provaltech\pblfw.txt" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
      </Statement>
      <Statement name="WriteScriptLogEntry" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Comment" value="#global:cmdresults#" />
      </Statement>
      <If description="">
        <Condition name="CheckVariable">
          <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
          <Parameter xsi:type="StringParameter" name="Value" value="FC: no differences encountered" />
        </Condition>
        <Then>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Windows Firewall Successfully Enabled." />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Process Failed." />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScExport>