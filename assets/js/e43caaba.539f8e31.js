"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[2671],{406163:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"powershell/5cba460d-9322-4c3b-9630-55cb46d57b1a","title":"Get-DiskInfo","description":"Documentation for the Get-DiskInfo command to return detailed information about all individual drives, including performance and logical drive levels.","source":"@site/docs/powershell/Get-DiskInfo.md","sourceDirName":"powershell","slug":"/powershell/5cba460d-9322-4c3b-9630-55cb46d57b1a","permalink":"/docs/powershell/5cba460d-9322-4c3b-9630-55cb46d57b1a","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Get-DiskInfo.md","tags":[{"inline":false,"label":"Performance","permalink":"/docs/tags/performance","description":"Documents related to enhancing system and application performance"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"5cba460d-9322-4c3b-9630-55cb46d57b1a","title":"Get-DiskInfo","title_meta":"Get-DiskInfo","keywords":["disk","info","performance","health"],"description":"Documentation for the Get-DiskInfo command to return detailed information about all individual drives, including performance and logical drive levels.","tags":["performance","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-DesynchronizedSqlReplicas","permalink":"/docs/powershell/37ac5241-5cd4-429b-8aa0-8150173b7cff"},"next":{"title":"Get-FirefoxExtensions","permalink":"/docs/powershell/e45f0be5-66b2-417a-b900-0a6b3b9994f1"}}');var t=i(474848),s=i(28453);const a={id:"5cba460d-9322-4c3b-9630-55cb46d57b1a",title:"Get-DiskInfo",title_meta:"Get-DiskInfo",keywords:["disk","info","performance","health"],description:"Documentation for the Get-DiskInfo command to return detailed information about all individual drives, including performance and logical drive levels.",tags:["performance","windows"],draft:!1,unlisted:!1},o=void 0,l={},d=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Use Case",id:"use-case",level:2},{value:"Output",id:"output",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Get-CriticalDiskInfo was not working reliably due to a non-standard in SMART reporting on hard drives. We needed to find a way to alert on bad hard drives that doesn't rely on Crystal Disk Info. Get-DiskInfo will return all individual drive information down to the performance and even logical drive levels."}),"\n",(0,t.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsx)(n.p,{children:"PowerShell V.5"}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Creates the returned object."}),"\n",(0,t.jsx)(n.li,{children:"Grabs partition and disk information."}),"\n",(0,t.jsxs)(n.li,{children:["Cycles through each partition:","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Gets all associated logical drives and cycles through them for that partition."}),"\n",(0,t.jsx)(n.li,{children:"Creates the partition logical drive and raw performance objects for that partition."}),"\n",(0,t.jsx)(n.li,{children:"Creates the partition object."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Cycles through the drives:","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Creates the drive object."}),"\n",(0,t.jsx)(n.li,{children:"Adds the appropriate partition object to the drive object."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Returns all found items."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:".\\Get-DiskInfo.ps1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns all data for all disks, their partitions, and any logical disks assigned to those partitions on the computer."}),"\n",(0,t.jsx)(n.h2,{id:"use-case",children:"Use Case"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: Failing Hard Drive Test"})}),"\n",(0,t.jsx)(n.p,{children:"Run this script twice."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["RawPerformanceData.AvgDiskQueueLength(2nd run) - RawPerformanceData.AvgDiskQueueLength(1st run) / RawPerformanceData.Timestamp_Sys100NS(2nd run) - RawPerformanceData.Timestamp_Sys100NS(1st run)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ideally under 2; if 2 or more for a prolonged time, a bottleneck is found."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["RawPerformanceData.PercentIdleTime (same formula)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Higher is better."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["RawPerformanceData.AvgDisksecPerRead (same formula)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you can get a baseline for this, you can compare it over time."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["RawPerformanceData.AvgDisksecPerWrite (same formula)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Same as above."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["RawPerformanceData.DiskReadsPersec (same formula)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Rather high values usually mean that there are queries, new or old, that are missing indexes and are reading more data than required."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["RawPerformanceData.DiskWritesPersec (same formula)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Same as above."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"RawPerformanceData.AvgDiskReadQueueLength (same formula)."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Output:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Total disk latency: 42 ms (0.042 seconds is equal to 42 milliseconds)\r\nIdle Time: 87.5204598922\r\nRead latency: 5 ms\r\nWrite latency: 80 ms\r\nCurrent disk queue: 48\r\nWrite queue: 45\r\nRead queue: 2.7\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Interpretation:"}),"\r\nThese results show that the disk is clearly a bottleneck and underperforming for the workload. Both the write latency and write queue are very high. If this were a real environment, we would be digging deeper into the storage to see where the issue is. It could be that there's a problem on the storage side (like a bad drive or a misconfiguration), or that the storage is simply too slow to handle the workload. Generally speaking, the performance tests can be interpreted with the following:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Disk latency should be below 15 ms. Disk latency above 25 ms can cause noticeable performance issues."}),"\n",(0,t.jsx)(n.li,{children:"Latency above 50 ms is indicative of extremely underperforming storage."}),"\n",(0,t.jsx)(n.li,{children:"Disk queues should be no greater than twice the number of physical disks serving the drive. For example, if the underlying storage is a 6-disk RAID 5 array, the total disk queue should be 12 or less."}),"\n",(0,t.jsx)(n.li,{children:"For storage that isn't mapped directly to an array (such as in a private cloud or in Azure), queues should be below 10 or so."}),"\n",(0,t.jsx)(n.li,{children:"Queue length isn't directly indicative of performance issues but can help lead to that conclusion."}),"\n",(0,t.jsx)(n.li,{children:"These are general rules and may not apply in every scenario; however, if you see the counters exceeding the thresholds above, it warrants a deeper investigation."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"output",children:"Output"}),"\n",(0,t.jsx)(n.p,{children:"Location of output for log, result, and error files."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"[system.object]\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(296540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);