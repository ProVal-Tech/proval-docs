"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[11778],{782772:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"cwa/monitors/95f64d6e-cb10-4c2c-9d40-c55941a7d7bc","title":"Import - Remote Monitor - Update Orchestrator - Reboot Prevention [Change]","description":"This document outlines the steps to apply a remote monitor in ConnectWise Automate, including obtaining group IDs, running SQL queries, and setting up alerts for monitoring Windows Update Orchestrator services.","source":"@site/docs/cwa/monitors/Import-Remote-Monitor-Update-Orchestrator-Reboot-Prevention-Change.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/95f64d6e-cb10-4c2c-9d40-c55941a7d7bc","permalink":"/docs/cwa/monitors/95f64d6e-cb10-4c2c-9d40-c55941a7d7bc","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Import-Remote-Monitor-Update-Orchestrator-Reboot-Prevention-Change.md","tags":[{"inline":false,"label":"Database","permalink":"/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"95f64d6e-cb10-4c2c-9d40-c55941a7d7bc","title":"Import - Remote Monitor - Update Orchestrator - Reboot Prevention [Change]","title_meta":"Import - Remote Monitor - Update Orchestrator - Reboot Prevention [Change]","keywords":["remote","monitor","sql","query","update","orchestrator"],"description":"This document outlines the steps to apply a remote monitor in ConnectWise Automate, including obtaining group IDs, running SQL queries, and setting up alerts for monitoring Windows Update Orchestrator services.","tags":["database","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Import - Remote Monitor - Set-PsRepository PSGallery","permalink":"/docs/cwa/monitors/5cb1373f-6cdc-4576-8b3e-e8bfc4d664de"},"next":{"title":"Import - Remote Monitor - Windows Cluster Shared Volume Detection","permalink":"/docs/cwa/monitors/2fee5750-3a75-4256-b1b6-fcf2b81dccd6"}}');var n=r(474848),a=r(28453);const s={id:"95f64d6e-cb10-4c2c-9d40-c55941a7d7bc",title:"Import - Remote Monitor - Update Orchestrator - Reboot Prevention [Change]",title_meta:"Import - Remote Monitor - Update Orchestrator - Reboot Prevention [Change]",keywords:["remote","monitor","sql","query","update","orchestrator"],description:"This document outlines the steps to apply a remote monitor in ConnectWise Automate, including obtaining group IDs, running SQL queries, and setting up alerts for monitoring Windows Update Orchestrator services.",tags:["database","windows"],draft:!1,unlisted:!1},i=void 0,c={},d=[{value:"Steps to Apply Remote Monitor",id:"steps-to-apply-remote-monitor",level:2},{value:"1.",id:"1",level:3},{value:"2.",id:"2",level:3},{value:"3.",id:"3",level:3},{value:"4.",id:"4",level:3},{value:"5.",id:"5",level:3},{value:"6.",id:"6",level:3}];function l(e){const t={br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"steps-to-apply-remote-monitor",children:"Steps to Apply Remote Monitor"}),"\n",(0,n.jsx)(t.h3,{id:"1",children:"1."}),"\n",(0,n.jsx)(t.p,{children:"Obtain the group ID(s) of the group(s) that the remote monitor should be applied to."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"2",children:"2."}),"\n",(0,n.jsx)(t.p,{children:"Run this SQL query from a RAWSQL monitor set to import the required search:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"INSERT INTO `SensorChecks` (\r\n\xa0\xa0 \xa0`Name`, `SQL`, `QueryType`, `ListDATA`,\r\n\xa0\xa0 \xa0`FolderID`, `GUID`, `SearchXML`\r\n)\r\nSELECT\r\n\xa0\xa0 \xa0'Update Orchestrator - UsoSvc' AS `Name`,\r\n\xa0\xa0 \xa0'SELECT \\r\\n \xa0 computers.computerid as `Computer Id`,\\r\\n \xa0 computers.name as `Computer Name`,\\r\\n \xa0 clients.name as `Client Name`,\\r\\n \xa0 computers.domain as `Computer Domain`,\\r\\n \xa0 computers.username as `Computer User`,\\r\\n \xa0 Services.Name as `Computer.Services.Name`\\r\\nFROM Computers \\r\\nLEFT JOIN inv_operatingsystem ON (Computers.ComputerId=inv_operatingsystem.ComputerId)\\r\\nLEFT JOIN Clients ON (Computers.ClientId=Clients.ClientId)\\r\\nLEFT JOIN Locations ON (Computers.LocationId=Locations.LocationID)\\r\\nLEFT JOIN Services ON (services.ComputerId = Computers.ComputerId)\\r\\n WHERE \\r\\n((Services.Name = \\'UsoSvc\\'))\\r\\n' AS `SQL`,\r\n\xa0\xa0 \xa0'4' AS `QueryType`,\r\n\xa0\xa0 \xa0'Select||=||=||=|^Select|||||||^' AS `ListData`,\r\n\xa0\xa0 \xa0'0' AS `FolderID`,\r\n\xa0\xa0 \xa0'04a11d92-3269-4ab1-a634-43d405e37b8b' AS `GUID`,\r\n\xa0\xa0 \xa0'<LabTechAbstractSearch><asn><st>AndNode</st><cn><asn><st>ComparisonNode</st><lon>Computer.Services.Name</lon><lok>Computer.Services.Name</lok><lmo>Equals</lmo><dv>UsoSvc</dv><dk>UsoSvc</dk></asn></cn></asn></LabTechAbstractSearch>' AS `SearchXML`\r\nFROM\r\n\xa0\xa0 \xa0(\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0SELECT\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0\xa0\xa0 \xa0MIN(computerid)\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0FROM\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0\xa0\xa0 \xa0computers\r\n\xa0\xa0 \xa0) a\r\nWHERE\r\n\xa0\xa0 \xa0(\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0SELECT\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0\xa0\xa0 \xa0COUNT(*)\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0FROM\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0\xa0\xa0 \xa0SensorChecks\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0WHERE\r\n\xa0\xa0 \xa0\xa0\xa0 \xa0\xa0\xa0 \xa0`GUID` = '04a11d92-3269-4ab1-a634-43d405e37b8b'\r\n\xa0\xa0 \xa0) = 0;\n"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"3",children:"3."}),"\n",(0,n.jsxs)(t.p,{children:["Copy the following query and replace ",(0,n.jsx)(t.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the Group ID(s) of the relevant groups:\r\n(The string to replace can be found at the very bottom of the query, right after ",(0,n.jsx)(t.strong,{children:"WHERE"}),")"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"SET @searchid = IFNULL(( SELECT MIN(SensID) From sensorchecks where `GUID` = '04a11d92-3269-4ab1-a634-43d405e37b8b' ), 0);\r\nINSERT INTO groupagents\xa0\r\n\xa0SELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n@Searchid\xa0as `SearchID`,\r\n'ProVal - Production - Update Orchestrator - Reboot Prevention [Change]' as `Name`,\r\n'6' as `CheckAction`,\r\n'0' as `AlertAction`,\r\n'Windows update Orchestrator Monitor - Failed - %ComputerName%~~~Successfully renamed the reboot file.!!!Windows update Orchestrator Monitor - Failed - %ComputerName%~~~The reboot file at \"C:\\\\Windows\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\UpdateOrchestrator\\\\reboot\" failed to be renamed. The update orchestrator uses this file; it should either be deleted or renamed to prevent the update orchestrator from restarting the computer at any moment.' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"$ConfirmPreference = \\'None\\'; if (( Get-Service -Name \\'UsoSvc\\' ).StartType -ne \\'Automatic\\' ) { Set-Service -Name \\'UsoSvc\\' -StartupType \\'Automatic\\'}; $RebootPath = \\\\\"$env:windir\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\UpdateOrchestrator\\\\reboot\\\\\"; $BakPath = \\\\\"$env:windir\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\UpdateOrchestrator\\\\reboot.bak\\\\\"; if (Test-Path $RebootPath) {Remove-Item -Path $BakPath -Force -ErrorAction SilentlyContinue; try {Move-Item -Path $RebootPath -Destination $BakPath -Force -Confirm:$False -ErrorAction Stop; }catch{return \\'Failed to rename the reboot file\\'}}\"' as `DataOut`,\r\n'9' as `Comparor`,\r\n'Failed to rename the reboot file' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nUUID() as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (YOUR COMMA SEPARATED LIST OF GROUPID(S))\r\nAND m.groupid NOT IN \xa0(SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Update Orchestrator - Reboot Prevention [Change]')\n"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"4",children:"4."}),"\n",(0,n.jsx)(t.p,{children:"An example of a query with a group ID:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"SET @searchid = IFNULL(( SELECT MIN(SensID) From sensorchecks where `GUID` = '04a11d92-3269-4ab1-a634-43d405e37b8b' ), 0);\r\nINSERT INTO groupagents\xa0\r\n\xa0SELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n@Searchid\xa0as `SearchID`,\r\n'ProVal - Production - Update Orchestrator - Reboot Prevention [Change]' as `Name`,\r\n'6' as `CheckAction`,\r\n'0' as `AlertAction`,\r\n'Windows update Orchestrator Monitor - Failed - %ComputerName%~~~Successfully renamed the reboot file.!!!Windows update Orchestrator Monitor - Failed - %ComputerName%~~~The reboot file at \"C:\\\\Windows\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\UpdateOrchestrator\\\\reboot\" failed to be renamed. The update orchestrator uses this file; it should either be deleted or renamed to prevent the update orchestrator from restarting the computer at any moment.' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"$ConfirmPreference = \\'None\\'; if (( Get-Service -Name \\'UsoSvc\\' ).StartType -ne \\'Automatic\\' ) { Set-Service -Name \\'UsoSvc\\' -StartupType \\'Automatic\\'}; $RebootPath = \\\\\"$env:windir\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\UpdateOrchestrator\\\\reboot\\\\\"; $BakPath = \\\\\"$env:windir\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\UpdateOrchestrator\\\\reboot.bak\\\\\"; if (Test-Path $RebootPath) {Remove-Item -Path $BakPath -Force -ErrorAction SilentlyContinue; try {Move-Item -Path $RebootPath -Destination $BakPath -Force -Confirm:$False -ErrorAction Stop; }catch{return \\'Failed to rename the reboot file\\'}}\"' as `DataOut`,\r\n'9' as `Comparor`,\r\n'Failed to rename the reboot file' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nUUID() as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (2,3,855,856)\r\nAND m.groupid NOT IN \xa0(SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Update Orchestrator - Reboot Prevention [Change]')\n"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"5",children:"5."}),"\n",(0,n.jsxs)(t.p,{children:["Now execute your query from a RAWSQL monitor set.",(0,n.jsx)(t.br,{}),"\n","Once the query is executed, reload the control center."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Control Center",src:r(647653).A+"",width:"309",height:"351"})}),"\n",(0,n.jsxs)(t.p,{children:["Then re-open the group where the monitor is created.",(0,n.jsx)(t.br,{}),"\n","The monitor will come up with the search ",(0,n.jsx)(t.code,{children:"Update Orchestrator - UsoSvc"})," added to the LIMIT."]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"6",children:"6."}),"\n",(0,n.jsx)(t.p,{children:"Locate your remote monitor by opening the group(s) remote monitors tab, then apply the appropriate alert template."})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},647653:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_1-5299c8ddfd764baa3fde4787aa31c5b8.png"},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>i});var o=r(296540);const n={},a=o.createContext(n);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);