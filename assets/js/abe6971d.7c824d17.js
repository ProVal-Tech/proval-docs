"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[83568],{674412:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"cwa/monitors/5cb1373f-6cdc-4576-8b3e-e8bfc4d664de","title":"Import - Remote Monitor - Set-PsRepository PSGallery","description":"This document provides a step-by-step guide on how to set the PSGallery as a trusted repository within ConnectWise, including SQL queries to apply to specific groups and instructions on executing the queries using RAWSQL monitors.","source":"@site/docs/cwa/monitors/Import-Remote-Monitor-Set-PsRepository-PSGallery.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/5cb1373f-6cdc-4576-8b3e-e8bfc4d664de","permalink":"/docs/cwa/monitors/5cb1373f-6cdc-4576-8b3e-e8bfc4d664de","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Import-Remote-Monitor-Set-PsRepository-PSGallery.md","tags":[{"inline":false,"label":"ConnectWise","permalink":"/docs/tags/connectwise","description":"Documents on ConnectWise platforms for IT service management"},{"inline":false,"label":"Setup","permalink":"/docs/tags/setup","description":"Documents on setting up software and hardware configurations"},{"inline":false,"label":"SQL","permalink":"/docs/tags/sql","description":"Documents discussing Structured Query Language and database interactions"}],"version":"current","frontMatter":{"id":"5cb1373f-6cdc-4576-8b3e-e8bfc4d664de","title":"Import - Remote Monitor - Set-PsRepository PSGallery","title_meta":"Import - Remote Monitor - Set-PsRepository PSGallery","keywords":["psgallery","repository","trusted","connectwise","monitor"],"description":"This document provides a step-by-step guide on how to set the PSGallery as a trusted repository within ConnectWise, including SQL queries to apply to specific groups and instructions on executing the queries using RAWSQL monitors.","tags":["connectwise","setup","sql"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Import - Remote Monitor - Deploy Teams","permalink":"/docs/cwa/monitors/5cc62311-8109-43b8-af64-e0aac4292d19"},"next":{"title":"Import - Remote Monitor - Update Orchestrator - Reboot Prevention [Change]","permalink":"/docs/cwa/monitors/95f64d6e-cb10-4c2c-9d40-c55941a7d7bc"}}');var n=r(474848),s=r(28453);const a={id:"5cb1373f-6cdc-4576-8b3e-e8bfc4d664de",title:"Import - Remote Monitor - Set-PsRepository PSGallery",title_meta:"Import - Remote Monitor - Set-PsRepository PSGallery",keywords:["psgallery","repository","trusted","connectwise","monitor"],description:"This document provides a step-by-step guide on how to set the PSGallery as a trusted repository within ConnectWise, including SQL queries to apply to specific groups and instructions on executing the queries using RAWSQL monitors.",tags:["connectwise","setup","sql"],draft:!1,unlisted:!1},i=void 0,l={},c=[{value:"Implementation",id:"implementation",level:2}];function p(e){const t={br:"br",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Obtain the group ID(s) of the group(s) that the remote monitor should be applied to."}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Copy the following query and replace ",(0,n.jsx)(t.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the Group ID(s) of the relevant groups:",(0,n.jsx)(t.br,{}),"\n","(The string to replace can be found at the very bottom of the query, right after ",(0,n.jsx)(t.strong,{children:"WHERE"}),")"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"   INSERT INTO groupagents\xa0\r\n   \xa0SELECT '' as `AgentID`,\r\n   `groupid` as `GroupID`,\r\n   '0' as `SearchID`,\r\n   'ProVal - Production - Set-PsRepository PSGallery [Change]' as `Name`,\r\n   '6' as `CheckAction`,\r\n   '1' as `AlertAction`,\r\n   '<NoAlert>~~~<NoAlert>!!!<NoAlert>~~~<NoAlert>' as `AlertMessage`,\r\n   '0' as `ContactID`,\r\n   '86400' as `interval`,\r\n   '127.0.0.1' as `Where`,\r\n   '7' as `What`,\r\n   'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"[Net.ServicePointManager]::SecurityProtocol = [Enum]::ToObject([Net.SecurityProtocolType], 3072); try { Set-PSRepository -Name PSGallery -InstallationPolicy Trusted -ErrorAction Stop } catch { try { Remove-Item \"$env:localappdata\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PowerShellGet\\\\PSRepositories.xml\" -Force -ErrorAction Stop; Register-PSRepository -Default -ErrorAction Stop; if ( (Get-PSRepository -Name \\'PsGallery\\' -ErrorAction SilentlyContinue).InstallationPolicy -ne \\'Trusted\\' ) { Set-PSRepository -Name PSGallery -InstallationPolicy Trusted -ErrorAction Stop } } catch { return \\\\\"Failed to set PSGallery as trusted repository. Reason: $($Error[0].Exception.Message)\\\\\" }}\"\xa0' as `DataOut`,\r\n   '16' as `Comparor`,\r\n   '10|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))|11|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))%7C(^((\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})Failed to set PSGallery)|10|^((\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})Failed to set PSGallery' as `DataIn`,\r\n   '' as `IDField`,\r\n   '1' as `AlertStyle`,\r\n   '0' as `ScriptID`,\r\n   '' as `datacollector`,\r\n   '21' as `Category`,\r\n   '0' as `TicketCategory`,\r\n   '1' as `ScriptTarget`,\r\n   UUID() as `GUID`,\r\n   'root' as `UpdatedBy`,\r\n   (NOW()) as `UpdateDate`\r\n   FROM mastergroups m\r\n   WHERE m.groupid IN (YOUR COMMA SEPARATED LIST OF GROUPID(S))\r\n   AND m.groupid NOT IN \xa0(SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Set-PsRepository PSGallery [Change]')\n"})}),"\n",(0,n.jsxs)(t.ol,{start:"3",children:["\n",(0,n.jsx)(t.li,{children:"An example of a query with a group ID:"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"   INSERT INTO groupagents\xa0\r\n   \xa0SELECT '' as `AgentID`,\r\n   `groupid` as `GroupID`,\r\n   '0' as `SearchID`,\r\n   'ProVal - Production - Set-PsRepository PSGallery [Change]' as `Name`,\r\n   '6' as `CheckAction`,\r\n   '1' as `AlertAction`,\r\n   '<NoAlert>~~~<NoAlert>!!!<NoAlert>~~~<NoAlert>' as `AlertMessage`,\r\n   '0' as `ContactID`,\r\n   '86400' as `interval`,\r\n   '127.0.0.1' as `Where`,\r\n   '7' as `What`,\r\n   'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"[Net.ServicePointManager]::SecurityProtocol = [Enum]::ToObject([Net.SecurityProtocolType], 3072); try { Set-PSRepository -Name PSGallery -InstallationPolicy Trusted -ErrorAction Stop } catch { try { Remove-Item \"$env:localappdata\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PowerShellGet\\\\PSRepositories.xml\" -Force -ErrorAction Stop; Register-PSRepository -Default -ErrorAction Stop; if ( (Get-PSRepository -Name \\'PsGallery\\' -ErrorAction SilentlyContinue).InstallationPolicy -ne \\'Trusted\\' ) { Set-PSRepository -Name PSGallery -InstallationPolicy Trusted -ErrorAction Stop } } catch { return \\\\\"Failed to set PSGallery as trusted repository. Reason: $($Error[0].Exception.Message)\\\\\" }}\"\xa0' as `DataOut`,\r\n   '16' as `Comparor`,\r\n   '10|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))|11|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))%7C(^((\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})Failed to set PSGallery)|10|^((\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})Failed to set PSGallery' as `DataIn`,\r\n   '' as `IDField`,\r\n   '1' as `AlertStyle`,\r\n   '0' as `ScriptID`,\r\n   '' as `datacollector`,\r\n   '21' as `Category`,\r\n   '0' as `TicketCategory`,\r\n   '1' as `ScriptTarget`,\r\n   UUID() as `GUID`,\r\n   'root' as `UpdatedBy`,\r\n   (NOW()) as `UpdateDate`\r\n   FROM mastergroups m\r\n   WHERE m.groupid IN (2,3,855,856)\r\n   AND m.groupid NOT IN  (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Set-PsRepository PSGallery [Change]')\n"})}),"\n",(0,n.jsxs)(t.ol,{start:"4",children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Now execute your query using a RAWSQL monitor set. Once the query is executed, reload the control center.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.img,{alt:"Image",src:r(438999).A+"",width:"309",height:"351"}),(0,n.jsx)(t.br,{}),"\n","Then re-open the group where the monitor is created."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Locate your remote monitor by opening the group(s) remote monitors tab, then apply the appropriate alert template."}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},438999:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_1-5299c8ddfd764baa3fde4787aa31c5b8.png"},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var o=r(296540);const n={},s=o.createContext(n);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);