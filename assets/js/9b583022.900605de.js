"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[34224],{89704:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>S,frontMatter:()=>o,metadata:()=>n,toc:()=>R});const n=JSON.parse('{"id":"cwa/monitors/dcfe094a-b15b-4f06-8c8f-c6e211c7f9b0","title":"Implement- Reset System Restore Disk Space Usage","description":"This document provides detailed implementation steps for applying a remote monitor in a system. It includes obtaining group IDs, modifying SQL queries, and executing them to set up monitoring effectively.","source":"@site/docs/cwa/monitors/Implement- Reset System Restore Disk Space Usage.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/dcfe094a-b15b-4f06-8c8f-c6e211c7f9b0","permalink":"/docs/cwa/monitors/dcfe094a-b15b-4f06-8c8f-c6e211c7f9b0","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Implement- Reset System Restore Disk Space Usage.md","tags":[{"inline":false,"label":"Database","permalink":"/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Setup","permalink":"/docs/tags/setup","description":"Documents on setting up software and hardware configurations"}],"version":"current","frontMatter":{"id":"dcfe094a-b15b-4f06-8c8f-c6e211c7f9b0","title":"Implement- Reset System Restore Disk Space Usage","title_meta":"Implement- Reset System Restore Disk Space Usage","keywords":["implementation","remote","monitor","query","groupid"],"description":"This document provides detailed implementation steps for applying a remote monitor in a system. It includes obtaining group IDs, modifying SQL queries, and executing them to set up monitoring effectively.","tags":["database","setup"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Implement- New Local Admin","permalink":"/docs/cwa/monitors/3aeba30b-19d4-49e6-9275-d82842ced15b"},"next":{"title":"Implement- SMB1 Traffic Detection","permalink":"/docs/cwa/monitors/e6d09f37-fd0f-42a6-98a5-449f65673296"}}');var r=a(474848),s=a(28453);const o={id:"dcfe094a-b15b-4f06-8c8f-c6e211c7f9b0",title:"Implement- Reset System Restore Disk Space Usage",title_meta:"Implement- Reset System Restore Disk Space Usage",keywords:["implementation","remote","monitor","query","groupid"],description:"This document provides detailed implementation steps for applying a remote monitor in a system. It includes obtaining group IDs, modifying SQL queries, and executing them to set up monitoring effectively.",tags:["database","setup"],draft:!1,unlisted:!1},c=void 0,i={},R=[{value:"Implementation Steps",id:"implementation-steps",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"implementation-steps",children:"Implementation Steps"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Obtain the group ID(s) of the group(s) that the remote monitor should be applied to."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Copy the following query and replace ",(0,r.jsx)(t.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the Group ID(s) of the relevant groups:\r\n(The string to replace can be found at the very bottom of the query, right after ",(0,r.jsx)(t.strong,{children:"WHERE"}),")"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Production - Reset System Restore Disk Space Usage' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'Failed to Reset System Restore Disk Space Usage on %CLIENTNAME%//%COMPUTERNAME%~~~System Restore Disk Space Usage has been successfully updated.!!!Failed to Reset System Restore Disk Space Usage on %CLIENTNAME%//%COMPUTERNAME%~~~Failed to Reset System Restore Disk Space Usage on %CLIENTNAME%//%COMPUTERNAME%' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'21600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -Command \\\"$ErroractionPreference= /'SilentlyContinue/';$SysDrv=$env:SystemDrive;$allocatedSpace = (vssadmin list shadowstorage /on=$SysDrv | Select-String /'Maximum Shadow Copy/');if($allocatedSpace -match /'(/d+(/./d+)?)%/'){$allocatedSpacePercentage = [float]$matches[1]};if ($allocatedSpacePercentage -gt 25) {try{ & cmd /c /\\\"vssadmin resize shadowstorage /for=$SysDrv /on=$SysDrv /maxsize=5%/\\\"} catch {Write-Host /'Failed to reset/'} }\\\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'10|^(()%7C %7C(OK)%7C(/r/n))$|11|(Failed to Reset)%7C(^(()%7C %7C(OK)%7C(/r/n))$)|0|(Failed to Reset)' as `DataIn`,\r\n'' as `IDField`,\r\n'0' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (YOUR COMMA SEPARATED LIST OF GROUPID(S))\r\nAND m.groupid NOT IN  (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Reset System Restore Disk Space Usage')\n"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"An example of a query with a group ID:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Production - Reset System Restore Disk Space Usage' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'Failed to Reset System Restore Disk Space Usage on %CLIENTNAME%//%COMPUTERNAME%~~~System Restore Disk Space Usage has been successfully updated.!!!Failed to Reset System Restore Disk Space Usage on %CLIENTNAME%//%COMPUTERNAME%~~~Failed to Reset System Restore Disk Space Usage on %CLIENTNAME%//%COMPUTERNAME%' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'21600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -Command \\\"$ErroractionPreference= /'SilentlyContinue/';$SysDrv=$env:SystemDrive;$allocatedSpace = (vssadmin list shadowstorage /on=$SysDrv | Select-String /'Maximum Shadow Copy/');if($allocatedSpace -match /'(/d+(/./d+)?)%/'){$allocatedSpacePercentage = [float]$matches[1]};if ($allocatedSpacePercentage -gt 25) {try{ & cmd /c /\\\"vssadmin resize shadowstorage /for=$SysDrv /on=$SysDrv /maxsize=5%/\\\"} catch {Write-Host /'Failed to reset/'} }\\\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'10|^(()%7C %7C(OK)%7C(/r/n))$|11|(Failed to Reset)%7C(^(()%7C %7C(OK)%7C(/r/n))$)|0|(Failed to Reset)' as `DataIn`,\r\n'' as `IDField`,\r\n'0' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (2,144)\r\nAND m.groupid NOT IN  (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Reset System Restore Disk Space Usage')\n"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Now execute your query from a RAWSQL monitor set."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Locate your remote monitor by opening the group(s) remote monitors tab, then apply the appropriate alert template."}),"\n"]}),"\n"]})]})}function S(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>c});var n=a(296540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);