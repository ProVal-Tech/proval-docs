"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[92572],{544770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"cwa/roles/00bd8c59-9411-4767-8ac7-348b9115fff5","title":"Non DomainWorkgroup  machines","description":"This document outlines a PowerShell script that detects machines that are not joined to a domain. It includes a detection string and settings relevant for Windows operating systems, providing a clear method to verify domain status.","source":"@site/docs/cwa/roles/Non DomainWorkgroup  machines.md","sourceDirName":"cwa/roles","slug":"/cwa/roles/00bd8c59-9411-4767-8ac7-348b9115fff5","permalink":"/docs/cwa/roles/00bd8c59-9411-4767-8ac7-348b9115fff5","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/roles/Non DomainWorkgroup  machines.md","tags":[{"inline":false,"label":"Security","permalink":"/docs/tags/security","description":"Documents discussing security measures and practices for IT systems"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"00bd8c59-9411-4767-8ac7-348b9115fff5","title":"Non DomainWorkgroup  machines","title_meta":"Non DomainWorkgroup  machines","keywords":["detection","domain","windows","status","machine"],"description":"This document outlines a PowerShell script that detects machines that are not joined to a domain. It includes a detection string and settings relevant for Windows operating systems, providing a clear method to verify domain status.","tags":["security","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Network Device Enrollment Service","permalink":"/docs/cwa/roles/f25a5083-75f1-4adb-bad8-1612c44f33dd"},"next":{"title":"Nutanix VM","permalink":"/docs/cwa/roles/b5078e56-0a3a-4126-81a7-ec586b16aa77"}}');var i=n(474848),o=n(28453);const a={id:"00bd8c59-9411-4767-8ac7-348b9115fff5",title:"Non DomainWorkgroup  machines",title_meta:"Non DomainWorkgroup  machines",keywords:["detection","domain","windows","status","machine"],description:"This document outlines a PowerShell script that detects machines that are not joined to a domain. It includes a detection string and settings relevant for Windows operating systems, providing a clear method to verify domain status.",tags:["security","windows"],draft:!1,unlisted:!1},r=void 0,d={},c=[{value:"Summary",id:"summary",level:2},{value:"Settings",id:"settings",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(t.p,{children:"This role will detect machines that are not joined to a domain."}),"\n",(0,i.jsx)(t.h2,{id:"settings",children:"Settings"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Detection String"}),(0,i.jsx)(t.th,{children:"Comparator"}),(0,i.jsx)(t.th,{children:"Result"}),(0,i.jsx)(t.th,{children:"Applicable OS"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Equals"}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Windows"})]})})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-powershell",children:"$ErrorActionPreference='SilentlyContinue'; $DSRegStatus = dsregcmd.exe /status; @('False','True')[($DSRegStatus -like '*AzureAdJoined : NO*') -and ($DSRegStatus -like '*EnterpriseJoined : NO*') -and ($DSRegStatus -like '*DomainJoined : NO*')]\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(296540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);