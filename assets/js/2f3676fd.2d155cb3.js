"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[25081],{772669:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"cwa/scripts/59738aa7-5495-4e4d-a36a-cc8af2643865","title":"EPM - Data Collection - Automate - Script Get - Battery Report","description":"This document outlines a script that runs the agnostic EPM data collection process to retrieve battery report data and imports it into the plugin_proval_batteries table. It serves as an autofix for an internal monitoring script and includes dependencies, variables, and a detailed process for execution.","source":"@site/docs/cwa/scripts/EPM - Data Collection - Automate - Script Get - Battery Report.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/59738aa7-5495-4e4d-a36a-cc8af2643865","permalink":"/docs/cwa/scripts/59738aa7-5495-4e4d-a36a-cc8af2643865","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/EPM - Data Collection - Automate - Script Get - Battery Report.md","tags":[{"inline":false,"label":"Database","permalink":"/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Report","permalink":"/docs/tags/report","description":"Documents focused on generating and managing reports"},{"inline":false,"label":"Setup","permalink":"/docs/tags/setup","description":"Documents on setting up software and hardware configurations"},{"inline":false,"label":"SQL","permalink":"/docs/tags/sql","description":"Documents discussing Structured Query Language and database interactions"}],"version":"current","frontMatter":{"id":"59738aa7-5495-4e4d-a36a-cc8af2643865","title":"EPM - Data Collection - Automate - Script Get - Battery Report","title_meta":"EPM - Data Collection - Automate - Script Get - Battery Report","keywords":["data","collection","battery","report","sql","insert"],"description":"This document outlines a script that runs the agnostic EPM data collection process to retrieve battery report data and imports it into the plugin_proval_batteries table. It serves as an autofix for an internal monitoring script and includes dependencies, variables, and a detailed process for execution.","tags":["database","report","setup","sql"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"EPM -  DataCollection - User - Prompt Show - Branding Template","permalink":"/docs/cwa/scripts/044f0c44-45f3-4326-8ee2-6406da1b6bc8"},"next":{"title":"EPM - Disk - Disk Space Monitoring Process - Client Specific","permalink":"/docs/cwa/scripts/8eb03817-eae4-4ac4-b1c6-d7a629d32ecf"}}');var r=a(474848),n=a(28453);const i={id:"59738aa7-5495-4e4d-a36a-cc8af2643865",title:"EPM - Data Collection - Automate - Script Get - Battery Report",title_meta:"EPM - Data Collection - Automate - Script Get - Battery Report",keywords:["data","collection","battery","report","sql","insert"],description:"This document outlines a script that runs the agnostic EPM data collection process to retrieve battery report data and imports it into the plugin_proval_batteries table. It serves as an autofix for an internal monitoring script and includes dependencies, variables, and a detailed process for execution.",tags:["database","report","setup","sql"],draft:!1,unlisted:!1},o=void 0,c={},l=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"Process",id:"process",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(t.p,{children:["This script runs the agnostic script ",(0,r.jsx)(t.a,{href:"https://proval.itglue.com/DOC-5078775-11299341",children:"EPM - Data Collection - Agnostic - Get-BatteryReport.ps1"})," and imports the retrieved data into ",(0,r.jsx)(t.code,{children:"plugin_proval_batteries"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,r.jsx)(t.p,{children:"The intention of this script is to serve as an autofix for an internal monitor named Proval - Production - DailyScript - Get-BatteryReport."}),"\n",(0,r.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://proval.itglue.com/DOC-5078775-11299341",children:"EPM - Data Collection - Agnostic - Get-BatteryReport.ps1"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/docs/cwa/scripts/34cee8fe-1b6b-4558-a890-2face427ceb8",children:"CWM - Automate - Script - OverFlowedVariable - SQL Insert - Execute"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TableName"}),(0,r.jsx)(t.td,{children:"The name of the table to be created if it doesn't exist."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ColumnNamesSQL"}),(0,r.jsx)(t.td,{children:"The columns in the table in comma-separated format."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"JsonFileName"}),(0,r.jsx)(t.td,{children:"Necessary when using OverFlowedVariable - SQL Insert - Execute"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SQLStartStatement"}),(0,r.jsxs)(t.td,{children:["The formatted SQL statement from ",(0,r.jsx)(t.code,{children:"INSERT INTO"})," to ",(0,r.jsx)(t.code,{children:"VALUES"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SQLTailString"}),(0,r.jsxs)(t.td,{children:["The tail string for the SQL statement from ",(0,r.jsx)(t.code,{children:"ON DUPLICATE"})," to the end of the query."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DatapointNames"}),(0,r.jsx)(t.td,{children:"Needed when using OverFlowedVariable - SQL Insert - Execute"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"process",children:"Process"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Create the custom table if it doesn't exist."}),"\n",(0,r.jsxs)(t.li,{children:["Set up variables for ",(0,r.jsx)(t.a,{href:"/docs/cwa/scripts/34cee8fe-1b6b-4558-a890-2face427ceb8",children:"CWM - Automate - Script - OverFlowedVariable - SQL Insert - Execute"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["Run the agnostic process (",(0,r.jsx)(t.a,{href:"https://proval.itglue.com/DOC-5078775-11299341",children:"EPM - Data Collection - Agnostic - Get-BatteryReport.ps1"}),")."]}),"\n",(0,r.jsxs)(t.li,{children:["Run the automate script process (",(0,r.jsx)(t.a,{href:"/docs/cwa/scripts/34cee8fe-1b6b-4558-a890-2face427ceb8",children:"CWM - Automate - Script - OverFlowedVariable - SQL Insert - Execute"}),")."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var s=a(296540);const r={},n=s.createContext(r);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);