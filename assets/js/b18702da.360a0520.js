"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[1524],{491723:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"cwa/monitors/495df667-0690-48e0-b929-f7671e9fc92c","title":"Implement - Active Directory Replication Anomaly Monitoring","description":"This document provides a step-by-step guide to set up the ProVal - Production - Active Directory Replication Anomaly Monitoring remote monitor. It includes SQL queries to import necessary searches, establish remote monitoring, and validate configurations for effective Active Directory replication monitoring.","source":"@site/docs/cwa/monitors/Implement - Active Directory Replication Anomaly Monitoring.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/495df667-0690-48e0-b929-f7671e9fc92c","permalink":"/docs/cwa/monitors/495df667-0690-48e0-b929-f7671e9fc92c","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Implement - Active Directory Replication Anomaly Monitoring.md","tags":[{"inline":false,"label":"Active Directory","permalink":"/docs/tags/active-directory","description":"Documents related to Active Directory services and management"},{"inline":false,"label":"SQL","permalink":"/docs/tags/sql","description":"Documents discussing Structured Query Language and database interactions"}],"version":"current","frontMatter":{"id":"495df667-0690-48e0-b929-f7671e9fc92c","title":"Implement - Active Directory Replication Anomaly Monitoring","title_meta":"Implement - Active Directory Replication Anomaly Monitoring","keywords":["active-directory","monitoring","replication","anomaly","sql","alert","ticket"],"description":"This document provides a step-by-step guide to set up the ProVal - Production - Active Directory Replication Anomaly Monitoring remote monitor. It includes SQL queries to import necessary searches, establish remote monitoring, and validate configurations for effective Active Directory replication monitoring.","tags":["active-directory","sql"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"HyperV - Snapshot Age > 3 Days","permalink":"/docs/cwa/monitors/99c03451-d553-4cba-be15-fd19d1a922f4"},"next":{"title":"Implement - Remote Monitor - HP Hardware Monitoring","permalink":"/docs/cwa/monitors/4e3fc053-3ccd-4262-b8e8-662222500e06"}}');var n=r(474848),i=r(28453);const a={id:"495df667-0690-48e0-b929-f7671e9fc92c",title:"Implement - Active Directory Replication Anomaly Monitoring",title_meta:"Implement - Active Directory Replication Anomaly Monitoring",keywords:["active-directory","monitoring","replication","anomaly","sql","alert","ticket"],description:"This document provides a step-by-step guide to set up the ProVal - Production - Active Directory Replication Anomaly Monitoring remote monitor. It includes SQL queries to import necessary searches, establish remote monitoring, and validate configurations for effective Active Directory replication monitoring.",tags:["active-directory","sql"],draft:!1,unlisted:!1},s=void 0,c={},d=[{value:"Step 1",id:"step-1",level:2},{value:"Step 2",id:"step-2",level:2},{value:"Step 3",id:"step-3",level:2},{value:"Step 4",id:"step-4",level:2},{value:"Step 5",id:"step-5",level:2}];function l(e){const t={br:"br",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"step-1",children:"Step 1"}),"\n",(0,n.jsx)(t.p,{children:"Run this SQL query from a RAWSQL monitor to import the required search."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"INSERT INTO `sensorchecks` (`Name`, `SQL`, `QueryType`, `ListDATA`, `FolderID`, `GUID`, `SearchXML`) \r\nSELECT 'Server Role - AD - Infrastructure Master', \r\n'SELECT \\n   computers.computerid as `Computer Id`,\\n   computers.name as `Computer Name`,\\n   clients.name as `Client Name`,\\n   computers.domain as `Computer Domain`,\\n   computers.username as `Computer User`,\\n   IFNULL(IFNULL(edfAssigned1.Value,edfDefault1.value),\\'0\\') as `Computer - Extra Data Field - Default - Under MSP Contract`,\\n   IFNULL(crd2.RoleDefinitionId,0) as `AD Infrastructure Master-2`,\\n   IFNULL(IFNULL(edfAssigned3.Value,edfDefault3.value),\\'0\\') as `Computer - Extra Data Field - Default - Exclude MSP Contract`,\\n   IF(INSTR(computers.os, \\'server\\')>0, 1, 0) as `Computer.OS.IsServer`\\nFROM Computers \\nLEFT JOIN inv_operatingsystem ON (Computers.ComputerId=inv_operatingsystem.ComputerId)\\nLEFT JOIN Clients ON (Computers.ClientId=Clients.ClientId)\\nLEFT JOIN Locations ON (Computers.LocationId=Locations.LocationID)\\nLEFT JOIN ExtraFieldData edfAssigned1 ON (edfAssigned1.id=Computers.ComputerId and edfAssigned1.ExtraFieldId =(Select ExtraField.id FROM ExtraField WHERE LTGuid=\\'45c2da7e-3bf5-11e1-92fd-c1ee63289e9e\\'))\\nLEFT JOIN ExtraFieldData edfDefault1 ON (edfDefault1.id=0 and edfDefault1.ExtraFieldId =(Select ExtraField.id FROM ExtraField WHERE LTGuid=\\'45c2da7e-3bf5-11e1-92fd-c1ee63289e9e\\'))\\nLEFT JOIN ComputerRoleDefinitions crd2 ON (crd2.ComputerId=Computers.ComputerId And crd2.RoleDefinitionId=(Select RoleDefinitionId From RoleDefinitions Where RoleDetectionGuid=\\'e90000d4-2b70-11e3-9392-08002788414b\\') And (crd2.Type=1 OR (crd2.CurrentlyDetected=1 and crd2.Type<>2)))\\nLEFT JOIN ExtraFieldData edfAssigned3 ON (edfAssigned3.id=Computers.ComputerId and edfAssigned3.ExtraFieldId =(Select ExtraField.id FROM ExtraField WHERE LTGuid=\\'a72e229b-3bf5-11e1-92fd-c1ee63289e9e\\'))\\nLEFT JOIN ExtraFieldData edfDefault3 ON (edfDefault3.id=0 and edfDefault3.ExtraFieldId =(Select ExtraField.id FROM ExtraField WHERE LTGuid=\\'a72e229b-3bf5-11e1-92fd-c1ee63289e9e\\'))\\n WHERE \\n((((IFNULL(IFNULL(edfAssigned1.Value,edfDefault1.value),\\'0\\')<>0) AND (IFNULL(crd2.RoleDefinitionId,0) >0 ) AND (NOT ((IFNULL(IFNULL(edfAssigned3.Value,edfDefault3.value),\\'0\\')<>0))) AND (IF(INSTR(computers.os, \\'server\\')>0, 1, 0)<>0))))\\n',\r\n'4', \r\n'READONLY', \r\n'6', \r\n'430a4640-9c97-4344-bfe8-7a786b110729', \r\n'<LabTechAbstractSearch><asn><st>AndNode</st><cn><asn><st>AndNode</st><cn><asn><st>ComparisonNode</st><lon>Computer.Extra Data Field.Default.Under MSP Contract</lon><lok>Computer.Edf.45c2da7e-3bf5-11e1-92fd-c1ee63289e9e</lok><lmo>IsTrue</lmo><dv>NULL</dv><dk>NULL</dk></asn><asn><st>ComparisonNode</st><lon>Computer.LabTech.Roles</lon><lok>Computer.LabTech.Roles</lok><lmo>HasRole</lmo><dv>AD Infrastructure Master</dv><dk>e90000d4-2b70-11e3-9392-08002788414b</dk></asn><asn><st>NotNode</st><cn><asn><st>ComparisonNode</st><lon>Computer.Extra Data Field.Default.Exclude MSP Contract</lon><lok>Computer.Edf.a72e229b-3bf5-11e1-92fd-c1ee63289e9e</lok><lmo>IsTrue</lmo><dv>NULL</dv><dk>NULL</dk></asn></cn></asn><asn><st>ComparisonNode</st><lon>Computer.OS.IsServer</lon><lok>Computer.OS.IsServer</lok><lmo>IsTrue</lmo><dv>NULL</dv><dk>NULL</dk></asn></cn></asn></cn></asn></LabTechAbstractSearch>'\r\nFROM (SELECT MIN(computerid) FROM computers) c \r\nWHERE (SELECT COUNT(*) FROM sensorchecks WHERE `GUID` = '430a4640-9c97-4344-bfe8-7a786b110729') = 0;\n"})}),"\n",(0,n.jsx)(t.h2,{id:"step-2",children:"Step 2"}),"\n",(0,n.jsxs)(t.p,{children:["Run the provided SQL query to establish the ",(0,n.jsx)(t.code,{children:"ProVal - Production - Active Directory Replication Anomaly Monitoring"})," remote monitor."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"SET @SearchID = (SELECT MIN(sensid) FROM sensorchecks WHERE `GUID` = '430a4640-9c97-4344-bfe8-7a786b110729');\r\nSET @Groupid = (SELECT MIN(groupid) FROM mastergroups WHERE `GUID` = '3ac455da-f1fb-11e1-b4ec-1231391d2d19');\r\n\r\nINSERT INTO groupagents\r\n\xa0 \xa0 SELECT '' AS `AgentID`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0`groupid` AS `GroupID`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0@SearchID AS `SearchID`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'ProVal - Production - Active Directory Replication Anomaly Monitoring' AS `Name`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'6' AS `CheckAction`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'1' AS `AlertAction`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'AD Replication Failure - %DOMAIN%~~~AD Replication Failure has not been identified within the last hour.!!!AD Replication Failure - %DOMAIN%~~~AD Replication Failure(s) have been identified for the domain ''%DOMAIN%'' within the previous hour. The details are provided below:\r\n%RESULT%\r\nFor a precise understanding of the error codes returned in the `LastError` property, please consult the following article: https://learn.microsoft.com/en-us/troubleshoot/windows-server/identity/common-active-directory-replication-errors' AS `AlertMessage`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'0' AS `ContactID`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'3600' AS `interval`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'127.0.0.1' AS `Where`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'7' AS `What`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"$LRS=((Get-ADReplicationPartnerMetadata -Target $((Get-ADdomainController).Domain)) | Sort-Object -Property LastReplicationSuccess -Descending | Select-Object -First 1).LastReplicationSuccess;$LRA=((Get-ADReplicationPartnerMetadata -Target $((Get-ADdomainController).Domain)) | Sort-Object -Property LastReplicationAttempt -Descending | Select-Object -First 1).LastReplicationAttempt;if (($LRS -lt $LRA) -and ($LRA -ge $((Get-Date).AddHours(-1)))){(Get-ADReplicationFailure -Target $((Get-ADdomainController).Domain) -Scope Domain -Erroraction SilentlyContinue| Where-Object {$_.FirstFailureTime -ge $((Get-Date).AddHours(-1)) })}\"' AS `DataOut`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'16' AS `Comparor`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'10|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))|11|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))%7C(PartnerGuid)|10|PartnerGuid' AS `DataIn`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'' AS `IDField`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'0' AS `AlertStyle`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'0' AS `ScriptID`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'' AS `datacollector`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'21' AS `Category`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'0' AS `TicketCategory`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'1' AS `ScriptTarget`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0UUID() AS `GUID`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0'root' AS `UpdatedBy`,\r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0NOW() AS `UpdateDate`\r\n\xa0 \xa0 FROM mastergroups m\r\n\xa0 \xa0 WHERE m.groupid = @Groupid\r\n\xa0 \xa0 \xa0 AND m.groupid NOT IN (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Active Directory Replication Anomaly Monitoring');\n"})}),"\n",(0,n.jsx)(t.h2,{id:"step-3",children:"Step 3"}),"\n",(0,n.jsxs)(t.p,{children:["Perform ",(0,n.jsx)(t.code,{children:"Refresh Searches"})," and ",(0,n.jsx)(t.code,{children:"Do Group Refresh"})," from the ",(0,n.jsx)(t.code,{children:"MySQL Server Status"})," tool."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Image 1",src:r(335157).A+"",width:"296",height:"486"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.img,{alt:"Image 2",src:r(249406).A+"",width:"543",height:"593"})]}),"\n",(0,n.jsx)(t.h2,{id:"step-4",children:"Step 4"}),"\n",(0,n.jsxs)(t.p,{children:["Validate the presence of the ",(0,n.jsx)(t.code,{children:"ProVal - Production - Active Directory Replication Anomaly Monitoring"})," remote monitor in the group ",(0,n.jsx)(t.code,{children:"Domain Controllers"}),". The remote monitor should be limited to the ",(0,n.jsx)(t.code,{children:"Server Role - AD - Infrastructure Master"})," search."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Group:"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.img,{alt:"Group Image",src:r(637095).A+"",width:"667",height:"446"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Search:"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.img,{alt:"Search Image",src:r(845576).A+"",width:"948",height:"339"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Remote Monitor:"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.img,{alt:"Remote Monitor Image",src:r(85521).A+"",width:"1000",height:"558"})]}),"\n",(0,n.jsx)(t.h2,{id:"step-5",children:"Step 5"}),"\n",(0,n.jsxs)(t.p,{children:["Apply the relevant alert template and ticket category to the remote monitor. It is recommended to utilize the ",(0,n.jsx)(t.code,{children:"\u25b3 Custom - Ticket Creation Computer - Failures Only"})," alert template."]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},335157:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_1-13f976361392fcab2ae1d7074b72ce40.png"},249406:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_2-99630291209a79acdcb1e3248a23a801.png"},637095:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_3-4d372d802d75ddd7c5ad8210aee4a865.png"},845576:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_4-90c1a6ac74b78d054c8c85c0d1297e70.png"},85521:(e,t,r)=>{r.d(t,{A:()=>o});const o=r.p+"assets/images/image_5-f277ef19b0ae083abc9eb8c9038bc030.png"},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>s});var o=r(296540);const n={},i=o.createContext(n);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);