"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[72993],{622137:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"cwa/monitors/91b463bf-7bb2-4c79-98ca-ef556ea093b0","title":"Configure BGInfo","description":"This document outlines the steps to implement a remote monitor for installing or updating Microsoft Teams using Winget. It includes SQL queries for creating alert templates and configuring group agents to ensure proper monitoring and notification of the installation status.","source":"@site/docs/cwa/monitors/Configure BGInfo.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/91b463bf-7bb2-4c79-98ca-ef556ea093b0","permalink":"/proval-docs/docs/cwa/monitors/91b463bf-7bb2-4c79-98ca-ef556ea093b0","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Configure BGInfo.md","tags":[{"inline":false,"label":"Setup","permalink":"/proval-docs/docs/tags/setup","description":"Documents on setting up software and hardware configurations"},{"inline":false,"label":"Software","permalink":"/proval-docs/docs/tags/software","description":"Documents related to software applications and their lifecycle management"},{"inline":false,"label":"SQL","permalink":"/proval-docs/docs/tags/sql","description":"Documents discussing Structured Query Language and database interactions"},{"inline":false,"label":"Windows","permalink":"/proval-docs/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"91b463bf-7bb2-4c79-98ca-ef556ea093b0","title":"Configure BGInfo","title_meta":"Configure BGInfo","keywords":["winget","teams","install","update","monitor"],"description":"This document outlines the steps to implement a remote monitor for installing or updating Microsoft Teams using Winget. It includes SQL queries for creating alert templates and configuring group agents to ensure proper monitoring and notification of the installation status.","tags":["setup","software","sql","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Certificate Expiration  30 Days","permalink":"/proval-docs/docs/cwa/monitors/a7dad4d0-d2dc-44b2-972b-0893d7814f8c"},"next":{"title":"Create","permalink":"/proval-docs/docs/cwa/monitors/d1cd1622-27ec-4bbd-9297-1b4b7b2d65b2"}}');var a=n(474848),o=n(28453);const s={id:"91b463bf-7bb2-4c79-98ca-ef556ea093b0",title:"Configure BGInfo",title_meta:"Configure BGInfo",keywords:["winget","teams","install","update","monitor"],description:"This document outlines the steps to implement a remote monitor for installing or updating Microsoft Teams using Winget. It includes SQL queries for creating alert templates and configuring group agents to ensure proper monitoring and notification of the installation status.",tags:["setup","software","sql","windows"],draft:!1,unlisted:!1},i=void 0,l={},c=[{value:"Implementation Steps",id:"implementation-steps",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"implementation-steps",children:"Implementation Steps"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Import ",(0,a.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/d5ce6f1c-94ef-4e78-8e0a-61dd74f8d2cc",children:"EPM - Software Install - Script - Winget - Install/Update - Teams"})," script."]}),"\n",(0,a.jsx)(t.li,{children:"Run this SQL query from a RAWSQL monitor set to create the alert template."}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"# Create Alert Template\r\nINSERT INTO `alerttemplate` (`Name`, `Comment`, `Last_User`, `Last_Date`, `GUID`) \r\nSELECT \r\n'\u25b3 Custom - Execute Script - Winget - Install/Update - Teams' AS `Name`, \r\n'\u25b3 Custom - Execute Script - Winget - Install/Update - Teams' AS `Comment`,\r\n'PRONOC' AS `Last_User`,\r\n(NOW()) AS `Last_Date`,\r\n'e0bd7229-5390-462d-9e21-ec56567219c5' AS `GUID` \r\nFROM (SELECT MIN(computerid) FROM computers) a\r\nWHERE (SELECT COUNT(*) FROM alerttemplate WHERE GUID = 'e0bd7229-5390-462d-9e21-ec56567219c5') = '0';\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"INSERT INTO `alerttemplates` (`AlertActionID`, `DayOfWeek`, `TimeStart`, `TimeEnd`, `AlertAction`, `ContactID`, `UserID`, `ScriptID`, `Trump`, `GUID`, `WarningAction`)\r\nSELECT \r\n(SELECT alertactionid FROM alerttemplate WHERE `GUID` = 'e0bd7229-5390-462d-9e21-ec56567219c5') AS `AlertActionid`,\r\n'127' AS `DayOfWeek`,\r\n'00:00:00' AS `TimeStart`,\r\n'23:59:00' AS `TimeEnd`,\r\n'512' AS `AlertAction`,\r\n'-2' AS `ContactID`,\r\n'0' AS `UserID`,\r\n(SELECT Scriptid FROM lt_scripts WHERE scriptGUID = '32ea4448-2fd8-11ee-9dfe-000c295e5f21') AS `Scriptid`,\r\n'0' AS `Trump`,\r\n'620d5c4d-e89e-455a-ab72-bf98992119e4' AS `GUID`,\r\n'0' AS `WarningAction` \r\nFROM (SELECT MIN(computerid) FROM computers) a\r\nWHERE (SELECT COUNT(*) FROM alerttemplates WHERE GUID = '620d5c4d-e89e-455a-ab72-bf98992119e4') = '0';\n"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Obtain the groupid(s) of the group(s) that the remote monitor should be applied to."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:["Copy the following query and replace ",(0,a.jsx)(t.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the groupid(s) of the relevant groups. (The string to replace can be found at the very bottom of the query, right after ",(0,a.jsx)(t.strong,{children:"WHERE"}),")"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"SET @AlertAction = (SELECT Alertactionid FROM alerttemplate WHERE `GUID` = 'e0bd7229-5390-462d-9e21-ec56567219c5');\r\nINSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Dev - Deploy Teams' as `Name`,\r\n'6' as `CheckAction`,\r\n@AlertAction as `AlertAction`,\r\n'%NAME% %STATUS% on %CLIENTNAME%//%COMPUTERNAME% at %LOCATIONNAME% for %FIELDNAME% result %RESULT%.!!!%NAME% %STATUS% on %CLIENTNAME%//%COMPUTERNAME% at %LOCATIONNAME% for %FIELDNAME% result %RESULT%.' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'86400' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -Command \\\"if (((Get-ChildItem -Path HKLM://SOFTWARE//Microsoft//Windows//CurrentVersion//Uninstall, HKLM://SOFTWARE//Wow6432Node//Microsoft//Windows//CurrentVersion//Uninstall | Get-ItemProperty | Where-Object {$_.DisplayName -eq /'Teams Machine-Wide Installer/' }))) {return /'Deployed/'} else {return /'Not Installed/'}\\\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'8|Deployed|11|(Deployed)%7C(Not Installed)|10|Not Installed' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789',\r\n\r\n\r\n\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(296540);const a={},o=r.createContext(a);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);