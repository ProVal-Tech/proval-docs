"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[62864],{211670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"powershell/ps-enable-powerplan","title":"Enable-PowerPlan","description":"Documentation for the Enable-PowerPlan command to set the specified Power Plan as the active Power Profile.","source":"@site/docs/powershell/Enable-PowerPlan.md","sourceDirName":"powershell","slug":"/powershell/ps-enable-powerplan","permalink":"/proval-docs/docs/powershell/ps-enable-powerplan","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Enable-PowerPlan.md","tags":[{"inline":false,"label":"Performance","permalink":"/proval-docs/docs/tags/performance","description":"Documents related to enhancing system and application performance"},{"inline":false,"label":"Windows","permalink":"/proval-docs/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"ps-enable-powerplan","title":"Enable-PowerPlan","title_meta":"Enable-PowerPlan","keywords":["enable","powerplan","profile","configuration"],"description":"Documentation for the Enable-PowerPlan command to set the specified Power Plan as the active Power Profile.","tags":["performance","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Disable-PowershellVersion2","permalink":"/proval-docs/docs/powershell/ps-disable-powershellversion2"},"next":{"title":"Enable-TPM","permalink":"/proval-docs/docs/powershell/ps-enable-tpm"}}');var s=t(474848),i=t(28453);const l={id:"ps-enable-powerplan",title:"Enable-PowerPlan",title_meta:"Enable-PowerPlan",keywords:["enable","powerplan","profile","configuration"],description:"Documentation for the Enable-PowerPlan command to set the specified Power Plan as the active Power Profile.",tags:["performance","windows"],draft:!1,unlisted:!1},a=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Sets the specified Power Plan as the active Power Profile."}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsx)(n.p,{children:"Ensure that the specified Power Plan is present on the computer before executing the script."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The script expects a mandatory parameter ",(0,s.jsx)(n.code,{children:"Name"}),", which specifies the desired Power Plan's name."]}),"\n",(0,s.jsxs)(n.li,{children:["Retrieves a list of available Power Plans using ",(0,s.jsx)(n.code,{children:"powercfg /list"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Creates an array of Power Plans, including their names, GUIDs, and active status."}),"\n",(0,s.jsxs)(n.li,{children:["Verifies if the specified Power Plan (",(0,s.jsx)(n.code,{children:"Name"}),") exists in the array of available Power Plans."]}),"\n",(0,s.jsx)(n.li,{children:"If the specified Power Plan exists, retrieves its GUID."}),"\n",(0,s.jsxs)(n.li,{children:["Attempts to set the identified Power Plan as the active Power Profile using ",(0,s.jsx)(n.code,{children:"powercfg /setactive"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Logs success or failure messages based on whether the Power Plan activation was successful."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Sets the ",(0,s.jsx)(n.code,{children:"High Performance"})," Power Plan as the active Power Profile."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:".\\\\Set-ActivePowerPlan.ps1 -Name 'High Performance'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Alias"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Name"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Specifies the name of the Power Plan to be set as the active Power Profile."})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:".\\Enable-PowerPlan-Log.txt"}),"\n",(0,s.jsx)(n.li,{children:".\\Enable-PowerPlan-Error.txt"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var r=t(296540);const s={},i=r.createContext(s);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);