"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[1397],{9589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"powershell/ps-remove-application","title":"Remove-Application","description":"Documentation for the Remove-Application command to remove an application or list of applications either by normal means or forcefully.","source":"@site/docs/powershell/Remove-Application.md","sourceDirName":"powershell","slug":"/powershell/ps-remove-application","permalink":"/proval-docs/docs/powershell/ps-remove-application","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/docs/tree/main/packages/create-docusaurus/templates/shared/docs/powershell/Remove-Application.md","tags":[{"inline":false,"label":"Uninstallation","permalink":"/proval-docs/docs/tags/uninstallation","description":"Content related to uninstalling software."},{"inline":false,"label":"Software","permalink":"/proval-docs/docs/tags/software","description":"Content related to software."}],"version":"current","frontMatter":{"id":"ps-remove-application","title":"Remove-Application","title_meta":"Remove-Application Command","keywords":["remove","application","uninstall","cleanup"],"description":"Documentation for the Remove-Application command to remove an application or list of applications either by normal means or forcefully.","tags":["uninstallation","software"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Register-FirefoxExtension","permalink":"/proval-docs/docs/powershell/ps-register-firefoxextension"},"next":{"title":"Remove-BitDefenderEndpointSecurity","permalink":"/proval-docs/docs/powershell/ps-remove-bitdefenderendpointsecurity"}}');var o=n(4848),l=n(8453);const r={id:"ps-remove-application",title:"Remove-Application",title_meta:"Remove-Application Command",keywords:["remove","application","uninstall","cleanup"],description:"Documentation for the Remove-Application command to remove an application or list of applications either by normal means or forcefully.",tags:["uninstallation","software"],draft:!1,unlisted:!1},a=void 0,s={},c=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2}];function p(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(t.p,{children:"Removes an application or list of comma-separated applications either by normal means or forcefully."}),"\n",(0,o.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,o.jsx)(t.p,{children:"PowerShell V.5"}),"\n",(0,o.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Search for the object","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Check for the application log an error and exit if not found."}),"\n",(0,o.jsx)(t.li,{children:"If there are more than 1 result to the search for $Name then notify that there are multiple results and to refine their search."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["Determine the type of uninstallation object that $Name references (AppX, MSI, EXE).","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["AppX","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Remove the appx object"}),"\n",(0,o.jsx)(t.li,{children:"Check for the item after removal to confirm."}),"\n",(0,o.jsx)(t.li,{children:"Exit"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["MSI","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Attempt to remove the MSI package using the uninstall string."}),"\n",(0,o.jsx)(t.li,{children:"Log the success or failure of the uninstallation."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["EXE","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Check if a custom switch is provided. If so, attempt to uninstall using the provided switch."}),"\n",(0,o.jsx)(t.li,{children:"If the custom switch fails or is not provided, attempt to uninstall using the QuietUninstallString if available."}),"\n",(0,o.jsx)(t.li,{children:"If the QuietUninstallString fails or is not available, attempt to uninstall using targeted silent switches."}),"\n",(0,o.jsx)(t.li,{children:"If targeted silent switches fail, attempt to uninstall using the UninstallString without modifications."}),"\n",(0,o.jsx)(t.li,{children:"Log the success or failure of each uninstallation attempt."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["Check if the application is still installed","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"If the application is not installed, log the successful removal and exit."}),"\n",(0,o.jsx)(t.li,{children:"If the application is still installed and the -Force parameter is specified, proceed with forced removal."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["Forced Removal (if -Force parameter is specified)","\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Terminate any processes related to the application."}),"\n",(0,o.jsx)(t.li,{children:"Remove the application's files and directories."}),"\n",(0,o.jsx)(t.li,{children:"Remove the application's shortcuts."}),"\n",(0,o.jsx)(t.li,{children:"Remove the application's registry keys."}),"\n",(0,o.jsx)(t.li,{children:"Log the success or failure of the forced removal."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-powershell",children:".\\Remove-Application.ps1 -Name 'Google Chrome', 'Teams Machine-Wide Installer', 'ConnectWise Manage Client 64-bit'\n"})}),"\n",(0,o.jsx)(t.p,{children:"Will attempt to remove Google Chrome, Teams Machine-Wide Installer, and 'ConnectWise Manage Client 64-bit' applications normally."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-powershell",children:".\\Remove-Application.ps1 -Name 'Google Chrome', 'Teams Machine-Wide Installer', 'ConnectWise Manage Client 64-bit' -SystemComponentOverride\r\n```\r\n    Will attempt to remove Google Chrome, Teams Machine-Wide Installer, and 'ConnectWise Manage Client 64-bit' applications normally. If the application is registered as a system component, it will continue to remove the application.\r\n````powershell\r\n.\\Remove-Application.ps1 -Name 'Google Chrome'\r\n```\r\n    Will attempt to remove Google Chrome normally.\r\n````powershell\r\n.\\Remove-Application.ps1 -Name 'Google Chrome' -Force\r\n```\r\n    Will attempt to remove Google Chrome normally, but if it fails, it will attempt a forceful removal of the application.\r\n````powershell\r\n.\\Remove-Application.ps1 -Name 'Google Chrome' -Force -SystemComponentOverride\r\n```\r\n    Will attempt to remove Google Chrome normally, but if it fails, it will attempt a forceful removal of the application. If the application is registered as a system component, it will continue to remove the application.\r\n````powershell\r\n.\\Remove-Application.ps1 -Name 'Microsoft.BingWeather'\r\n```\r\n    Will remove Bing Weather.\r\n````powershell\r\n.\\Remove-Application.ps1 -Name 'Google Chrome' -Switch '--uninstall --multi-install --chrome --system-level --force-uninstall'\r\n   Will attempt to remove Google Chrome using the provided custom switch.\r\n\r\n## Parameters\r\n\r\n| Parameter         | Alias | Required  | Default   | Type      | Description                               |\r\n| ----------------- | ----- | --------- | --------- | --------- | ----------------------------------------- |\r\n| `Name`            |       | True      |           | String[]  | The name or the comma-separated list of the name of the application(s) as they appear in the programs list.  |\r\n| `SystemComponentOverride`  | Override   | False  |        | Switch    | The default action of this script is to not remove any item that holds the SystemComponent registry key at a value of 1, using SystemComponentOverride you can bypass that default and remove items classified as system components. |\r\n| 'Switch'          |       | False     |           | String[]  | Specifies the custom switch(s) to be used during the uninstall process. This parameter is useful when the default silent switches do not work for a specific application. |\r\n| 'Force'           |       | False     |           | Switch    | Forces the removal of the application using an aggressive approach if the normal uninstallation methods fail. |\r\n\r\n## Output\r\n\r\n    .\\Remove-Application-log.txt\r\n    .\\Remove-Application-error.txt\n"})})]})}function m(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},l=i.createContext(o);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);