"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[440],{783930:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>h,contentTitle:()=>d,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"powershell/ps-get-volumethresholds","title":"Get-VolumeThresholds","description":"Documentation for the Get-VolumeThresholds command to gather and return information about each applicable volume and their requested threshold for space remaining.","source":"@site/docs/powershell/Get-VolumeThresholds.md","sourceDirName":"powershell","slug":"/powershell/ps-get-volumethresholds","permalink":"/proval-docs/docs/powershell/ps-get-volumethresholds","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Get-VolumeThresholds.md","tags":[{"inline":false,"label":"Disk Encryption","permalink":"/proval-docs/docs/tags/disk-encryption","description":"Documents on encrypting disk drives and data protection methods"},{"inline":false,"label":"Performance","permalink":"/proval-docs/docs/tags/performance","description":"Documents related to enhancing system and application performance"}],"version":"current","frontMatter":{"id":"ps-get-volumethresholds","title":"Get-VolumeThresholds","title_meta":"Get-VolumeThresholds","keywords":["volume","threshold","disk","space"],"description":"Documentation for the Get-VolumeThresholds command to gather and return information about each applicable volume and their requested threshold for space remaining.","tags":["disk-encryption","performance"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-VolumeExhaustionEstimate","permalink":"/proval-docs/docs/powershell/ps-get-volumeexhaustionestimate"},"next":{"title":"Get-WifiProfile","permalink":"/proval-docs/docs/powershell/ps-get-wifiprofile"}}');var n=r(474848),l=r(28453);const i={id:"ps-get-volumethresholds",title:"Get-VolumeThresholds",title_meta:"Get-VolumeThresholds",keywords:["volume","threshold","disk","space"],description:"Documentation for the Get-VolumeThresholds command to gather and return information about each applicable volume and their requested threshold for space remaining.",tags:["disk-encryption","performance"],draft:!1,unlisted:!1},d=void 0,h={},o=[{value:"Description",id:"description",level:2},{value:"Dynamic Mode",id:"dynamic-mode",level:3},{value:"Static Mode",id:"static-mode",level:3},{value:"Example",id:"example",level:3},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Dynamic Mode",id:"dynamic-mode-1",level:3},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function a(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.p,{children:"Gathers and returns information about each applicable volume and their requested threshold for space remaining. The script has two modes: Dynamic and Static."}),"\n",(0,n.jsx)(s.h3,{id:"dynamic-mode",children:"Dynamic Mode"}),"\n",(0,n.jsxs)(s.p,{children:["In Dynamic mode, the script uses the ",(0,n.jsx)(s.a,{href:"/proval-docs/docs/powershell/ps-get-volumeexhaustionestimate",children:"Get-VolumeExhaustionEstimate"})," script to generate data points for the size of the volume over time. Once the number of data points crosses a threshold (defined by the parameter ",(0,n.jsx)(s.code,{children:"MinimumSamples"}),"), an estimation of the volume space X days before exhaustion is generated (where X is the value of ",(0,n.jsx)(s.code,{children:"DaysToLead"}),"). This estimation is then returned as a threshold for the target volume."]}),"\n",(0,n.jsxs)(s.p,{children:["If not enough samples have been gathered or the ",(0,n.jsx)(s.a,{href:"/proval-docs/docs/powershell/ps-get-volumeexhaustionestimate",children:"Get-VolumeExhaustionEstimate"})," script fails to download, the script falls back to Static mode."]}),"\n",(0,n.jsx)(s.h3,{id:"static-mode",children:"Static Mode"}),"\n",(0,n.jsxs)(s.p,{children:["In Static mode, a ",(0,n.jsx)(s.code,{children:"hashtable"})," array is passed into the ",(0,n.jsx)(s.code,{children:"ThresholdDefinitions"})," parameter. Each hashtable must have the following name-value pairs:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:"@{\r\n    MaxSize = value1 # The maximum size for this threshold (1GB, 200GB, 1TB ...)\r\n    ThresholdType = value2 # The type of threshold (Percent or Number)\r\n    Threshold = value3 # The value for the threshold. 1 - 100 if ThresholdType is percent, otherwise can be any number greater than 0.\r\n},\r\n@{\r\n    MaxSize = value4\r\n    ThresholdType = value5\r\n    Threshold = value6\r\n},\r\n## ...\n"})}),"\n",(0,n.jsxs)(s.p,{children:["These hashtables are used to categorize the volumes and assign the best fit threshold based on that categorization. If a volume is found to be greater than the greatest ",(0,n.jsx)(s.code,{children:"MaxSize"})," in the ",(0,n.jsx)(s.code,{children:"hashtable"})," array, then it is assigned the threshold of that greatest ",(0,n.jsx)(s.code,{children:"MaxSize"})," definition."]}),"\n",(0,n.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.p,{children:"A server has 3 volumes: C, D, and F."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"C - 50GB\r\nD - 2048GB\r\nF - 10240GB\n"})}),"\n",(0,n.jsx)(s.p,{children:"The hashtables passed into the script are as follows:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:"@{\r\n    MaxSize = 40GB\r\n    ThresholdType = Percent\r\n    Threshold = 10\r\n},\r\n@{\r\n    MaxSize = 1024GB\r\n    ThresholdType = Percent\r\n    Threshold = 5\r\n},\r\n@{\r\n    MaxSize = 4096GB\r\n    ThresholdType = Number\r\n    Threshold = 100GB\r\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"The following assignments are generated:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"C - Threshold 5% (Greater than 40GB and less than 1024GB)\r\nD - Threshold 100GB (Greater than 1024GB and less than 4096GB)\r\nF - Threshold 100GB (Greater than all MaxSize definitions. Uses the greatest MaxSize definition available.)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"requirements",children:"Requirements"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"PowerShell v5"}),"\n",(0,n.jsx)(s.li,{children:"Must be run as an Administrator"}),"\n",(0,n.jsx)(s.li,{children:"Internet access (for Dynamic mode)"}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"All parameters are validated before processing."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Variable initialization is performed based on the requested mode (Dynamic or Static)."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"If variable initialization fails for Dynamic mode, the script falls back to Static mode."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Volumes to process are gathered based on the passed parameters."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Each gathered volume is then looped through."}),"\n",(0,n.jsx)(s.h3,{id:"dynamic-mode-1",children:"Dynamic Mode"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Attempt to match the current volume with an entry in the ",(0,n.jsx)(s.code,{children:"$estimates"})," variable.","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"If no match is found, then fall back to Static mode."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.li,{children:"Set the threshold for the volume based on the matched estimate."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("br",{}),"### Static Mode"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Determine what size type the volume is based on the passed thresholds."}),"\n",(0,n.jsx)(s.li,{children:"Apply the threshold rule set based on the size type."}),"\n",(0,n.jsx)(s.li,{children:"Calculate the threshold if applicable."}),"\n",(0,n.jsx)(s.li,{children:"Add the generated object to the list of return objects."}),"\n"]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("br",{}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Return the list of objects."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:".\\Get-VolumeThresholds.ps1\n"})}),"\n",(0,n.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters, and with a size greater than or equal to 100MB. Any volume less than or equal to 256GB will have a threshold of 11% of space. Any volume less than or equal to 1024GB will have a threshold of 10 gigabytes of space. Any volume greater than 1024GB will have a threshold of 10 gigabytes of space."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:".\\Get-VolumeThresholds.ps1 -MinimumSize 100MB -ThresholdDefinitions @(\r\n    @{ MaxSize = 256GB; ThresholdType = 'Percent'; Threshold = 11 },\r\n    @{ MaxSize = 1024GB; ThresholdType = 'Number'; Threshold = 10GB }\r\n)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Searches for all fixed and removable volumes, with or without drive letters."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:".\\Get-VolumeThresholds.ps1 -d 'Fixed', 'Removable' -u\n"})}),"\n",(0,n.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters except 'C'."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:".\\Get-VolumeThresholds.ps1 -e 'C'\n"})}),"\n",(0,n.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters. Suppresses all console output other than the return object."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:".\\Get-VolumeThresholds.ps1 -Quiet\n"})}),"\n",(0,n.jsx)(s.p,{children:"Searches for all fixed volumes where their drive letter is not 'X' and their size is greater than or equal to 10GB. Generates a dynamic threshold based on the trending drive space of the discovered volumes. Suppresses all console output other than the return object."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:".\\Get-VolumeThresholds.ps1 -DynamicThresholds -e 'X' -MinimumSize 10GB -Quiet\n"})}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Alias"}),(0,n.jsx)(s.th,{children:"Required"}),(0,n.jsx)(s.th,{children:"Default"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"MinimumSize"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"m"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"1MB"})}),(0,n.jsx)(s.td,{children:"Int64"}),(0,n.jsx)(s.td,{children:"The minimum size of the volume to search for. Any volume under this limit will be excluded."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"ThresholdDefinitions"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"t"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"See script"})}),(0,n.jsx)(s.td,{children:"hashtable[]"}),(0,n.jsxs)(s.td,{children:["A list of hashtables representing the thresholds to check for. The hashtables must have the following properties:",(0,n.jsx)("br",{}),"- MaxSize - The maximum volume size that the specified threshold applies to.",(0,n.jsx)("br",{}),"- ThresholdType - The type of threshold to use. Must be either 'Percent' or 'Number'",(0,n.jsx)("br",{}),"- Threshold - The threshold to calculate for the volume. If ThresholdType is 'Percent', this must be under 100."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"SkipFallback"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"sf"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"False"})}),(0,n.jsx)(s.td,{children:"Switch"}),(0,n.jsx)(s.td,{children:"Prevent the use of fallback thresholds. Volumes with too few samples will not have a threshold returned. This requires that Dynamic thresholds are being used."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"DynamicThresholds"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"dt"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"False"})}),(0,n.jsx)(s.td,{children:"Switch"}),(0,n.jsxs)(s.td,{children:["Use this switch to set the script to 'Dynamic' mode. This will download and run the ",(0,n.jsx)(s.code,{children:"Get-VolumeExhaustionEstimate"})," script and calculate a threshold if a valid number of samples are found."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"MinimumSamples"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"s"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"30"})}),(0,n.jsx)(s.td,{children:"Int"}),(0,n.jsx)(s.td,{children:"The minimum number of samples required to generate an estimation. If a volume does not meet this number of samples, the estimation will be skipped."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"DaysToReport"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"r"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"14"})}),(0,n.jsx)(s.td,{children:"Int"}),(0,n.jsx)(s.td,{children:"The maximum age of samples to use for generating an estimation."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"DaysToLead"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"l"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"7"})}),(0,n.jsx)(s.td,{children:"Int"}),(0,n.jsx)(s.td,{children:"The number of days before volume exhaustion to generate a volume space estimation for."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"DriveTypes"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"d"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"'Fixed'"})}),(0,n.jsx)(s.td,{children:"String[]"}),(0,n.jsxs)(s.td,{children:["A list of the types of drives to review space for. Valid options are:",(0,n.jsx)("br",{}),"- 'Unknown'",(0,n.jsx)("br",{}),"- 'Invalid Root Path'",(0,n.jsx)("br",{}),"- 'Removable'",(0,n.jsx)("br",{}),"- 'Fixed'",(0,n.jsx)("br",{}),"- 'Remote'",(0,n.jsx)("br",{}),"- 'CD-ROM'",(0,n.jsx)("br",{}),"- 'RAM Disk'"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"IncludeUnassignedVolumes"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"u"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"False"})}),(0,n.jsx)(s.td,{children:"Switch"}),(0,n.jsx)(s.td,{children:"Use this switch to include volumes that have not been assigned a drive letter."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"ExcludeDriveLetters"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"e"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"String[]"}),(0,n.jsx)(s.td,{children:"A list of drive letters to exclude from the review."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"Quiet"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"q"})}),(0,n.jsx)(s.td,{children:"False"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"False"})}),(0,n.jsx)(s.td,{children:"Switch"}),(0,n.jsx)(s.td,{children:"Suppresses all console output other than the return object by overwriting the Write-Host function."})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"output",children:"Output"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"System.Management.Automation.PSCustomObject\r\n\r\nName          MemberType\r\n----          ----------\r\nDriveLetter   NoteProperty\r\nSize          NoteProperty\r\nSizeRemaining NoteProperty\r\nThreshold     NoteProperty\r\nThresholdType NoteProperty\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:".\\Get-VolumeThresholds-log.txt\r\n.\\Get-VolumeThresholds-error.txt\r\n.\\Get-VolumeExhaustionEstimate-log.txt\r\n.\\Get-VolumeExhaustionEstimate-error.txt\n"})})]})}function c(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>d});var t=r(296540);const n={},l=t.createContext(n);function i(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);