"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[17530],{144445:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"cwa/scripts/f840d208-1cd4-409a-bf46-b6492790a184","title":"CWA - CWM Category Mapping","description":"This document provides a comprehensive guide on how to map categories from ConnectWise Automate to ConnectWise Manage, detailing the assumptions, process, and variables involved in the script execution.","source":"@site/docs/cwa/scripts/CWA - CWM Category Mapping.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/f840d208-1cd4-409a-bf46-b6492790a184","permalink":"/docs/cwa/scripts/f840d208-1cd4-409a-bf46-b6492790a184","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/CWA - CWM Category Mapping.md","tags":[{"inline":false,"label":"Database","permalink":"/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Setup","permalink":"/docs/tags/setup","description":"Documents on setting up software and hardware configurations"},{"inline":false,"label":"Update","permalink":"/docs/tags/update","description":"Documents discussing software and system updates and their management"}],"version":"current","frontMatter":{"id":"f840d208-1cd4-409a-bf46-b6492790a184","title":"CWA - CWM Category Mapping","title_meta":"CWA - CWM Category Mapping","keywords":["mapping","categories","automate","manage","query"],"description":"This document provides a comprehensive guide on how to map categories from ConnectWise Automate to ConnectWise Manage, detailing the assumptions, process, and variables involved in the script execution.","tags":["database","setup","update"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"CW Control RMM+ API - Offline Server AutoFix","permalink":"/docs/cwa/scripts/0004bd17-6820-4def-b5bf-96686276b7ae"},"next":{"title":"CWM - Automate - Agent - Command - Delete Running","permalink":"/docs/cwa/scripts/c9ae6663-8100-457c-abb8-d210f9fd8f87"}}');var s=n(474848),a=n(28453);const r={id:"f840d208-1cd4-409a-bf46-b6492790a184",title:"CWA - CWM Category Mapping",title_meta:"CWA - CWM Category Mapping",keywords:["mapping","categories","automate","manage","query"],description:"This document provides a comprehensive guide on how to map categories from ConnectWise Automate to ConnectWise Manage, detailing the assumptions, process, and variables involved in the script execution.",tags:["database","setup","update"],draft:!1,unlisted:!1},d=void 0,l={},o=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"User Variables",id:"user-variables",level:4},{value:"Process",id:"process",level:2},{value:"Output",id:"output",level:2},{value:"FAQ",id:"faq",level:2}];function c(e){const t={br:"br",h2:"h2",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"This script will map categories from Automate to Manage."}),"\n",(0,s.jsx)(t.p,{children:"The following assumptions are made:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The minimum desired without setting any user variable is to apply mapping to the board and the type."}),"\n",(0,s.jsx)(t.li,{children:"Specifying 1 in subtype and 0 in item will result in mapping the board, the type, and the subtype."}),"\n",(0,s.jsx)(t.li,{children:"Specifying 1 in item and 0 in subtype will result in mapping the board, the type, the subtype, and the item."}),"\n",(0,s.jsx)(t.li,{children:"Specifying 1 in item and 1 in subtype will result in mapping the board, the type, the subtype, and the item."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Sample Run",src:n(967034).A+"",width:"484",height:"428"})}),"\n",(0,s.jsx)(t.p,{children:"This will map the board, type, and subtype to Manage."}),"\n",(0,s.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"CW Manage Plugin Setup and Service Board import must be completed."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(t.p,{children:"Document the various variables in the script. Delete any section that is not relevant to your script."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ICQUERY"}),(0,s.jsx)(t.td,{children:"Holds the SQL query to get the categories"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MapToManageQuery"}),(0,s.jsx)(t.td,{children:"Maps the query to the Manage table"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"UpdateExistingQuery"}),(0,s.jsx)(t.td,{children:"Updates any existing category"})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"user-variables",children:"User Variables"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Example"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Subtype"}),(0,s.jsx)(t.td,{children:"1"}),(0,s.jsx)(t.td,{children:"False"}),(0,s.jsx)(t.td,{children:"Set to 1 to include subtype in mapping"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Item"}),(0,s.jsx)(t.td,{children:"1"}),(0,s.jsx)(t.td,{children:"False"}),(0,s.jsx)(t.td,{children:"Set to 1 to include item in mapping; trumps subtype."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"process",children:"Process"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"If a backup hasn't occurred in the last 24 hours, log the issue and exit with an error."}),"\n",(0,s.jsx)(t.li,{children:"Determine the scope of the mapping."}),"\n",(0,s.jsx)(t.li,{children:"Set the query variables based on the desired mapping."}),"\n",(0,s.jsx)(t.li,{children:"Execute the query variables."}),"\n",(0,s.jsx)(t.li,{children:"Exit."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Script log"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Q:"})," What happens if I set both Subtype and Item to 1?",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"A:"})," The script checks for Item first, as it trumps Subtype, and adds both the subtype and the item mapping."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},967034:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/image_1-74d25790ed04d9287a9689529a65e84b.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var i=n(296540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);