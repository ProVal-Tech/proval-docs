"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[4874],{4684:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"powershell/ps-remove-powerplan","title":"Remove-PowerPlan","description":"Documentation for the Remove-PowerPlan command to remove a specified Power Plan from the computer.","source":"@site/docs/powershell/Remove-PowerPlan.md","sourceDirName":"powershell","slug":"/powershell/ps-remove-powerplan","permalink":"/docs/powershell/ps-remove-powerplan","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/docs/tree/main/packages/create-docusaurus/templates/shared/docs/powershell/Remove-PowerPlan.md","tags":[{"inline":false,"label":"Configuration","permalink":"/docs/tags/configuration","description":"Content related to configuring a device."},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Content related to the Windows operating system."},{"inline":false,"label":"Performance","permalink":"/docs/tags/performance","description":"Content related to measuring or improving system performance."}],"version":"current","frontMatter":{"id":"ps-remove-powerplan","title":"Remove-PowerPlan","title_meta":"Remove-PowerPlan Command","keywords":["remove","powerplan","configuration","energy"],"description":"Documentation for the Remove-PowerPlan command to remove a specified Power Plan from the computer.","tags":["configuration","windows","performance"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Remove-PathVariable","permalink":"/docs/powershell/ps-remove-pathvariable"},"next":{"title":"Remove-SentinelOne","permalink":"/docs/powershell/ps-remove-sentinelone"}}');var o=n(4848),s=n(8453);const i={id:"ps-remove-powerplan",title:"Remove-PowerPlan",title_meta:"Remove-PowerPlan Command",keywords:["remove","powerplan","configuration","energy"],description:"Documentation for the Remove-PowerPlan command to remove a specified Power Plan from the computer.",tags:["configuration","windows","performance"],draft:!1,unlisted:!1},l=void 0,a={},d=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function c(e){const r={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(r.p,{children:"Removes the specified Power Plan from the computer."}),"\n",(0,o.jsx)(r.h2,{id:"requirements",children:"Requirements"}),"\n",(0,o.jsx)(r.p,{children:"The Power Plan should exist on the computer."}),"\n",(0,o.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["The script expects a mandatory parameter ",(0,o.jsx)(r.code,{children:"Name,"})," which specifies the desired Power Plan`s name."]}),"\n",(0,o.jsxs)(r.li,{children:["Retrieves a list of available Power Plans using ",(0,o.jsx)(r.code,{children:"powercfg /list."})]}),"\n",(0,o.jsx)(r.li,{children:"Creates an array of Power Plans, including their names, GUIDs, and active status."}),"\n",(0,o.jsxs)(r.li,{children:["Verifies if the specified Power Plan (",(0,o.jsx)(r.code,{children:"Name"}),") exists in the array of available Power Plans."]}),"\n",(0,o.jsx)(r.li,{children:"If the specified Power Plan exists, retrieves its GUID."}),"\n",(0,o.jsxs)(r.li,{children:["Attempts to remove the power plan using ",(0,o.jsx)(r.code,{children:"powercfg /delete"})," $planGUID."]}),"\n",(0,o.jsx)(r.li,{children:"Handles errors and exceptions during the removal process."}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["Removes the ",(0,o.jsx)(r.code,{children:"Balanced"})," Power Plan from the computer."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-powershell",children:"   PS C:\\> .\\Remove-PowerPlan.ps1 -Name 'Balanced'\n"})}),"\n",(0,o.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Parameter"}),(0,o.jsx)(r.th,{children:"Alias"}),(0,o.jsx)(r.th,{children:"Required"}),(0,o.jsx)(r.th,{children:"Default"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsx)(r.tbody,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"Name"})}),(0,o.jsx)(r.td,{}),(0,o.jsx)(r.td,{children:"True"}),(0,o.jsx)(r.td,{}),(0,o.jsx)(r.td,{children:"String"}),(0,o.jsx)(r.td,{children:"Name of the existing Power Plan to be removed."})]})})]}),"\n",(0,o.jsx)(r.h2,{id:"output",children:"Output"}),"\n",(0,o.jsx)(r.p,{children:".\\Remove-PowerPlan-log.txt\r\n.\\Remove-PowerPlan-Error.txt"})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var t=n(6540);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);