"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[91720],{75156:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>S,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cwa/monitors/e2fc5d7b-d202-4511-8807-8ac000d104a1","title":"Implement - Remote Monitor - Domain Trust Relationship Check","description":"This document provides a step-by-step guide on how to create a SQL query to monitor domain-joined machines while excluding domain controllers. It includes instructions for inserting sensor checks, obtaining group IDs, and setting up alerts for domain trust relationship failures.","source":"@site/docs/cwa/monitors/Implement - Remote Monitor - Domain Trust Relationship Check.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/e2fc5d7b-d202-4511-8807-8ac000d104a1","permalink":"/docs/cwa/monitors/e2fc5d7b-d202-4511-8807-8ac000d104a1","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Implement - Remote Monitor - Domain Trust Relationship Check.md","tags":[{"inline":false,"label":"Database","permalink":"/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"e2fc5d7b-d202-4511-8807-8ac000d104a1","title":"Implement - Remote Monitor - Domain Trust Relationship Check","title_meta":"Implement - Remote Monitor - Domain Trust Relationship Check","keywords":["domain","machines","controllers","sql","monitor","check","groupid"],"description":"This document provides a step-by-step guide on how to create a SQL query to monitor domain-joined machines while excluding domain controllers. It includes instructions for inserting sensor checks, obtaining group IDs, and setting up alerts for domain trust relationship failures.","tags":["database","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Implement - Remote Monitor - Domain Admin Account Lockout","permalink":"/docs/cwa/monitors/b582b836-52e5-4908-b154-791e0f95f7db"},"next":{"title":"Implement - Remote Monitor - HP Hardware Monitoring","permalink":"/docs/cwa/monitors/4e3fc053-3ccd-4262-b8e8-662222500e06"}}');var a=r(474848),o=r(28453);const s={id:"e2fc5d7b-d202-4511-8807-8ac000d104a1",title:"Implement - Remote Monitor - Domain Trust Relationship Check",title_meta:"Implement - Remote Monitor - Domain Trust Relationship Check",keywords:["domain","machines","controllers","sql","monitor","check","groupid"],description:"This document provides a step-by-step guide on how to create a SQL query to monitor domain-joined machines while excluding domain controllers. It includes instructions for inserting sensor checks, obtaining group IDs, and setting up alerts for domain trust relationship failures.",tags:["database","windows"],draft:!1,unlisted:!1},i=void 0,d={},c=[{value:"Step 1",id:"step-1",level:2},{value:"Step 2",id:"step-2",level:2},{value:"Step 3",id:"step-3",level:2},{value:"Step 4",id:"step-4",level:2},{value:"Step 5",id:"step-5",level:2},{value:"Step 6",id:"step-6",level:2}];function R(e){const n={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"step-1",children:"Step 1"}),"\n",(0,a.jsx)(n.p,{children:"Run this SQL query from a RAWSQL monitor set to import the required search."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"INSERT INTO `sensorchecks`  \r\n   (`Name`, `SQL`, `QueryType`, `ListDATA`, `FolderID`, `GUID`, `SearchXML`) \r\nSELECT  \r\n   'Domain Joined Machines excluding Domain Controllers' as `Name`,\r\n   'SELECT \r\n   computers.computerid as `Computer Id`,\r\n   computers.name as `Computer Name`,\r\n   clients.name as `Client Name`,\r\n   computers.domain as `Computer Domain`,\r\n   computers.username as `Computer User`,\r\n   Computers.Domain as `Computer.Network.Domain`\r\nFROM Computers \r\nLEFT JOIN inv_operatingsystem ON (Computers.ComputerId=inv_operatingsystem.ComputerId)\r\nLEFT JOIN Clients ON (Computers.ClientId=Clients.ClientId)\r\nLEFT JOIN Locations ON (Computers.LocationId=Locations.LocationID)\r\nWHERE \r\n((((NOT ((Computers.Domain like 'DC:%'))) AND (Computers.Domain like '%.%'))))' as `SQL`,\r\n   '4' as `QueryType`,\r\n   'Select||=||=||=|^Select|||||||^' as `ListDATA`,\r\n   '3' as `FolderID`,\r\n   '664b9d5e-b0b0-4e5b-b0e3-3ea9ad184462' as `GUID`, \r\n   '<LabTechAbstractSearch><asn><st>AndNode</st><cn><asn><st>AndNode</st><cn><asn><st>NotNode</st><cn><asn><st>ComparisonNode</st><lon>Computer.Network.Domain</lon><lok>Computer.Network.Domain</lok><lmo>TextLike</lmo><dv>DC:%</dv><dk>DC:%</dk></asn></cn></asn><asn><st>ComparisonNode</st><lon>Computer.Network.Domain</lon><lok>Computer.Network.Domain</lok><lmo>TextLike</lmo><dv>%.%</dv><dk>%.%</dk></asn></cn></asn></cn></asn></LabTechAbstractSearch>' as `SearchXML`\r\nFROM  \r\n   (SELECT MIN(computerid) FROM computers) a\r\nWHERE  \r\n   (SELECT Count(0) From sensorchecks where `GUID` = '664b9d5e-b0b0-4e5b-b0e3-3ea9ad184462') = 0;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"step-2",children:"Step 2"}),"\n",(0,a.jsx)(n.p,{children:"Obtain the group ID(s) of the group(s) that the remote monitor should be applied to."}),"\n",(0,a.jsx)(n.h2,{id:"step-3",children:"Step 3"}),"\n",(0,a.jsxs)(n.p,{children:["Copy the following query and replace ",(0,a.jsx)(n.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the Group ID(s) of the relevant groups. (The string to replace can be found at the very bottom of the query, right after ",(0,a.jsx)(n.strong,{children:"WHERE"}),")"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SET @searchid = (SELECT MIN(sensid) FROM sensorchecks WHERE GUID = '664b9d5e-b0b0-4e5b-b0e3-3ea9ad184462');    \r\nINSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n@searchid as `SearchID`,\r\n'ProVal - Production - Domain Trust Relationship Check' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'Domain trust relationship failure detected on %ComputerName%~~~The trust relationship between this workstation and the primary domain has been reestablished.!!!Domain trust relationship failure detected on %ComputerName%~~~The trust relationship between this workstation and the primary domain failed for %ComputerName%. %RESULT%' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'3600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"$output = cmd.exe /c nltest /sc_verify:$env:userdomain; if ($LASTEXITCODE -gt 0) { return 'Domain trust relationship failure detected.' + $($output | Out-String)}\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'10|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))|11|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))%7C(failed: Status)|10|(failed: Status)' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (<strong>YOUR COMMA SEPARATED LIST OF GROUPID(S)</strong>)\r\nAND m.groupid NOT IN  (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Domain Trust Relationship Check');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"step-4",children:"Step 4"}),"\n",(0,a.jsx)(n.p,{children:"An example of the query with group IDs and modified thresholds."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SET @searchid = (SELECT MIN(sensid) FROM sensorchecks WHERE GUID = '664b9d5e-b0b0-4e5b-b0e3-3ea9ad184462');    \r\nINSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n@searchid as `SearchID`,\r\n'ProVal - Production - Domain Trust Relationship Check' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'Domain trust relationship failure detected on %ComputerName%~~~The trust relationship between this workstation and the primary domain has been reestablished.!!!Domain trust relationship failure detected on %ComputerName%~~~The trust relationship between this workstation and the primary domain failed for %ComputerName%. %RESULT%' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'3600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -ExecutionPolicy Bypass -Command \"$output = cmd.exe /c nltest /sc_verify:$env:userdomain; if ($LASTEXITCODE -gt 0) { return 'Domain trust relationship failure detected.' + $($output | Out-String)}\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'10|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))|11|((^((OK){0,}(\\\\r\\\\n){0,}[\\\\r\\\\n]{0,}\\\\s{0,})$)%7C(^$))%7C(failed: Status)|10|(failed: Status)' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (<strong>2,3,855,856</strong>)\r\nAND m.groupid NOT IN  (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - Domain Trust Relationship Check');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"step-5",children:"Step 5"}),"\n",(0,a.jsx)(n.p,{children:"Check the concerned groups and ensure the monitor set is created and configured with the correct search."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Limit to:"})," ",(0,a.jsx)(n.code,{children:"Domain Joined Machines excluding Domain Controllers"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Image",src:r(517262).A+"",width:"557",height:"250"})}),"\n",(0,a.jsx)(n.h2,{id:"step-6",children:"Step 6"}),"\n",(0,a.jsx)(n.p,{children:"Set the appropriate alert template."})]})}function S(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(R,{...e})}):R(e)}},517262:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/image_1-b8e587163099be2d6447f9f65f6b9eaf.png"},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var t=r(296540);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);