"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[75472],{992942:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>S,frontMatter:()=>s,metadata:()=>n,toc:()=>R});const n=JSON.parse('{"id":"cwa/monitors/7c397ba6-0b68-421e-9315-3377ad5452b3","title":"Import - Remote Monitor - SMB1 Detection","description":"This document provides a step-by-step guide on how to apply a remote monitor to specific groups within a system. It includes instructions on obtaining group IDs, constructing the SQL query, and executing it to set up the monitor correctly.","source":"@site/docs/cwa/monitors/Import - Remote Monitor - SMB1 Detection.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/7c397ba6-0b68-421e-9315-3377ad5452b3","permalink":"/proval-docs/docs/cwa/monitors/7c397ba6-0b68-421e-9315-3377ad5452b3","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Import - Remote Monitor - SMB1 Detection.md","tags":[{"inline":false,"label":"Database","permalink":"/proval-docs/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Installation","permalink":"/proval-docs/docs/tags/installation","description":"Documents on installing software and configuring systems"}],"version":"current","frontMatter":{"id":"7c397ba6-0b68-421e-9315-3377ad5452b3","title":"Import - Remote Monitor - SMB1 Detection","title_meta":"Import - Remote Monitor - SMB1 Detection","keywords":["remote","monitor","groupid","query","execution"],"description":"This document provides a step-by-step guide on how to apply a remote monitor to specific groups within a system. It includes instructions on obtaining group IDs, constructing the SQL query, and executing it to set up the monitor correctly.","tags":["database","installation"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Import - Remote Monitor - SMB Signing Detection","permalink":"/proval-docs/docs/cwa/monitors/8283d8a6-8866-47c2-a6a3-a5bf288664f2"},"next":{"title":"Import - Remote Monitor - _Automation Directory - Remove Obsolete .ps1 Change","permalink":"/proval-docs/docs/cwa/monitors/e2c56554-7f1d-4f1a-b1a2-37a0bd343629"}}');var o=t(474848),a=t(28453);const s={id:"7c397ba6-0b68-421e-9315-3377ad5452b3",title:"Import - Remote Monitor - SMB1 Detection",title_meta:"Import - Remote Monitor - SMB1 Detection",keywords:["remote","monitor","groupid","query","execution"],description:"This document provides a step-by-step guide on how to apply a remote monitor to specific groups within a system. It includes instructions on obtaining group IDs, constructing the SQL query, and executing it to set up the monitor correctly.",tags:["database","installation"],draft:!1,unlisted:!1},i=void 0,c={},R=[{value:"Steps to Apply Remote Monitor",id:"steps-to-apply-remote-monitor",level:2},{value:"1. Obtain Group IDs",id:"1-obtain-group-ids",level:3},{value:"2. Construct the SQL Query",id:"2-construct-the-sql-query",level:3},{value:"3. Example of a Query with a Group ID",id:"3-example-of-a-query-with-a-group-id",level:3},{value:"4. Execute the Query",id:"4-execute-the-query",level:3},{value:"5. Locate Your Remote Monitor",id:"5-locate-your-remote-monitor",level:3}];function d(e){const r={br:"br",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"steps-to-apply-remote-monitor",children:"Steps to Apply Remote Monitor"}),"\n",(0,o.jsx)(r.h3,{id:"1-obtain-group-ids",children:"1. Obtain Group IDs"}),"\n",(0,o.jsx)(r.p,{children:"Obtain the group ID(s) of the group(s) to which the remote monitor should be applied."}),"\n",(0,o.jsx)(r.h3,{id:"2-construct-the-sql-query",children:"2. Construct the SQL Query"}),"\n",(0,o.jsxs)(r.p,{children:["Copy the following query and replace ",(0,o.jsx)(r.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the group ID(s) of the relevant groups:",(0,o.jsx)(r.br,{}),"\n",(0,o.jsxs)(r.em,{children:["(The string to replace can be found at the very bottom of the query, right after ",(0,o.jsx)(r.code,{children:"WHERE"}),")"]})]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"INSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Production - SMB1 Detection' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'%NAME% %STATUS% on %CLIENTNAME%//%COMPUTERNAME% at %LOCATIONNAME% for %FIELDNAME% result %RESULT%.!!!%NAME% %STATUS% on %CLIENTNAME%//%COMPUTERNAME% at %LOCATIONNAME% for %FIELDNAME% result %RESULT%.' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'86400' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -nologo -noprofile -Command \\\"$ErroractionPreference= /'SilentlyContinue/';  $ver = [Version](get-WmiObject -Class Win32_OperatingSystem).version; /\\\"$($ver.Major).$($ver.Minor)/\\\"; if($ver -ge [version]/'6.3/') {if ( ( (Get-SmbServerConfiguration).EnableSMB1Protocol )  -ne /'True/') {return /'False/'} else {return /'True/'} } else { $s =  (Get-Item HKLM://SYSTEM//CurrentControlSet//Services//LanmanServer//Parameters | ForEach-Object {Get-ItemProperty $_.pspath -Name SMB1} );  if ( ( -not $s ) -or ( $s -contains 1 )) {return /'True/'} else {return /'False/'} }\\\"' as `DataOut`,\r\n'12' as `Comparor`,\r\n'' as `DataIn`,\r\n'' as `IDField`,\r\n'0' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (YOUR COMMA SEPARATED LIST OF GROUPID(S))\r\nAND m.groupid NOT IN (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - SMB1 Detection')\n"})}),"\n",(0,o.jsx)(r.h3,{id:"3-example-of-a-query-with-a-group-id",children:"3. Example of a Query with a Group ID"}),"\n",(0,o.jsx)(r.p,{children:"An example of a query with a group ID:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"INSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Production - SMB1 Detection' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'%NAME% %STATUS% on %CLIENTNAME%//%COMPUTERNAME% at %LOCATIONNAME% for %FIELDNAME% result %RESULT%.!!!%NAME% %STATUS% on %CLIENTNAME%//%COMPUTERNAME% at %LOCATIONNAME% for %FIELDNAME% result %RESULT%.' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'86400' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -nologo -noprofile -Command \\\"$ErroractionPreference= /'SilentlyContinue/';  $ver = [Version](get-WmiObject -Class Win32_OperatingSystem).version; /\\\"$($ver.Major).$($ver.Minor)/\\\"; if($ver -ge [version]/'6.3/') {if ( ( (Get-SmbServerConfiguration).EnableSMB1Protocol )  -ne /'True/') {return /'False/'} else {return /'True/'} } else { $s =  (Get-Item HKLM://SYSTEM//CurrentControlSet//Services//LanmanServer//Parameters | ForEach-Object {Get-ItemProperty $_.pspath -Name SMB1} );  if ( ( -not $s ) -or ( $s -contains 1 )) {return /'True/'} else {return /'False/'} }\\\"' as `DataOut`,\r\n'12' as `Comparor`,\r\n'' as `DataIn`,\r\n'' as `IDField`,\r\n'0' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'1' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (2)\r\nAND m.groupid NOT IN (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - SMB1 Detection')\n"})}),"\n",(0,o.jsx)(r.h3,{id:"4-execute-the-query",children:"4. Execute the Query"}),"\n",(0,o.jsx)(r.p,{children:"Now execute your query from a RAWSQL monitor set."}),"\n",(0,o.jsx)(r.h3,{id:"5-locate-your-remote-monitor",children:"5. Locate Your Remote Monitor"}),"\n",(0,o.jsxs)(r.p,{children:["Locate your remote monitor by opening the group(s) remote monitors tab.",(0,o.jsx)(r.br,{}),"\n",(0,o.jsx)(r.strong,{children:"DO NOT"})," apply any alert template to this monitor set."]})]})}function S(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>i});var n=t(296540);const o={},a=n.createContext(o);function s(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);