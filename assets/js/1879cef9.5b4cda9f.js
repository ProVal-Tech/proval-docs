"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[40383],{112142:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"powershell/ps-get-vsaauditreports","title":"Get-VSAAuditReports","description":"Documentation for the Get-VSAAuditReports command to perform a Kaseya Onboarding Audit and output results to an Excel spreadsheet.","source":"@site/docs/powershell/Get-VSAAuditReports.md","sourceDirName":"powershell","slug":"/powershell/ps-get-vsaauditreports","permalink":"/proval-docs/docs/powershell/ps-get-vsaauditreports","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Get-VSAAuditReports.md","tags":[{"inline":false,"label":"Report","permalink":"/proval-docs/docs/tags/report","description":"Documents focused on generating and managing reports"},{"inline":false,"label":"Software","permalink":"/proval-docs/docs/tags/software","description":"Documents related to software applications and their lifecycle management"}],"version":"current","frontMatter":{"id":"ps-get-vsaauditreports","title":"Get-VSAAuditReports","title_meta":"Get-VSAAuditReports","keywords":["kaseya","audit","report","excel"],"description":"Documentation for the Get-VSAAuditReports command to perform a Kaseya Onboarding Audit and output results to an Excel spreadsheet.","tags":["report","software"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-UserRegistryValue","permalink":"/proval-docs/docs/powershell/ps-get-userregistryvalue"},"next":{"title":"Get-VolumeExhaustionEstimate","permalink":"/proval-docs/docs/powershell/ps-get-volumeexhaustionestimate"}}');var r=s(474848),i=s(28453);const o={id:"ps-get-vsaauditreports",title:"Get-VSAAuditReports",title_meta:"Get-VSAAuditReports",keywords:["kaseya","audit","report","excel"],description:"Documentation for the Get-VSAAuditReports command to perform a Kaseya Onboarding Audit and output results to an Excel spreadsheet.",tags:["report","software"],draft:!1,unlisted:!1},a=void 0,d={},l=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function c(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Performs much of the Kaseya Onboarding Audit and outputs to an Excel spreadsheet in the script directory."}),"\n",(0,r.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Requires an API User account with both REST and Data Warehouse access configured in the VSA."}),"\n",(0,r.jsx)(t.li,{children:"On-Prem Audit requires IP whitelisting to access. In lieu of whitelisting, the script can be run on the VSA server."}),"\n",(0,r.jsxs)(t.li,{children:["The REST API requires a native VSA user. If 'UserName must be an email address' is enabled in ",(0,r.jsx)(t.code,{children:"System > Configuration > Default Settings"}),", this must be temporarily disabled during API account creation."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.p,{children:"Uses VSAAPI to perform the following REST API requests and saves the results in CSV format in the 'CSVs' subfolder if data was returned:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"System\\Users"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"System\\Roles"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"System\\Scopes"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"Automation\\AgentProcs"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"Assetmgmt\\Agents"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Uses VSAAPI to perform the following Data Warehouse API requests and saves the results in CSV format in the 'CSVs' subfolder if data was returned:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"DiscoveryActiveDirectoryDomainSummary"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"DiscoveryLanWatchNetworks"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"LanCacheAssignments"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"PatchPolicyMembers"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"Patches"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"PatchConfigurations"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"SoftwareManagementAlertProfiles"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"SoftwareManagementByAgentStats"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"SoftwareManagementDeploymentProfiles"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"MonitorEventSetAgentAssignments"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"MonitorSetAgentAssignments"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"MonitorSNMPSetAgentAssignments"})}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Uses the ImportExcel module to write data to individual worksheets in an Excel spreadsheet named ",(0,r.jsx)(t.code,{children:"AuditResults.xlsx"}),". Automatically creates the following pivot tables according to auditing best practices, if data for the category was returned by the API:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Windows Build Versions"}),"\n",(0,r.jsx)(t.li,{children:"Patch Management Policies"}),"\n",(0,r.jsx)(t.li,{children:"Patch Reboot Actions"}),"\n",(0,r.jsx)(t.li,{children:"Patch AutoUpdate Configurations"}),"\n",(0,r.jsx)(t.li,{children:"Patch Statuses"}),"\n",(0,r.jsx)(t.li,{children:"Missing Approved Patches"}),"\n",(0,r.jsx)(t.li,{children:"SM Analysis Profiles"}),"\n",(0,r.jsx)(t.li,{children:"SM Assigned Deploy Profiles"}),"\n",(0,r.jsx)(t.li,{children:"SM Compliance"}),"\n",(0,r.jsx)(t.li,{children:"SM Missing Patches"}),"\n",(0,r.jsx)(t.li,{children:"Counter Monitors"}),"\n",(0,r.jsx)(t.li,{children:"Event Monitors"}),"\n",(0,r.jsx)(t.li,{children:"SNMP Monitors"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Requires all parameters. The API account must be configured in VSA prior to running, and REST API / Data Warehouse scopes must be provided. The Data Warehouse token must also be gathered."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-powershell",children:"./Get-VSAAuditReports.ps1 -BaseURL https://vsa.provaltech.com -VsaUserName apiServiceAccount -RestApiToken abcd-1234-efgh-5678 -DataWarehouseApiToken abcd-1234-efgh-5678\n"})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Server"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"VSA Base URL"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"APIUser"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"API User Name"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"RestApiToken"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"REST API Token"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"DataWarehouseApiToken"})}),(0,r.jsx)(t.td,{children:"True"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Data Warehouse API Token"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,r.jsx)(t.p,{children:"Location of output for log, result, and error files:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:".\\Get-VSAAuditReports-log.txt"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:".\\Get-VSAAuditReports-error.txt"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\AuditResults.xlsx"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\AgentProcedures.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\Agents.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\discoveryDomainList.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\discoveryLanWatchNetworks.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\LanCacheAssignments.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\MachineGroups.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\MonitorEventSetAgentAssignments.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\MonitorSetAgentAssignments.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\MonitorSNMPSetAgentAssignments.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\PatchConfigurations.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\Patches.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\PatchPolicyMembers.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\Roles.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\Scopes.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\SoftwareManagementAlertProfiles.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\SoftwareManagementByAgentStats.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\SoftwareManagementDeploymentProfiles.csv"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"$env:ProgramData\\_automation\\Audit\\CSVs\\Users.csv"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(296540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);