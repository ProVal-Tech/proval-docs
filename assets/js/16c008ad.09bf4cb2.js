"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[83096],{41508:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"cwa/dataviews/72e598df-0fcf-471d-9ee8-030986141642","title":"Agent - Agent Check-in Health","description":"This document provides an overview of an agent\u2019s check-in status in ConnectWise Automate (CWA), detailing whether the associated script has been executed for remediation. It includes dependencies, a breakdown of relevant columns, and the status of agents in relation to their connectivity and script execution.","source":"@site/docs/cwa/dataviews/Agent - Agent Check-in Health.md","sourceDirName":"cwa/dataviews","slug":"/cwa/dataviews/72e598df-0fcf-471d-9ee8-030986141642","permalink":"/proval-docs/docs/cwa/dataviews/72e598df-0fcf-471d-9ee8-030986141642","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/dataviews/Agent - Agent Check-in Health.md","tags":[{"inline":false,"label":"ConnectWise","permalink":"/proval-docs/docs/tags/connectwise","description":"Documents on ConnectWise platforms for IT service management"}],"version":"current","frontMatter":{"id":"72e598df-0fcf-471d-9ee8-030986141642","title":"Agent - Agent Check-in Health","title_meta":"Agent - Agent Check-in Health","keywords":["agent","checkin","status","remediation","script"],"description":"This document provides an overview of an agent\u2019s check-in status in ConnectWise Automate (CWA), detailing whether the associated script has been executed for remediation. It includes dependencies, a breakdown of relevant columns, and the status of agents in relation to their connectivity and script execution.","tags":["connectwise"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Adobe License Detection","permalink":"/proval-docs/docs/cwa/dataviews/cf0c479b-fce8-4af8-9ae2-24fd7fc2a7ed"},"next":{"title":"Agent - Agent Check-in Over 30 Days","permalink":"/proval-docs/docs/cwa/dataviews/a326b230-2a55-42c6-a9bd-59ad1b1c3288"}}');var s=n(474848),c=n(28453);const a={id:"72e598df-0fcf-471d-9ee8-030986141642",title:"Agent - Agent Check-in Health",title_meta:"Agent - Agent Check-in Health",keywords:["agent","checkin","status","remediation","script"],description:"This document provides an overview of an agent\u2019s check-in status in ConnectWise Automate (CWA), detailing whether the associated script has been executed for remediation. It includes dependencies, a breakdown of relevant columns, and the status of agents in relation to their connectivity and script execution.",tags:["connectwise"],draft:!1,unlisted:!1},d=void 0,r={},o=[{value:"Summary",id:"summary",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Columns",id:"columns",level:2}];function l(e){const t={a:"a",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"This dataview provides information about an agent's check-in status in CWA and whether the associated script has been run to attempt remediation. The data displayed is based on the script in the Dependencies section."}),"\n",(0,s.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://proval.itglue.com/5078775/docs/9770217",children:"CW RMM+ Plugin Configuration"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/18562eaa-d162-4362-98d3-4bbaa2922458",children:"Script - ScreenConnect Client - Connectivity - Audit*"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/7c0947f0-306b-4ae0-9bd7-dd15dfb0008c",children:"Script - Automate Agent - Auto Repair*"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Column"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Client"}),(0,s.jsx)(t.td,{children:"Client Name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Location"}),(0,s.jsx)(t.td,{children:"Location Name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Computer"}),(0,s.jsx)(t.td,{children:"Computer Name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Status"}),(0,s.jsxs)(t.td,{children:["Status of whether the agent is offline in Automate. ",(0,s.jsx)("br",{})," - Offline: The computer is offline in Automate as well as in ScreenConnect. ",(0,s.jsx)("br",{})," - Broken: The script ran against the agent but was not able to bring the Automate agent online. ",(0,s.jsx)("br",{})," - Undetermined: RMM+ Solution is not configured properly. ",(0,s.jsx)("br",{})," - Not Run Yet: The script has not been run against this agent yet."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Last Contact"}),(0,s.jsx)(t.td,{children:"Last contact of the agent with the Automate server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Last Contact ScreenConnect"}),(0,s.jsx)(t.td,{children:"Last contact of the agent with the ScreenConnect Portal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Last Script Check"}),(0,s.jsxs)(t.td,{children:["Last run date of the ",(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/7c0947f0-306b-4ae0-9bd7-dd15dfb0008c",children:"Script - Automate Agent - Auto Repair*"})," on the agent."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Operating System"}),(0,s.jsx)(t.td,{children:"Operating System of the computer."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Command Output"}),(0,s.jsxs)(t.td,{children:["Output of the command run by ",(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/18562eaa-d162-4362-98d3-4bbaa2922458",children:"Script - ScreenConnect Client - Connectivity - Audit*"})," to verify the current status of the computer in the ScreenConnect portal."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Clientid"}),(0,s.jsx)(t.td,{children:"Client ID (Hidden)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Locationid"}),(0,s.jsx)(t.td,{children:"Location ID (Hidden)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Computerid"}),(0,s.jsx)(t.td,{children:"Computer ID (Hidden)"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var i=n(296540);const s={},c=i.createContext(s);function a(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);