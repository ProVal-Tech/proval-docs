"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[5115],{691238:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"powershell/ec673596-37f8-4da2-b0ed-fdc347a98dfc","title":"Set-ServiceLogin","description":"Documentation for the Set-ServiceLogin command to change the service login account for a target service.","source":"@site/docs/powershell/Set-ServiceLogin.md","sourceDirName":"powershell","slug":"/powershell/ec673596-37f8-4da2-b0ed-fdc347a98dfc","permalink":"/docs/powershell/ec673596-37f8-4da2-b0ed-fdc347a98dfc","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Set-ServiceLogin.md","tags":[{"inline":false,"label":"Security","permalink":"/docs/tags/security","description":"Documents discussing security measures and practices for IT systems"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"ec673596-37f8-4da2-b0ed-fdc347a98dfc","title":"Set-ServiceLogin","title_meta":"Set-ServiceLogin","keywords":["service","login","account","change"],"description":"Documentation for the Set-ServiceLogin command to change the service login account for a target service.","tags":["security","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Set-PowerPlan","permalink":"/docs/powershell/05737947-e8d5-4711-a1d7-91a6db43358f"},"next":{"title":"Set-TargetUpgradeVersion","permalink":"/docs/powershell/630ab5c4-59dd-47cf-8784-b6a9ac8849fa"}}');var i=s(474848),n=s(28453);const c={id:"ec673596-37f8-4da2-b0ed-fdc347a98dfc",title:"Set-ServiceLogin",title_meta:"Set-ServiceLogin",keywords:["service","login","account","change"],description:"Documentation for the Set-ServiceLogin command to change the service login account for a target service.",tags:["security","windows"],draft:!1,unlisted:!1},d=void 0,l={},a=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"User Mode",id:"user-mode",level:3},{value:"System Mode",id:"system-mode",level:3},{value:"Examples",id:"examples",level:3},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function o(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Used to change the service login account for a target service."}),"\n",(0,i.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(t.p,{children:"PowerShell v5"}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(t.p,{children:["The script has two primary modes: ",(0,i.jsx)(t.strong,{children:"User"})," and ",(0,i.jsx)(t.strong,{children:"System"}),". User mode is denoted by passing the ",(0,i.jsx)(t.code,{children:"-User"})," and ",(0,i.jsx)(t.code,{children:"-Pass"})," parameters. System mode is denoted by passing the ",(0,i.jsx)(t.code,{children:"-System"})," switch."]}),"\n",(0,i.jsx)(t.h3,{id:"user-mode",children:"User Mode"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["If the ",(0,i.jsx)(t.code,{children:"-Force"})," switch is applied, the script will attempt to grant the user denoted by the ",(0,i.jsx)(t.code,{children:"-User"})," parameter the ",(0,i.jsx)(t.strong,{children:"Logon as a Service"})," right via ",(0,i.jsx)(t.code,{children:"secedit"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["The service will then be edited via the ",(0,i.jsx)(t.code,{children:"Change()"})," function of the ",(0,i.jsx)(t.code,{children:"win32_service"})," class.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["If the service fails to be changed, the error code will be translated to a message, and the ",(0,i.jsx)(t.code,{children:"-error.txt"})," log will be generated with that message before the script exits."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["The script will then attempt to restart the service.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["If the service fails to restart, the error code will be translated to a message, and the ",(0,i.jsx)(t.code,{children:"-error.txt"})," log will be generated with that message before the script exits."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"system-mode",children:"System Mode"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["The service will be edited via the ",(0,i.jsx)(t.code,{children:"Change()"})," function of the ",(0,i.jsx)(t.code,{children:"win32_service"})," class.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["If the service fails to be changed, the error code will be translated to a message, and the ",(0,i.jsx)(t.code,{children:"-error.txt"})," log will be generated with that message before the script exits."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["The script will then attempt to restart the service.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["If the service fails to restart, the error code will be translated to a message, and the ",(0,i.jsx)(t.code,{children:"-error.txt"})," log will be generated with that message before the script exits."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.p,{children:"Sets the Print Spooler service to run as User1."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-powershell",children:'.\\\\Set-ServiceLogin.ps1 -DisplayName "Print Spooler" -User "User1" -Pass "p@55w0rD"\n'})}),"\n",(0,i.jsx)(t.p,{children:"Sets the Print Spooler service to run as User1 and grants User1 the Logon as a Service right."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-powershell",children:'.\\\\Set-ServiceLogin.ps1 -Name Spooler -User "User1" -Pass "p@55w0rD" -Force\n'})}),"\n",(0,i.jsx)(t.p,{children:"Sets the Print Spooler service to run as 'Local System'."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-powershell",children:".\\\\Set-ServiceLogin.ps1 -Name Spooler -System\n"})}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--Name"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"ParamSet=Name,NameSystem - The service name to alter."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--DisplayName"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"ParamSet=DisplayName,DisplayNameSystem - The service display name to alter."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--User"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"ParamSet=Name,DisplayName - The username of the account to set the service to run as."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--Pass"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"ParamSet=Name,DisplayName - The password of the account to set the service to run as."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--System"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Switch (Bool)"}),(0,i.jsx)(t.td,{children:"ParamSet=NameSystem,DisplayNameSystem - Use this switch to set the service to run as the Local System account."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--Force"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"False"})}),(0,i.jsx)(t.td,{children:"Switch (Bool)"}),(0,i.jsx)(t.td,{children:"ParamSet=Name,DisplayName - Used with the -User and -Pass parameters. Grants Logon as a Service rights to the user."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,i.jsx)(t.p,{children:"Location of output for log, result, and error files."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:".\\\\Set-ServiceLogin-log.txt\r\n.\\\\Set-ServiceLogin-data.txt\r\n.\\\\Set-ServiceLogin-error.txt\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>d});var r=s(296540);const i={},n=r.createContext(i);function c(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);