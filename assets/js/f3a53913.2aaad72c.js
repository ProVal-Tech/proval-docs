"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[53912],{144568:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"powershell/ps-set-pathvariable","title":"Set-PathVariable","description":"Documentation for the Set-PathVariable command to set provided paths to the Environmental Path variable at the desired scope.","source":"@site/docs/powershell/Set-PathVariable.md","sourceDirName":"powershell","slug":"/powershell/ps-set-pathvariable","permalink":"/proval-docs/docs/powershell/ps-set-pathvariable","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Set-PathVariable.md","tags":[{"inline":false,"label":"Windows","permalink":"/proval-docs/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"ps-set-pathvariable","title":"Set-PathVariable","title_meta":"Set-PathVariable","keywords":["path","environment","variable","scope"],"description":"Documentation for the Set-PathVariable command to set provided paths to the Environmental Path variable at the desired scope.","tags":["windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Set-OfficeUpdateSchedule","permalink":"/proval-docs/docs/powershell/ps-set-officeupdateschedule"},"next":{"title":"Set-PowerPlan","permalink":"/proval-docs/docs/powershell/ps-set-powerplan"}}');var n=r(474848),s=r(28453);const i={id:"ps-set-pathvariable",title:"Set-PathVariable",title_meta:"Set-PathVariable",keywords:["path","environment","variable","scope"],description:"Documentation for the Set-PathVariable command to set provided paths to the Environmental Path variable at the desired scope.",tags:["windows"],draft:!1,unlisted:!1},l=void 0,o={},d=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function h(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Sets the provided path(s) to the Environmental Path variable for a specified scope."}),"\n",(0,n.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,n.jsx)(t.p,{children:"PowerShell V.5"}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"For each given path, reload the current environmental path variable for the desired scope."}),"\n",(0,n.jsx)(t.li,{children:"Search that scope for the given path. If it's present, return the current environmental path variable."}),"\n",(0,n.jsx)(t.li,{children:"Add the given path to the environmental path variable and return the updated environmental path variable."}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-powershell",children:".\\Set-PathVariable.ps1 -Path 'C:\\Documents and Settings','C:\\Config.Msi', 'C:\\Recovery','C:\\Intel' -Scope Machine\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This command will return the current ",(0,n.jsx)(t.code,{children:"$Env:Path"})," state for the machine after adding those paths to the variable."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-powershell",children:".\\Set-PathVariable.ps1 -Path 'C:\\something' -Scope User\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This command will return the current ",(0,n.jsx)(t.code,{children:"$Env:Path"})," state for the user after adding the specified path to the variable."]}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Alias"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Path"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"String[]"}),(0,n.jsx)(t.td,{children:"A list of paths to add to the desired scope."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Scope"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"False"}),(0,n.jsx)(t.td,{children:"Machine"}),(0,n.jsx)(t.td,{children:"System.EnvironmentVariableTarget"}),(0,n.jsx)(t.td,{children:"This designates the scoped environmental variable you wish to target: machine or user."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,n.jsx)(t.p,{children:"Standard Output"})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var a=r(296540);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);