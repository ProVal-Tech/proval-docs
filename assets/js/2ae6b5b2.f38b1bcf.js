"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[5654],{1251:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"powershell/ps-invoke-restartservice","title":"Invoke-RestartService","description":"Documentation for the Invoke-RestartService command to simultaneously restart multiple services with proper error handling.","source":"@site/docs/powershell/Invoke-RestartService.md","sourceDirName":"powershell","slug":"/powershell/ps-invoke-restartservice","permalink":"/proval-docs/docs/powershell/ps-invoke-restartservice","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/docs/tree/main/packages/create-docusaurus/templates/shared/docs/powershell/Invoke-RestartService.md","tags":[{"inline":false,"label":"Configuration","permalink":"/proval-docs/docs/tags/configuration","description":"Content related to configuring a device."},{"inline":false,"label":"Windows","permalink":"/proval-docs/docs/tags/windows","description":"Content related to the Windows operating system."},{"inline":false,"label":"Performance","permalink":"/proval-docs/docs/tags/performance","description":"Content related to measuring or improving system performance."}],"version":"current","frontMatter":{"id":"ps-invoke-restartservice","title":"Invoke-RestartService","title_meta":"Invoke-RestartService Command","keywords":["restart","service","taskkill","errorhandling"],"description":"Documentation for the Invoke-RestartService command to simultaneously restart multiple services with proper error handling.","tags":["configuration","windows","performance"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Invoke-RepairVolume","permalink":"/proval-docs/docs/powershell/ps-invoke-repairvolume"},"next":{"title":"Invoke-SetupDiag","permalink":"/proval-docs/docs/powershell/ps-invoke-setupdiag"}}');var n=r(4848),i=r(8453);const o={id:"ps-invoke-restartservice",title:"Invoke-RestartService",title_meta:"Invoke-RestartService Command",keywords:["restart","service","taskkill","errorhandling"],description:"Documentation for the Invoke-RestartService command to simultaneously restart multiple services with proper error handling.",tags:["configuration","windows","performance"],draft:!1,unlisted:!1},l=void 0,a={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Provide a Script that will simultaneously restart multiple services and provide proper error handling."}),"\n",(0,n.jsx)(t.p,{children:"Features:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Take no action on disabled services."}),"\n",(0,n.jsx)(t.li,{children:"In the event that a service can not be stopped normally that service's pid is obtained and used in a forced taskkill command.\r\nThe results of that command are used to either restart the service if it's stopped, or log an error."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Start the restart service jobs if not disabled."}),"\n",(0,n.jsx)(t.li,{children:"Wait until all jobs finish."}),"\n",(0,n.jsxs)(t.li,{children:["Get the job results","\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"If Success log success."}),"\n",(0,n.jsxs)(t.li,{children:["If failure get the PID and use a forced taskkill to attempt to stop the service.","\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["If taskkill is successful, restart the service by name, then wait 60 seconds and check the state of the service.","\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"If still running log as success."}),"\n",(0,n.jsx)(t.li,{children:"If failed log failure"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"If taskkill is not successful, log failure."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Remove any created jobs."}),"\n",(0,n.jsx)(t.li,{children:"Return the results."}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-powershell",children:".\\Invoke-RestartService.ps1 -ServiceNames SAAZDPMACTL, SAAZWatchDog, SAAZServerPlus, SAAZScheduler\n"})}),"\n",(0,n.jsx)(t.p,{children:"Restarts the SAAZDPMACTL, SAAZWatchDog, SAAZServerPlus, SAAZScheduler services and verifies successful completion."}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Alias"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"ServiceNames"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"String[]"}),(0,n.jsx)(t.td,{children:"A String array of service names to restart."})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,n.jsx)(t.p,{children:"Location of output for log, result, and error files.\r\n[System.Object]\r\n.\\Invoke-RestartService-log.txt"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>l});var s=r(6540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);