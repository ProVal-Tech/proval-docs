"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[35118],{952044:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"cwa/monitors/e6d09f37-fd0f-42a6-98a5-449f65673296","title":"Implement- SMB1 Traffic Detection","description":"This document provides a step-by-step guide to set up the SMB1 Traffic Detection Remote Monitor using SQL queries. It includes instructions for inserting necessary searches and groups, refreshing searches, and validating the setup.","source":"@site/docs/cwa/monitors/Implement- SMB1 Traffic Detection.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/e6d09f37-fd0f-42a6-98a5-449f65673296","permalink":"/proval-docs/docs/cwa/monitors/e6d09f37-fd0f-42a6-98a5-449f65673296","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Implement- SMB1 Traffic Detection.md","tags":[{"inline":false,"label":"Database","permalink":"/proval-docs/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Networking","permalink":"/proval-docs/docs/tags/networking","description":"Documents related to network infrastructure and management practices"}],"version":"current","frontMatter":{"id":"e6d09f37-fd0f-42a6-98a5-449f65673296","title":"Implement- SMB1 Traffic Detection","title_meta":"Implement- SMB1 Traffic Detection","keywords":["smb1","monitor","remote","detection","traffic"],"description":"This document provides a step-by-step guide to set up the SMB1 Traffic Detection Remote Monitor using SQL queries. It includes instructions for inserting necessary searches and groups, refreshing searches, and validating the setup.","tags":["database","networking"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Implement- Reset System Restore Disk Space Usage","permalink":"/proval-docs/docs/cwa/monitors/dcfe094a-b15b-4f06-8c8f-c6e211c7f9b0"},"next":{"title":"Implement- Uninstall Anydesk","permalink":"/proval-docs/docs/cwa/monitors/8b658a17-cb91-457a-9efc-4b8f676b0fb0"}}');var a=t(474848),o=t(28453);const s={id:"e6d09f37-fd0f-42a6-98a5-449f65673296",title:"Implement- SMB1 Traffic Detection",title_meta:"Implement- SMB1 Traffic Detection",keywords:["smb1","monitor","remote","detection","traffic"],description:"This document provides a step-by-step guide to set up the SMB1 Traffic Detection Remote Monitor using SQL queries. It includes instructions for inserting necessary searches and groups, refreshing searches, and validating the setup.",tags:["database","networking"],draft:!1,unlisted:!1},i=void 0,c={},d=[{value:"Step 1",id:"step-1",level:2},{value:"Step 2",id:"step-2",level:2},{value:"Step 3",id:"step-3",level:2},{value:"Step 4",id:"step-4",level:2},{value:"Step 5",id:"step-5",level:2},{value:"Step 6",id:"step-6",level:2}];function S(e){const r={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"step-1",children:"Step 1"}),"\n",(0,a.jsxs)(r.p,{children:["Run the provided SQL query using a RAWSQL monitor to establish the ",(0,a.jsx)(r.code,{children:"SMB1 Traffic Detection"})," Remote Monitor, ",(0,a.jsx)(r.code,{children:"SMB1 Server Enabled [Remote Monitor]"})," search, and ",(0,a.jsx)(r.code,{children:"SMB1 Server Enabled [Remote Monitor]"})," group."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sql",children:"# Insert `SMB1 Server Enabled [Remote Monitor]` search\r\nINSERT INTO `sensorchecks` (`Name`, `SQL`, `QueryType`, `ListDATA`, `FolderID`, `GUID`) \r\nSELECT \r\n'SMB1 Server Enabled [Remote Monitor]', \r\n'SELECT DISTINCT Computers.ComputerID, [Clients.Name](http://clients.Name) AS `Client Name`, [Computers.Name](http://computers.Name) AS `Computer Name`, Computers.Domain, Computers.UserName AS `Username`, Computers.ComputerID\r\nFROM Computers, Clients\r\nWHERE Computers.ClientID = Clients.ClientID\r\nAND ((Computers.ComputerID IN (SELECT DISTINCT c.computerid FROM computers c JOIN agents a ON a.computerid=c.computerid AND a.`Name` = 'ProVal - Production - SMB1 Detection' JOIN h_agents h ON c.computerid=h.Lastcomputerid AND a.agentid=h.AgentID AND REPLACE(h.LastFailData,'/r/n', '') = 'True')))',\r\n'4', \r\n'Computer ID||>=|*(SELECT DISTINCT c.computerid FROM computers c JOIN agents a ON a.computerid=c.computerid AND a.`Name` = 'ProVal - Production - SMB1 Detection' JOIN h_agents h ON c.computerid=h.Lastcomputerid AND a.agentid=h.AgentID AND REPLACE(h.LastFailData,'/r/n', '') = 'True')|=||=|^Select|||||||^',\r\n'0', \r\n'a3890b94-d878-4916-80b3-67b31a8695f4'\r\nFROM (SELECT MIN(computerid) FROM computers) a\r\nWHERE (SELECT COUNT(*) FROM SensorChecks WHERE `GUID` = 'a3890b94-d878-4916-80b3-67b31a8695f4') = 0;\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sql",children:"SET @searchid = (SELECT MAX(sensid) FROM sensorchecks WHERE GUID = 'a3890b94-d878-4916-80b3-67b31a8695f4');\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sql",children:"# Insert `SMB1 Server Enabled [Remote Monitor]` Group\r\nINSERT INTO `mastergroups` (`ParentID`, `Parents`, `Children`, `depth`, `Name`, `FullName`, `Permissions`, `Template`, `AutoJoinScript`, `Master`, `LimitToParent`, `Control`, `ControlID`, `Notes`, `MaintenanceID`, `MaintWindowApplied`, `GroupType`, `Priority`, `GUID`, `NetworkJoin`, `NetworkJoinOptions`, `ContactJoin`, `ContactJoinOptions`) \r\nSELECT \r\n'0',\r\n',',\r\n',',\r\n'0',\r\n'SMB1 Server Enabled [Remote Monitor]',\r\n'SMB1 Server Enabled [Remote Monitor]',\r\n'0',\r\n'0',\r\n@searchid,\r\n'2',\r\n'1',\r\n'0',\r\n'0',\r\n'',\r\n'0',\r\n(NOW()),\r\n'0',\r\n'5',\r\n'e24d9e5e-8d4a-11ee-b15d-960002890dfa',\r\n'0',\r\n'0',\r\n'0',\r\n'0'\r\nFROM (SELECT MIN(computerid) FROM computers) a\r\nWHERE (SELECT COUNT(*) FROM Mastergroups WHERE `GUID` = 'e24d9e5e-8d4a-11ee-b15d-960002890dfa') = 0;\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sql",children:"SET @Groupid = (SELECT groupid FROM mastergroups WHERE `GUID` = 'e24d9e5e-8d4a-11ee-b15d-960002890dfa');\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-sql",children:"# Insert `SMB1 Traffic Detection` Remote Monitor\r\nINSERT INTO groupagents \r\nSELECT '' AS `AgentID`,\r\n`groupid` AS `GroupID`,\r\n@searchid AS `SearchID`,\r\n'SMB1 Traffic Detection' AS `Name`,\r\n'6' AS `CheckAction`,\r\n'1' AS `AlertAction`,\r\n'SMB1 Traffic Detected on %COMPUTERNAME%~~~SMB1 Traffic not detected.!!!SMB1 Traffic Detected on %COMPUTERNAME%~~~SMB1 Traffic detected on %CLIENTNAME%//%COMPUTERNAME% in the past 1 hour. \r\nDetails: \r\n%RESULT%' AS `AlertMessage`,\r\n'0' AS `ContactID`,\r\n'3600' AS `interval`,\r\n'127.0.0.1' AS `Where`,\r\n'7' AS `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -Command \"if ( !( (Get-SmbServerConfiguration).AuditSmb1Access ) ) { try { Set-SmbServerConfiguration \u2013AuditSmb1Access $true -Force -confirm:$false -ErrorAction Stop } catch { return /\"Failure Reason: $($Error[0].Exception.Message)/\" } } else {function Get-SMB1AccessLogs { param([int[]]$Level,[int[]]$EventID,[int]$Hours); $filter = @{LogName = 'Microsoft-Windows-SMBServer*'; Level = $Level};if ($EventID) {$filter.ID = $EventID};if ($Hours) {$filter.StartTime = (Get-Date).AddHours(-$Hours)};try {Get-WinEvent -FilterHashtable $filter -ErrorAction Stop } catch { if ( $Error[0].Exception.Message -match 'No events were found' ) { return 'No events were found that match the specified selection criteria'} else { return /\"Complete Failure: $($Error[0].Exception.Message)/\" } } }; Get-SMB1AccessLogs -Level 4 -EventID 1001,3000 -Hours 1 | Format-List}\"' AS `DataOut`,\r\n'16' AS `Comparor`,\r\n'10|(^$)%7C^(//r//n%7C//s%7COK)$%7C(No events were found)|11|(^$)%7C^(//r//n%7C//s%7COK)$%7C(No events were found)%7C(Microsoft-Windows-SMBServer)|10|Microsoft-Windows-SMBServer' AS `DataIn`,\r\n'' AS `IDField`,\r\n'0' AS `AlertStyle`,\r\n'0' AS `ScriptID`,\r\n'' AS `datacollector`,\r\n'21' AS `Category`,\r\n'0' AS `TicketCategory`,\r\n'1' AS `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) AS `GUID`,\r\n'root' AS `UpdatedBy`,\r\n(NOW()) AS `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid = @groupid\r\nAND m.groupid NOT IN (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'SMB1 Traffic Detection');\n"})}),"\n",(0,a.jsx)(r.h2,{id:"step-2",children:"Step 2"}),"\n",(0,a.jsxs)(r.p,{children:["Perform ",(0,a.jsx)(r.code,{children:"Refresh Searches"})," and ",(0,a.jsx)(r.code,{children:"Do Group Refresh"})," from the ",(0,a.jsx)(r.code,{children:"MySQL Server Status"})," tool."]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.img,{alt:"Image 1",src:t(875665).A+"",width:"296",height:"486"}),"\r\n",(0,a.jsx)(r.img,{alt:"Image 2",src:t(454554).A+"",width:"543",height:"593"})]}),"\n",(0,a.jsx)(r.h2,{id:"step-3",children:"Step 3"}),"\n",(0,a.jsx)(r.p,{children:"Reload the System Cache after a couple of minutes."}),"\n",(0,a.jsx)(r.h2,{id:"step-4",children:"Step 4"}),"\n",(0,a.jsxs)(r.p,{children:["Refresh Groups and look for the ",(0,a.jsx)(r.code,{children:"SMB1 Server Enabled [Remote Monitor]"})," group."]}),"\n",(0,a.jsx)(r.h2,{id:"step-5",children:"Step 5"}),"\n",(0,a.jsxs)(r.p,{children:["Validate the presence of the ",(0,a.jsx)(r.code,{children:"SMB1 Traffic Detection"})," remote monitor in the group."]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"Image",src:t(702307).A+"",width:"1000",height:"359"})}),"\n",(0,a.jsx)(r.h2,{id:"step-6",children:"Step 6"}),"\n",(0,a.jsxs)(r.p,{children:["Apply the ",(0,a.jsx)(r.code,{children:"\u25b3 Custom - Ticket Creation Computer - Failures Only"})," alert template to the remote monitor to enable alerting. The alert template should execute the ",(0,a.jsx)(r.a,{href:"/proval-docs/docs/cwa/scripts/e14bf501-f10d-44d7-a19a-2284fd5c5cc9",children:"CWM - Automate - Script - Ticket Creation - Computer [Failures Only]"})," script for errors/failures."]})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(S,{...e})}):S(e)}},875665:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/image_1-13f976361392fcab2ae1d7074b72ce40.png"},454554:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/image_2-99630291209a79acdcb1e3248a23a801.png"},702307:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/image_3-ccae3d7c30097d5d9e894e806d9021a6.png"},28453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>i});var n=t(296540);const a={},o=n.createContext(a);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);