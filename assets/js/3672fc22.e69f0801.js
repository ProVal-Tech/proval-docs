"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[954],{768:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>a,frontMatter:()=>n,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"powershell/ps-measure-volumespace","title":"Measure Volume Space","description":"Guide to measuring volume space and identifying low space volumes using PowerShell.","source":"@site/docs/powershell/Measure-VolumeSpace.md","sourceDirName":"powershell","slug":"/powershell/ps-measure-volumespace","permalink":"/proval-docs/docs/powershell/ps-measure-volumespace","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/docs/tree/main/packages/create-docusaurus/templates/shared/docs/powershell/Measure-VolumeSpace.md","tags":[{"inline":false,"label":"Windows","permalink":"/proval-docs/docs/tags/windows","description":"Content related to the Windows operating system."},{"inline":false,"label":"Performance","permalink":"/proval-docs/docs/tags/performance","description":"Content related to measuring or improving system performance."},{"inline":false,"label":"Configuration","permalink":"/proval-docs/docs/tags/configuration","description":"Content related to configuring a device."}],"version":"current","frontMatter":{"id":"ps-measure-volumespace","title":"Measure Volume Space","title_meta":"Measure Volume Space with PowerShell","keywords":["volume","space","threshold","disk","storage"],"description":"Guide to measuring volume space and identifying low space volumes using PowerShell.","tags":["windows","performance","configuration"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Join-Domain","permalink":"/proval-docs/docs/powershell/ps-join-domain"},"next":{"title":"New-DJoinFile","permalink":"/proval-docs/docs/powershell/ps-new-djoinfile"}}');var l=r(4848),t=r(8453);const n={id:"ps-measure-volumespace",title:"Measure Volume Space",title_meta:"Measure Volume Space with PowerShell",keywords:["volume","space","threshold","disk","storage"],description:"Guide to measuring volume space and identifying low space volumes using PowerShell.",tags:["windows","performance","configuration"],draft:!1,unlisted:!1},i=void 0,o={},c=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Output",id:"output",level:2}];function h(e){const s={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,l.jsx)(s.p,{children:"Measure volume space and determine if volumes are low on space based on parameters."}),"\n",(0,l.jsx)(s.h2,{id:"requirements",children:"Requirements"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"PowerShell v5"}),"\n",(0,l.jsx)(s.li,{children:"Must be run as an Administrator"}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsxs)(s.ol,{children:["\n",(0,l.jsx)(s.li,{children:"All parameters are validated before processing."}),"\n",(0,l.jsx)(s.li,{children:"Volumes to process are gathered based on the passed parameters."}),"\n",(0,l.jsxs)(s.li,{children:["Each gathered volume is then looped through.","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Determine what size type (Small, Medium, Large, X-Large) the volume is."}),"\n",(0,l.jsx)(s.li,{children:"Apply the threshold rule set based on the size type."}),"\n",(0,l.jsx)(s.li,{children:"Add the volume to the list of low space volumes if it is found to be low."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.li,{children:"Return the list of low space volumes."}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters.\r\nReturns the volumes that are low on space based on the default parameters."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-powershell",children:".\\Measure-VolumeSpace.ps1\n"})}),"\n",(0,l.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters, and with a size greater than or equal to 100MB.\r\nReturns the volumes that are low on space.\r\nThe max size for a 'small' drive will be 20GB. This means that the medium drive will be between 20GB and the default 1024GB.\r\nThe medium drive type has been set to use a percentage based threshold of 20%."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-powershell",children:".\\Measure-VolumeSpace.ps1 -MinimumSize 100MB -SmallVolumeMaxSize 20GB -MediumVolumeThresholdType 'Percent' -MediumVolumeThreshold 20\n"})}),"\n",(0,l.jsx)(s.p,{children:"Searches for all fixed and removable volumes, with or without drive letters.\r\nReturns the volumes that are low on space based on the default parameters."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-powershell",children:".\\Measure-VolumeSpace.ps1 -d 'Fixed', 'Removable' -u\n"})}),"\n",(0,l.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters except 'C'.\r\nReturns the volumes that are low on space based on the default parameters."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-powershell",children:".\\Measure-VolumeSpace.ps1 -e 'C'\n"})}),"\n",(0,l.jsx)(s.p,{children:"Searches for all fixed volumes with drive letters.\r\nSuppresses all console output other than the return object.\r\nReturns the volumes that are low on space based on the default parameters."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-powershell",children:".\\Measure-VolumeSpace.ps1 -Quiet\n"})}),"\n",(0,l.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{children:"Parameter"}),(0,l.jsx)(s.th,{children:"Alias"}),(0,l.jsx)(s.th,{children:"Required"}),(0,l.jsx)(s.th,{children:"Default"}),(0,l.jsx)(s.th,{children:"Type"}),(0,l.jsx)(s.th,{children:"Description"})]})}),(0,l.jsxs)(s.tbody,{children:[(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"MinimumSize"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"sm"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"1MB"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsx)(s.td,{children:"The minimum size of the volume to search for. Any volume under this limit will be excluded."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"SmallVolumeMaxSize"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"ss"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"256GB"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsx)(s.td,{children:"The maximum size of what should be considered a 'small' drive."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"SmallVolumeThreshold"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"st"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"11"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsxs)(s.td,{children:["The threshold to consider a 'small' volume low on space. If ",(0,l.jsx)(s.code,{children:"$SmallVolumeThresholdType"})," is set to ",(0,l.jsx)(s.code,{children:"'Percent'"})," this should be less than or equal to ",(0,l.jsx)(s.code,{children:"100"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"SmallVolumeThresholdType"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"stt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"'Percent'"})}),(0,l.jsx)(s.td,{children:"String"}),(0,l.jsxs)(s.td,{children:["The type of threshold calculation to perform for 'small' drives. Valid options are ",(0,l.jsx)(s.code,{children:"'Percent'"})," and ",(0,l.jsx)(s.code,{children:"'Number'"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"MediumVolumeMaxSize"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"ms"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"1024GB"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsx)(s.td,{children:"The maximum size of what should be considered a 'medium' drive."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"MediumVolumeThreshold"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"mt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"11"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsxs)(s.td,{children:["The threshold to consider a 'medium' volume low on space. If ",(0,l.jsx)(s.code,{children:"$MediumVolumeThresholdType"})," is set to ",(0,l.jsx)(s.code,{children:"'Percent'"})," this should be less than or equal to ",(0,l.jsx)(s.code,{children:"100"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"MediumVolumeThresholdType"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"mtt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"'Percent'"})}),(0,l.jsx)(s.td,{children:"String"}),(0,l.jsxs)(s.td,{children:["The type of threshold calculation to perform for 'medium' drives. Valid options are ",(0,l.jsx)(s.code,{children:"'Percent'"})," and ",(0,l.jsx)(s.code,{children:"'Number'"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"LargeVolumeMaxSize"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"ls"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"2048GB"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsx)(s.td,{children:"The maximum size of what should be considered a 'large' drive."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"LargeVolumeThreshold"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"lt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"5"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsxs)(s.td,{children:["The threshold to consider a 'large' volume low on space. If ",(0,l.jsx)(s.code,{children:"$LargeVolumeThresholdType"})," is set to ",(0,l.jsx)(s.code,{children:"'Percent'"})," this should be less than or equal to ",(0,l.jsx)(s.code,{children:"100"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"LargeVolumeThresholdType"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"ltt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"'Percent'"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsxs)(s.td,{children:["The type of threshold calculation to perform for 'large' drives. Valid options are ",(0,l.jsx)(s.code,{children:"'Percent'"})," and ",(0,l.jsx)(s.code,{children:"'Number'"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"XLargeVolumeThreshold"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"xt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"5"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsxs)(s.td,{children:["The threshold to consider a 'x-large' volume low on space. If ",(0,l.jsx)(s.code,{children:"$XLargeVolumeThresholdType"})," is set to ",(0,l.jsx)(s.code,{children:"'Percent'"})," this should be less than or equal to ",(0,l.jsx)(s.code,{children:"100"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"XLargeVolumeThresholdType"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"xtt"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"'Percent'"})}),(0,l.jsx)(s.td,{children:"Int64"}),(0,l.jsxs)(s.td,{children:["The type of threshold calculation to perform for 'x-large' drives. Valid options are ",(0,l.jsx)(s.code,{children:"'Percent'"})," and ",(0,l.jsx)(s.code,{children:"'Number'"}),"."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"DriveTypes"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"d"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"'Fixed'"})}),(0,l.jsx)(s.td,{children:"String[]"}),(0,l.jsxs)(s.td,{children:["A list of the types of drives to review space for. Valid options are:",(0,l.jsx)("br",{}),"- 'Unknown'",(0,l.jsx)("br",{}),"- 'Invalid Root Path'",(0,l.jsx)("br",{}),"- 'Removable'",(0,l.jsx)("br",{}),"- 'Fixed'",(0,l.jsx)("br",{}),"- 'Remote'",(0,l.jsx)("br",{}),"- 'CD-ROM'",(0,l.jsx)("br",{}),"- 'RAM Disk'"]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"IncludeUnassignedVolumes"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"u"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"False"})}),(0,l.jsx)(s.td,{children:"Switch"}),(0,l.jsx)(s.td,{children:"Use this switch to include volumes that have not been assigned a drive letter."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"ExcludeDriveLetters"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"e"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{}),(0,l.jsx)(s.td,{children:"String[]"}),(0,l.jsx)(s.td,{children:"A list of drive letters to exclude from the review."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"Quiet"})}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"q"})}),(0,l.jsx)(s.td,{children:"False"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"False"})}),(0,l.jsx)(s.td,{children:"Switch"}),(0,l.jsx)(s.td,{children:"Suppresses all console output other than the return object by overwriting the Write-Host function."})]})]})]}),"\n",(0,l.jsx)(s.h2,{id:"output",children:"Output"}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.code,{children:"Microsoft.Management.Infrastructure.CimInstance#ROOT/Microsoft/Windows/Storage/MSFT_Volume"})}),"\n",(0,l.jsx)(s.p,{children:".\\Measure-VolumeSpace-log.txt\r\n.\\Measure-VolumeSpace-error.txt"})]})}function a(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>n,x:()=>i});var d=r(6540);const l={},t=d.createContext(l);function n(e){const s=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),d.createElement(t.Provider,{value:s},e.children)}}}]);