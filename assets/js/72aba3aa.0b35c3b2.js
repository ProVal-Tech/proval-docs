"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[76887],{254729:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"cwa/scripts/1986c949-6d8f-40e6-b802-c32195c9a2d3","title":"Autofix - Monitor AV Service Status","description":"This script helps to verify whether antivirus (AV) is running on a system. If the AV is not running, the script attempts to start the AV process. It is intended for use with the \\"AV-Disabled\\" monitor and can create or update tickets based on the AV status. This automation saves time and enhances security management.","source":"@site/docs/cwa/scripts/Autofix - Monitor AV Service Status.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/1986c949-6d8f-40e6-b802-c32195c9a2d3","permalink":"/docs/cwa/scripts/1986c949-6d8f-40e6-b802-c32195c9a2d3","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/Autofix - Monitor AV Service Status.md","tags":[{"inline":false,"label":"Security","permalink":"/docs/tags/security","description":"Documents discussing security measures and practices for IT systems"},{"inline":false,"label":"Ticketing","permalink":"/docs/tags/ticketing","description":"Documents related to ticketing systems and IT support management"}],"version":"current","frontMatter":{"id":"1986c949-6d8f-40e6-b802-c32195c9a2d3","title":"Autofix - Monitor AV Service Status","title_meta":"Autofix - Monitor AV Service Status","keywords":["av","monitor","process","ticketing","automation"],"description":"This script helps to verify whether antivirus (AV) is running on a system. If the AV is not running, the script attempts to start the AV process. It is intended for use with the \\"AV-Disabled\\" monitor and can create or update tickets based on the AV status. This automation saves time and enhances security management.","tags":["security","ticketing"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Autofix - CWC RMM+ - Offline Agent Remediation","permalink":"/docs/cwa/scripts/458b387d-e369-4ea5-bbc6-608e4ea7f993"},"next":{"title":"Automate - New Super Admin Monitoring","permalink":"/docs/cwa/scripts/acc57018-b868-4129-b4a5-0f1052dcc1ae"}}');var n=s(474848),r=s(28453);const a={id:"1986c949-6d8f-40e6-b802-c32195c9a2d3",title:"Autofix - Monitor AV Service Status",title_meta:"Autofix - Monitor AV Service Status",keywords:["av","monitor","process","ticketing","automation"],description:'This script helps to verify whether antivirus (AV) is running on a system. If the AV is not running, the script attempts to start the AV process. It is intended for use with the "AV-Disabled" monitor and can create or update tickets based on the AV status. This automation saves time and enhances security management.',tags:["security","ticketing"],draft:!1,unlisted:!1},c=void 0,o={},d=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Variables",id:"variables",level:2},{value:"Global Parameters",id:"global-parameters",level:3},{value:"Script States",id:"script-states",level:3},{value:"Process",id:"process",level:2},{value:"Output",id:"output",level:2}];function l(t){const e={br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(e.p,{children:"This script helps to verify whether AV is running. If it's not running, it will attempt to start the AV process."}),"\n",(0,n.jsxs)(e.p,{children:['The intended target for this script is the "AV-Disabled" monitor.',(0,n.jsx)(e.br,{}),"\n",(0,n.jsx)(e.strong,{children:"Time Saved by Automation:"})," 5 Minutes"]}),"\n",(0,n.jsx)(e.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:"Sample Run",src:s(784025).A+"",width:"486",height:"355"})}),"\n",(0,n.jsx)(e.h2,{id:"variables",children:"Variables"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"@svc@"})," - Shows the AV process name from the database"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"@ticketbody@"})," - Sets the body for the ticket"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"@powershell@"})," - Logs the output of the PowerShell command that attempted to restart the process"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"@TicketID@"})," - Indicates if there is an existing ticket for the agent"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"global-parameters",children:"Global Parameters"}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Name"}),(0,n.jsx)(e.th,{children:"Example"}),(0,n.jsx)(e.th,{children:"Required"}),(0,n.jsx)(e.th,{children:"Description"})]})}),(0,n.jsx)(e.tbody,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"TicketCreation"}),(0,n.jsx)(e.td,{children:"1"}),(0,n.jsx)(e.td,{children:"False"}),(0,n.jsx)(e.td,{children:"Setting this to 1 enables ticketing"})]})})]}),"\n",(0,n.jsx)(e.h3,{id:"script-states",children:"Script States"}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Name"}),(0,n.jsx)(e.th,{children:"Example"}),(0,n.jsx)(e.th,{children:"Description"})]})}),(0,n.jsx)(e.tbody,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"AVStatusCheck"}),(0,n.jsx)(e.td,{children:"56897"}),(0,n.jsx)(e.td,{children:"Used to track if there is an existing ticket for the agent"})]})})]}),"\n",(0,n.jsx)(e.h2,{id:"process",children:"Process"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Fetches the AV process from the database"}),"\n",(0,n.jsx)(e.li,{children:"Verifies if it's running. If it's not running, it will attempt to start the AV process."}),"\n",(0,n.jsx)(e.li,{children:"If started, it will look for an existing ticket and close it."}),"\n",(0,n.jsx)(e.li,{children:"If not started, it will append to the existing ticket or create a new ticket."}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"output",children:"Output"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Script log"}),"\n",(0,n.jsx)(e.li,{children:"Script state"}),"\n"]})]})}function h(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(l,{...t})}):l(t)}},784025:(t,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image_1-b49a71472b930647f9ca5f3884ff3acc.png"},28453:(t,e,s)=>{s.d(e,{R:()=>a,x:()=>c});var i=s(296540);const n={},r=i.createContext(n);function a(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:a(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);