"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[30219],{285637:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"cwa/monitors/81638d59-3335-4464-af10-25f37ed41402","title":"Disk - Predictive Failure","description":"This document outlines the setup of a disk health monitor for Windows machines, utilizing a PowerShell command to check the status of disk drives. It details the expected outcomes and the alerting mechanism for potential disk failures, ensuring timely ticket creation for maintenance.","source":"@site/docs/cwa/monitors/Disk - Predictive Failure.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/81638d59-3335-4464-af10-25f37ed41402","permalink":"/docs/cwa/monitors/81638d59-3335-4464-af10-25f37ed41402","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Disk - Predictive Failure.md","tags":[{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"81638d59-3335-4464-af10-25f37ed41402","title":"Disk - Predictive Failure","title_meta":"Disk - Predictive Failure","keywords":["disk","health","monitor","windows","status"],"description":"This document outlines the setup of a disk health monitor for Windows machines, utilizing a PowerShell command to check the status of disk drives. It details the expected outcomes and the alerting mechanism for potential disk failures, ensuring timely ticket creation for maintenance.","tags":["windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Disable Update Orchestrator Service Change","permalink":"/docs/cwa/monitors/f4687be0-4269-4cec-8e7b-685f56178f27"},"next":{"title":"Domain Admin Account Lockout","permalink":"/docs/cwa/monitors/a24b00c5-49d4-4a2b-9090-a2716b56cf47"}}');var n=i(474848),r=i(28453);const o={id:"81638d59-3335-4464-af10-25f37ed41402",title:"Disk - Predictive Failure",title_meta:"Disk - Predictive Failure",keywords:["disk","health","monitor","windows","status"],description:"This document outlines the setup of a disk health monitor for Windows machines, utilizing a PowerShell command to check the status of disk drives. It details the expected outcomes and the alerting mechanism for potential disk failures, ensuring timely ticket creation for maintenance.",tags:["windows"],draft:!1,unlisted:!1},a=void 0,d={},l=[{value:"Summary",id:"summary",level:2},{value:"Details",id:"details",level:2},{value:"Target",id:"target",level:2}];function c(e){const t={br:"br",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.p,{children:"The monitor setup will compare the result of the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -ExecutionPolicy Bypass -Command \"$ErrorActionPreference = 'SilentlyContinue'; $WarningPreference = 'SilentlyContinue'; $disks = (Get-WmiObject -Class Win32_DiskDrive) ; foreach($disk in $disks) {write-host -NoNewline \"$($disk.Status)\"}\"\n"})}),"\n",(0,n.jsx)(t.p,{children:"against the status \"Fail\". The expected outcomes are 'OK', 'Predicted Failure', or 'Failed'. A ticket will be created for machines with either \"Failed\" or \"Predicted Failure\" health status for a disk."}),"\n",(0,n.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:'Suggested "Limit to"'}),": Windows Machine.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Suggested Alert Style"}),": Once",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Suggested Alert Template"}),": Default Create Automate Ticket"]}),"\n",(0,n.jsx)(t.p,{children:"Insert the details of the monitor in the table below."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Check Action"}),(0,n.jsx)(t.th,{children:"Server Address"}),(0,n.jsx)(t.th,{children:"Check Type"}),(0,n.jsx)(t.th,{children:"Check Value"}),(0,n.jsx)(t.th,{children:"Comparator"}),(0,n.jsx)(t.th,{children:"Interval"}),(0,n.jsx)(t.th,{children:"Result"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"System"}),(0,n.jsx)(t.td,{children:"127.0.0.1"}),(0,n.jsx)(t.td,{children:"Run File"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"See Below"})}),(0,n.jsx)(t.td,{children:"Does Not Contain"}),(0,n.jsx)(t.td,{children:"600"}),(0,n.jsx)(t.td,{children:"Fail"})]})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Check Value"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -Command \"$ErrorActionPreference = 'SilentlyContinue'; $WarningPreference = 'SilentlyContinue'; $disks = (Get-WmiObject -Class Win32_DiskDrive); foreach($disk in $disks) \\{write-host -NoNewline \"$($disk.Status)\"}\"\n"})}),"\n",(0,n.jsx)(t.h2,{id:"target",children:"Target"}),"\n",(0,n.jsx)(t.p,{children:"Windows Machines: This should be run on all the Windows machines covered under the Service Plans."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var s=i(296540);const n={},r=s.createContext(n);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);