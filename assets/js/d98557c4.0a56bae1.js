"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[77766],{207872:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"vsa/procedures/04d18467-ad93-4ed2-8da9-52796031d41c","title":"Egnyte - Install","description":"This document outlines the agent procedure for updating and installing the Egnyte software, including the steps taken to kill all Office applications prior to installation and prompting for a reboot afterward. The example agent procedure log provides detailed insights into the actions and results of the installation process.","source":"@site/docs/vsa/procedures/Egnyte - Install.md","sourceDirName":"vsa/procedures","slug":"/vsa/procedures/04d18467-ad93-4ed2-8da9-52796031d41c","permalink":"/docs/vsa/procedures/04d18467-ad93-4ed2-8da9-52796031d41c","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/vsa/procedures/Egnyte - Install.md","tags":[{"inline":false,"label":"Cleanup","permalink":"/docs/tags/cleanup","description":"Documents on system cleanup processes and tools to free up resources"},{"inline":false,"label":"Installation","permalink":"/docs/tags/installation","description":"Documents on installing software and configuring systems"},{"inline":false,"label":"Reboot","permalink":"/docs/tags/reboot","description":"Documents related to system reboot processes and their management"},{"inline":false,"label":"Software","permalink":"/docs/tags/software","description":"Documents related to software applications and their lifecycle management"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"04d18467-ad93-4ed2-8da9-52796031d41c","title":"Egnyte - Install","title_meta":"Egnyte - Install","keywords":["egnyte","installation","software","office","reboot"],"description":"This document outlines the agent procedure for updating and installing the Egnyte software, including the steps taken to kill all Office applications prior to installation and prompting for a reboot afterward. The example agent procedure log provides detailed insights into the actions and results of the installation process.","tags":["cleanup","installation","reboot","software","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"EPM - Windows Configuration - Agent Procedure - Windows Firewall Enable","permalink":"/docs/vsa/procedures/1d629150-fa76-46b9-ade9-875dcc74d5ab"},"next":{"title":"Enable Authenticode Verification","permalink":"/docs/vsa/procedures/847585fe-5c51-4479-9562-9524ab687330"}}');var s=n(474848),r=n(28453);const l={id:"04d18467-ad93-4ed2-8da9-52796031d41c",title:"Egnyte - Install",title_meta:"Egnyte - Install",keywords:["egnyte","installation","software","office","reboot"],description:"This document outlines the agent procedure for updating and installing the Egnyte software, including the steps taken to kill all Office applications prior to installation and prompting for a reboot afterward. The example agent procedure log provides detailed insights into the actions and results of the installation process.",tags:["cleanup","installation","reboot","software","windows"],draft:!1,unlisted:!1},i=void 0,a={},o=[{value:"Summary",id:"summary",level:2},{value:"Example Agent Procedure Log",id:"example-agent-procedure-log",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Output",id:"output",level:2}];function c(e){const t={a:"a",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"The agent procedure updates and installs the Egnyte software. It kills all Office applications prior to installation and prompts for a reboot afterward."}),"\n",(0,s.jsx)(t.h2,{id:"example-agent-procedure-log",children:"Example Agent Procedure Log"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Time"}),(0,s.jsx)(t.th,{children:"Action"}),(0,s.jsx)(t.th,{children:"Result"}),(0,s.jsx)(t.th,{children:"User"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:09:06 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Egnyte - Install"}),(0,s.jsx)(t.td,{children:"Success THEN"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:08:10 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Egnyte - Install-0003"}),(0,s.jsx)(t.td,{children:"Cleanup performed"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:08:10 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Delete Folder"}),(0,s.jsx)(t.td,{children:"Success THEN"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:08:10 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Delete Folder-0019"}),(0,s.jsx)(t.td,{children:"Success! %ProgramData%/_automation/AgentProcedure/EgnyteInstall folder has been removed."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:08:08 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Delete Folder-0013"}),(0,s.jsx)(t.td,{children:"Directory %ProgramData%/_automation/AgentProcedure/EgnyteInstall is not empty, but recursive delete is enabled - removing..."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:08:07 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Delete Folder-0009"}),(0,s.jsx)(t.td,{children:"%ProgramData%/_automation/AgentProcedure/EgnyteInstall folder exists."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:08:06 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Delete Folder-0004"}),(0,s.jsx)(t.td,{children:"Directory contains a /. This should be a Windows folder."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:03:06 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Egnyte - Install-0003"}),(0,s.jsx)(t.td,{children:"Egnyte installed, waiting 5 minutes to prompt for reboot"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:47 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Egnyte - Install-0003"}),(0,s.jsx)(t.td,{children:"File Copied. Starting Installation."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:10 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command"}),(0,s.jsx)(t.td,{children:"Success THEN"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:09 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command-0011"}),(0,s.jsx)(t.td,{children:"PowerShell command completed!"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:07 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command-0011"}),(0,s.jsx)(t.td,{children:"Executing PowerShell command to stop Office processes..."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:07 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command-0010"}),(0,s.jsx)(t.td,{children:"Not sending output to variable."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:07 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command-0008"}),(0,s.jsx)(t.td,{children:"New command variable is set to stop Office processes."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:02:07 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command-0008"}),(0,s.jsx)(t.td,{children:"Custom commands detected to stop Office processes."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:01:59 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Execute PowerShell Command-0002"}),(0,s.jsx)(t.td,{children:"PowerShell is present."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:01:56 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Egnyte - Install-0003"}),(0,s.jsx)(t.td,{children:"User selected Install Now."}),(0,s.jsx)(t.td,{children:"derek.joniak"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7:01:48 PM 2-May-23"}),(0,s.jsx)(t.td,{children:"Run Now - Egnyte - Install"}),(0,s.jsx)(t.td,{children:"Admin derek.joniak scheduled procedure Run Now - Egnyte - Install to run at May 2, 2023, 8:01 PM"}),(0,s.jsx)(t.td,{children:"derek.joniak"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(t.p,{children:["The procedure requires the custom field to run: ",(0,s.jsx)(t.a,{href:"../../unsorted/SWM%20-%20Software%20Install%20-%20Custom%20Field%20-%20Egnyte%20-%20Install.md",children:"Custom Field - Egnyte - Install"})]}),"\n",(0,s.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,s.jsx)(t.p,{children:"Agent Logs"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var d=n(296540);const s={},r=d.createContext(s);function l(e){const t=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),d.createElement(r.Provider,{value:t},e.children)}}}]);