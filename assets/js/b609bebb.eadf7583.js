"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[7921],{1669:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"powershell/ps-get-batteryreport","title":"Get-BatteryReport","description":"Documentation for the Get-BatteryReport command to generate and return a detailed battery report using powercfg /batteryreport.","source":"@site/docs/powershell/Get-BatteryReport.md","sourceDirName":"powershell","slug":"/powershell/ps-get-batteryreport","permalink":"/docs/powershell/ps-get-batteryreport","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/docs/tree/main/packages/create-docusaurus/templates/shared/docs/powershell/Get-BatteryReport.md","tags":[{"inline":false,"label":"Report","permalink":"/docs/tags/report","description":"Content related to generating reports."},{"inline":false,"label":"Performance","permalink":"/docs/tags/performance","description":"Content related to measuring or improving system performance."},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Content related to the Windows operating system."}],"version":"current","frontMatter":{"id":"ps-get-batteryreport","title":"Get-BatteryReport","title_meta":"Get-BatteryReport Command","keywords":["battery","report","powercfg","system"],"description":"Documentation for the Get-BatteryReport command to generate and return a detailed battery report using powercfg /batteryreport.","tags":["report","performance","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-AvgDiskQueueLength","permalink":"/docs/powershell/ps-get-avgdiskqueuelength"},"next":{"title":"Get-BitLockerState","permalink":"/docs/powershell/ps-get-bitlockerstate"}}');var a=r(4848),o=r(8453);const i={id:"ps-get-batteryreport",title:"Get-BatteryReport",title_meta:"Get-BatteryReport Command",keywords:["battery","report","powercfg","system"],description:"Documentation for the Get-BatteryReport command to generate and return a detailed battery report using powercfg /batteryreport.",tags:["report","performance","windows"],draft:!1,unlisted:!1},s=void 0,c={},l=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Output",id:"output",level:2}];function p(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(t.p,{children:"Returns a system object containing all information that can be gathered by running powercfg /batteryreport."}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Set up the Report object Classes."}),"\n",(0,a.jsx)(t.li,{children:"Try to get the report if that errors return nothing"}),"\n",(0,a.jsx)(t.li,{children:"Try to get the content of the exported xml report if that fails return nothing"}),"\n",(0,a.jsx)(t.li,{children:"Loop through all the data returned in the xml formatting the system object and removing unnecessary xml tags and returning just he passed information"}),"\n",(0,a.jsx)(t.li,{children:"Combine into one object of objects"}),"\n",(0,a.jsx)(t.li,{children:"Return that object."}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-powershell",children:".\\Get-BatteryReport.ps1\n"})}),"\n",(0,a.jsx)(t.p,{children:"Returns a system Object containing all data from the generated battery report"}),"\n",(0,a.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,a.jsx)(t.p,{children:"[System.Object]\r\nXMLNS\r\nReportInformation\r\nLocalReportStartTime\r\nLocalScanTime\r\nReportDuration\r\nreportGuid\r\nreportStartTime\r\nReportVersion\r\nScanTime\r\nUtcoffset\r\nSystemInformation\r\nBiosDate\r\nBiosVersion\r\nComputerName\r\nConnectedStandby\r\nosBuild\r\nPlatformRole\r\nSystemManufacturer\r\nSystemProductName\r\nBatteries\r\nChemistry\r\nCycleCount\r\nDesignCapacity\r\nFullChargeCapacity\r\nId\r\nLongTerm\r\nManufactureDate\r\nManufacturer\r\nRelativeCapacity\r\nSerialNumber\r\nDesignCapacity\r\nActiveRuntime\r\nCapacity\r\nConnectedStandbyRuntime\r\nFullChargeCapacity\r\nActiveRuntime\r\nCapacity\r\nConnectedStandbyRuntime\r\nRecentUsage\r\nAc\r\nChargeCapacity\r\nDischarge\r\nDuration\r\nEntryType\r\nFullChargeCapacity\r\nIsNextOnBattery\r\nLocalTimestamp\r\nTimestamp\r\nHistory\r\nActiveAcTime\r\nActiveDcEnergy\r\nActiveDcTime\r\nBatteryChanged\r\nCsAcTime\r\nCsDcEnergy\r\nCsDcTime\r\nCycleCount\r\nDesignCapacity\r\nEndDate\r\nEstimatedDesignActiveTime\r\nEstimatedDesignCsTime\r\nEstimatedFullChargeActiveTime\r\nEstimatedFullChargeCsTime\r\nFullChargeCapacity\r\nLocalEndDate\r\nLocalStartDate\r\nStartDate\r\nEnergyDrains\r\nEndChargeCapacity\r\nEndFullChargeCapacity\r\nEndTimestamp\r\nLocalEndTimestamp\r\nLocalStartTimestamp\r\nStartChargeCapacity\r\nStartFullChargeCapacity\r\nStartTimestamp"})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(6540);const a={},o=n.createContext(a);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);