"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[98761],{772295:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cwa/scripts/89346170-6657-4784-93cf-c0aa024b4386","title":"PowerShell Response - All Errors - Check","description":"This document details a PowerShell script designed to check for common errors in the output of a parent script. It converts these errors into a human-readable format and logs them, aiding in troubleshooting and development. The script enhances the debugging process by providing clear error messages based on known issues, making it a valuable tool for developers.","source":"@site/docs/cwa/scripts/PowerShell Response - All Errors - Check.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/89346170-6657-4784-93cf-c0aa024b4386","permalink":"/proval-docs/docs/cwa/scripts/89346170-6657-4784-93cf-c0aa024b4386","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/PowerShell Response - All Errors - Check.md","tags":[{"inline":false,"label":"Logging","permalink":"/proval-docs/docs/tags/logging","description":"Documents related to log management and analysis for systems"}],"version":"current","frontMatter":{"id":"89346170-6657-4784-93cf-c0aa024b4386","title":"PowerShell Response - All Errors - Check","title_meta":"PowerShell Response - All Errors - Check","keywords":["error","logging","troubleshooting","scripting","development","output","status"],"description":"This document details a PowerShell script designed to check for common errors in the output of a parent script. It converts these errors into a human-readable format and logs them, aiding in troubleshooting and development. The script enhances the debugging process by providing clear error messages based on known issues, making it a valuable tool for developers.","tags":["logging"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"PowerShell Environment Setup Verification","permalink":"/proval-docs/docs/cwa/scripts/8ace140f-74d7-49cb-b9aa-90cf098629fc"},"next":{"title":"PowerShell Version Audit","permalink":"/proval-docs/docs/cwa/scripts/da7e6b68-3ac3-4d15-9969-ca843a187d2d"}}');var n=s(474848),o=s(28453);const i={id:"89346170-6657-4784-93cf-c0aa024b4386",title:"PowerShell Response - All Errors - Check",title_meta:"PowerShell Response - All Errors - Check",keywords:["error","logging","troubleshooting","scripting","development","output","status"],description:"This document details a PowerShell script designed to check for common errors in the output of a parent script. It converts these errors into a human-readable format and logs them, aiding in troubleshooting and development. The script enhances the debugging process by providing clear error messages based on known issues, making it a valuable tool for developers.",tags:["logging"],draft:!1,unlisted:!1},l=void 0,a={},c=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"Process",id:"process",level:2},{value:"Output",id:"output",level:2}];function d(e){const r={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsxs)(r.p,{children:["This script takes a parent's ",(0,n.jsx)(r.code,{children:"psout"})," variable and checks it for known common errors, converting those errors into a human-readable format and logging them in the script log. This is particularly useful when attempting to determine why a PowerShell command didn't run as expected, and it can be instrumental in testing, troubleshooting, and the development of future scripts."]}),"\n",(0,n.jsx)(r.p,{children:"This script has been used in 12 scripts as a method of troubleshooting. It has evolved from 3 known errors to now 7, and it can be easily extended."}),"\n",(0,n.jsx)(r.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,n.jsx)(r.p,{children:"This script should always be called from a parent script."}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["On any parent script where a PowerShell command is being run, save the output to the variable ",(0,n.jsx)(r.code,{children:"@psout@"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:["Run the PowerShell Response - All Errors - Check script immediately after setting the ",(0,n.jsx)(r.code,{children:"@psout@"})," variable."]}),"\n",(0,n.jsxs)(r.li,{children:["After running that script, check the state of the ",(0,n.jsx)(r.code,{children:"@failstatus@"})," variable in the script. If the state is False, then the PowerShell command that was run triggered an error check, and a log should be present in the ",(0,n.jsx)(r.code,{children:"@EnvironmentalError@"})," variable."]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["A ",(0,n.jsx)(r.code,{children:"@psout@"})," variable must be present in the script at the time of calling this script."]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"variables",children:"Variables"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"EnvironmentalError"}),(0,n.jsxs)(r.td,{children:["This variable sets the human-readable interpretation of the error held in the ",(0,n.jsx)(r.code,{children:"@psout@"})," variable."]})]})})]}),"\n",(0,n.jsx)(r.h2,{id:"process",children:"Process"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["Check ",(0,n.jsx)(r.code,{children:"@psout@"})," for a specific string.","\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["Set the ",(0,n.jsx)(r.code,{children:"@EnvironmentalError@"})," variable to what the specific string reflects."]}),"\n",(0,n.jsx)(r.li,{children:"Log the error and exit with an error."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.li,{children:"Go back to step 1 until all known strings are queried."}),"\n",(0,n.jsx)(r.li,{children:"Exit the script."}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"output",children:"Output"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Script log"}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"@failstatus@"})," variable state"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"@EnvironmentalError@"})," variable"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>l});var t=s(296540);const n={},o=t.createContext(n);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);