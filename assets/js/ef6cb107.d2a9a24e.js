"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[3299],{3332:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>f,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"powershell/ps-get-firefoxextensions","title":"Get-FirefoxExtensions","description":"Documentation for the Get-FirefoxExtensions command to gather information about extensions installed on the Mozilla Firefox browser for each user.","source":"@site/docs/powershell/Get-FirefoxExtensions.md","sourceDirName":"powershell","slug":"/powershell/ps-get-firefoxextensions","permalink":"/proval-docs/docs/powershell/ps-get-firefoxextensions","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/docs/tree/main/packages/create-docusaurus/templates/shared/docs/powershell/Get-FirefoxExtensions.md","tags":[{"inline":false,"label":"Firefox","permalink":"/proval-docs/docs/tags/firefox","description":"Content related to the Firefox web browser."},{"inline":false,"label":"Configuration","permalink":"/proval-docs/docs/tags/configuration","description":"Content related to configuring a device."},{"inline":false,"label":"Software","permalink":"/proval-docs/docs/tags/software","description":"Content related to software."}],"version":"current","frontMatter":{"id":"ps-get-firefoxextensions","title":"Get-FirefoxExtensions","title_meta":"Get-FirefoxExtensions Command","keywords":["firefox","extensions","browser","user"],"description":"Documentation for the Get-FirefoxExtensions command to gather information about extensions installed on the Mozilla Firefox browser for each user.","tags":["firefox","configuration","software"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-DiskInfo","permalink":"/proval-docs/docs/powershell/ps-get-diskinfo"},"next":{"title":"Get-GPResult","permalink":"/proval-docs/docs/powershell/ps-get-gpresult"}}');var s=n(4848),i=n(8453);const r={id:"ps-get-firefoxextensions",title:"Get-FirefoxExtensions",title_meta:"Get-FirefoxExtensions Command",keywords:["firefox","extensions","browser","user"],description:"Documentation for the Get-FirefoxExtensions command to gather information about extensions installed on the Mozilla Firefox browser for each user.",tags:["firefox","configuration","software"],draft:!1,unlisted:!1},l=void 0,a={},c=[{value:"Description",id:"description",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Output",id:"output",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Gather information about extensions installed on the Mozilla Firefox browser for each user."}),"\n",(0,s.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Run as administrator"}),"\n",(0,s.jsx)(t.li,{children:"Powershell v5+"}),"\n",(0,s.jsx)(t.li,{children:".NET Runtime 4.5+"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Import .NET compression utilities."}),"\n",(0,s.jsxs)(t.li,{children:["Get valid user profile paths and performs the following for each path:","\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Validate if the Firefox Profile path exists."}),"\n",(0,s.jsx)(t.li,{children:"For each valid Firefox profile folder, locate and extracts the XPI files (zipped extension packages) into a temp folder, then run the Manifest check."}),"\n",(0,s.jsx)(t.li,{children:"Out of each extracted directory locates the 'Manifest.json' file."}),"\n",(0,s.jsxs)(t.li,{children:["Read the Manifest.json file to find the ",(0,s.jsx)(t.code,{children:"name"})," of the extension."]}),"\n",(0,s.jsxs)(t.li,{children:["The manifest file either contains the ",(0,s.jsx)(t.code,{children:"name"})," of the extension or the reference of the variable storing the name in the Message.json file"]}),"\n",(0,s.jsxs)(t.li,{children:["If the manifest file returns a variable starting with double underscores (e.g. ",(0,s.jsx)(t.code,{children:"__MSG_APP_NAME__"}),"), then attempts to find the extension's name from the 'en\\messages.json' file followed by the 'en_us\\messages.json' file.\r\nex: if the ",(0,s.jsx)(t.code,{children:"name"})," stored in the Manifest.json file is '",(0,s.jsx)(t.strong,{children:"MSG_APP_NAME"}),"' then both message.json files will be checked for the value stored under the 'APP_NAME' object."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Get the installed extensions for the Mozilla Firefox browser."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:".\\Get-FirefoxExtensions.ps1\n"})}),"\n",(0,s.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,s.jsx)(t.p,{children:".\\Get-FirefoxExtensions-log.txt\r\n.\\Get-FirefoxExtensions-error.txt"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"    System.Management.Automation.PSCustomObject\r\n\r\n    Name                    MemberType   Definition\r\n    ----                    ----------   ----------\r\n    Equals                  Method       bool Equals(System.Object obj)\r\n    GetHashCode             Method       int GetHashCode()\r\n    GetType                 Method       type GetType()\r\n    ToString                Method       string ToString()\r\n    Browser                 NoteProperty string Browser=Firefox\r\n    ExtensionID             NoteProperty System.String ExtensionID={a7fe67a3-d248-48d9-93ce-633fc02cdc98}\r\n    ExtensionInstallTimeUtc NoteProperty datetime ExtensionInstallTimeUtc=03/01/2023 16:55:45\r\n    ExtensionName           NoteProperty string ExtensionName=The best extension\r\n    ExtensionVersion        NoteProperty string ExtensionVersion=1.1.1\r\n    UserProfilePath         NoteProperty System.String UserProfilePath=C:\\Users\\localadmin\n"})})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);