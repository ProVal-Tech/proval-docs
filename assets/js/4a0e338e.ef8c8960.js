"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[10772],{487305:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>R,frontMatter:()=>o,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"cwa/monitors/d18b57a8-8b6a-41aa-939b-f0dff26bd5cf","title":"Import- DHCP Scope(s)  25% and 20 IP Addresses Available","description":"This document outlines the steps for setting up a DHCP Scope Monitoring system using SQL queries to insert monitoring parameters into the group agents database. It provides a detailed guide on how to obtain group IDs, modify SQL queries, and apply alert templates for effective monitoring of DHCP scopes.","source":"@site/docs/cwa/monitors/Import- DHCP Scope(s)  25% and 20 IP Addresses Available.md","sourceDirName":"cwa/monitors","slug":"/cwa/monitors/d18b57a8-8b6a-41aa-939b-f0dff26bd5cf","permalink":"/proval-docs/docs/cwa/monitors/d18b57a8-8b6a-41aa-939b-f0dff26bd5cf","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/monitors/Import- DHCP Scope(s)  25% and 20 IP Addresses Available.md","tags":[{"inline":false,"label":"Database","permalink":"/proval-docs/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Networking","permalink":"/proval-docs/docs/tags/networking","description":"Documents related to network infrastructure and management practices"},{"inline":false,"label":"Setup","permalink":"/proval-docs/docs/tags/setup","description":"Documents on setting up software and hardware configurations"}],"version":"current","frontMatter":{"id":"d18b57a8-8b6a-41aa-939b-f0dff26bd5cf","title":"Import- DHCP Scope(s)  25% and 20 IP Addresses Available","title_meta":"Import- DHCP Scope(s)  25% and 20 IP Addresses Available","keywords":["dhcp","monitoring","groupid","alert","network"],"description":"This document outlines the steps for setting up a DHCP Scope Monitoring system using SQL queries to insert monitoring parameters into the group agents database. It provides a detailed guide on how to obtain group IDs, modify SQL queries, and apply alert templates for effective monitoring of DHCP scopes.","tags":["database","networking","setup"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Import- CWAFileService - Invalid Token","permalink":"/proval-docs/docs/cwa/monitors/c7d4a134-33d0-4598-add3-f41bd187331d"},"next":{"title":"Import- DHCP Scope(s)  5 IP Addresses Available","permalink":"/proval-docs/docs/cwa/monitors/81c88531-4918-4d74-ac84-efbc2c3cfe51"}}');var a=t(474848),n=t(28453);const o={id:"d18b57a8-8b6a-41aa-939b-f0dff26bd5cf",title:"Import- DHCP Scope(s)  25% and 20 IP Addresses Available",title_meta:"Import- DHCP Scope(s)  25% and 20 IP Addresses Available",keywords:["dhcp","monitoring","groupid","alert","network"],description:"This document outlines the steps for setting up a DHCP Scope Monitoring system using SQL queries to insert monitoring parameters into the group agents database. It provides a detailed guide on how to obtain group IDs, modify SQL queries, and apply alert templates for effective monitoring of DHCP scopes.",tags:["database","networking","setup"],draft:!1,unlisted:!1},c=void 0,d={},i=[{value:"Step 1",id:"step-1",level:2},{value:"Step 2",id:"step-2",level:2},{value:"Step 3",id:"step-3",level:2},{value:"Step 4",id:"step-4",level:2},{value:"Step 5",id:"step-5",level:2}];function p(e){const r={br:"br",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"step-1",children:"Step 1"}),"\n",(0,a.jsx)(r.p,{children:"Obtain the group ID(s) of the group(s) that the remote monitor should be applied to."}),"\n",(0,a.jsx)(r.h2,{id:"step-2",children:"Step 2"}),"\n",(0,a.jsxs)(r.p,{children:["Copy the following query and replace ",(0,a.jsx)(r.strong,{children:"YOUR COMMA SEPARATED LIST OF GROUPID(S)"})," with the group ID(s) of the relevant groups:",(0,a.jsx)(r.br,{}),"\n","(The string to replace can be found at the very bottom of the query, right after ",(0,a.jsx)(r.strong,{children:"WHERE"}),")"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"INSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Production - DHCP Scope(s) < 25% and 20 IP Addresses Available' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'DHCP Scope(s) with Insufficient IP Addresses Detected on %computername%~~~The problem is fixed.!!!DHCP Scope(s) with Insufficient IP Addresses Detected on %computername%~~~Active DHCP scope(s) with less than 25% and 20 available IP addresses detected on %ClientName%/%ComputerName% at %LocationName%. \\r\\n\\r\\nThis could potentially lead to IP address allocation problems and network connectivity issues for users. Immediate action should be taken to ensure sufficient IP addresses are available within the DHCP scopes to prevent any network disruptions. Please investigate the DHCP server configuration and take the necessary steps to address this issue. Potential solutions could include expanding IP address ranges, optimizing IP address allocation, or adding additional DHCP servers.\\r\\n\\r\\nAffected Scope(s) details: \\r\\n%RESULT%' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'3600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -Command \"$ErroractionPreference= /'SilentlyContinue/'; $t1 = 20; $t2 = 25; $ss = try {Get-DhcpServerv4Failover -erroraction stop | Where-Object {$_.ServerRole -eq /'Active/' -and $_.ScopeId -match /'./'}} catch {$null}; if ($ss.ServerRole -eq /'Standby/') {return}; $scopes = Get-DhcpServerv4Scope | Where-Object {$_.State -eq /'Active/'}; $DhcpScopes = foreach($scope in $scopes) {$scopeStats = $scope | Get-DhcpServerv4ScopeStatistics; [pscustomobject]@{scopeid = $scope.scopeid; startrange = $scope.startrange; endrange = $scope.endrange; free = $(if ($ss.ReservePercent -gt 0) {[Math]::Max(0, $($scopestats.free - [Math]::Round((($scopestats.free + $scopestats.InUse ) * $ss.ReservePercent)/100)))} else {$scopestats.free}); inuse = $scopestats.inuse; Reserved = $scopestats.Reserved; Percentagefree = $(if ($ss.ReservePercent -gt 0) {[Math]::Max(0, $([Math]::Round((100 - $scopestats.PercentageInUse - $ss.ReservePercent),2)))} else {[Math]::Round((100 - $scopestats.PercentageInUse),2)})}}; $DhcpScopes | Where-Object {($_.free -le $t1) -and ($_.Percentagefree -le $t2)}\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'10|(^(//r//n%7COK%7C[//s//S])$)%7C(^$)|11|(^(//r//n%7COK%7C[//s//S])$)%7C(^$)%7C(scopeid.*?:.*?[//r//n]{0,}.*?startrange)|10|(scopeid.*?:.*?[//r//n]{0,}.*?startrange)' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'0' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (YOUR COMMA SEPARATED LIST OF GROUPID(S))\r\nAND m.groupid NOT IN (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - DHCP Scope(s) < 25% and 20 IP Addresses Available')\n"})}),"\n",(0,a.jsx)(r.h2,{id:"step-3",children:"Step 3"}),"\n",(0,a.jsx)(r.p,{children:"An example of a query with a group ID:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"INSERT INTO groupagents \r\nSELECT '' as `AgentID`,\r\n`groupid` as `GroupID`,\r\n'0' as `SearchID`,\r\n'ProVal - Production - DHCP Scope(s) < 25% and 20 IP Addresses Available' as `Name`,\r\n'6' as `CheckAction`,\r\n'1' as `AlertAction`,\r\n'DHCP Scope(s) with Insufficient IP Addresses Detected on %computername%~~~The problem is fixed.!!!DHCP Scope(s) with Insufficient IP Addresses Detected on %computername%~~~Active DHCP scope(s) with less than 25% and 20 available IP addresses detected on %ClientName%/%ComputerName% at %LocationName%. \\r\\n\\r\\nThis could potentially lead to IP address allocation problems and network connectivity issues for users. Immediate action should be taken to ensure sufficient IP addresses are available within the DHCP scopes to prevent any network disruptions. Please investigate the DHCP server configuration and take the necessary steps to address this issue. Potential solutions could include expanding IP address ranges, optimizing IP address allocation, or adding additional DHCP servers.\\r\\n\\r\\nAffected Scope(s) details: \\r\\n%RESULT%' as `AlertMessage`,\r\n'0' as `ContactID`,\r\n'3600' as `interval`,\r\n'127.0.0.1' as `Where`,\r\n'7' as `What`,\r\n'C://Windows//System32//WindowsPowerShell//v1.0//powershell.exe -ExecutionPolicy Bypass -Command \"$ErroractionPreference= /'SilentlyContinue/'; $t1 = 20; $t2 = 25; $ss = try {Get-DhcpServerv4Failover -erroraction stop | Where-Object {$_.ServerRole -eq /'Active/' -and $_.ScopeId -match /'./'}} catch {$null}; if ($ss.ServerRole -eq /'Standby/') {return}; $scopes = Get-DhcpServerv4Scope | Where-Object {$_.State -eq /'Active/'}; $DhcpScopes = foreach($scope in $scopes) {$scopeStats = $scope | Get-DhcpServerv4ScopeStatistics; [pscustomobject]@{scopeid = $scope.scopeid; startrange = $scope.startrange; endrange = $scope.endrange; free = $(if ($ss.ReservePercent -gt 0) {[Math]::Max(0, $($scopestats.free - [Math]::Round((($scopestats.free + $scopestats.InUse ) * $ss.ReservePercent)/100)))} else {$scopestats.free}); inuse = $scopestats.inuse; Reserved = $scopestats.Reserved; Percentagefree = $(if ($ss.ReservePercent -gt 0) {[Math]::Max(0, $([Math]::Round((100 - $scopestats.PercentageInUse - $ss.ReservePercent),2)))} else {[Math]::Round((100 - $scopestats.PercentageInUse),2)})}}; $DhcpScopes | Where-Object {($_.free -le $t1) -and ($_.Percentagefree -le $t2)}\"' as `DataOut`,\r\n'16' as `Comparor`,\r\n'10|(^(//r//n%7COK%7C[//s//S])$)%7C(^$)|11|(^(//r//n%7COK%7C[//s//S])$)%7C(^$)%7C(scopeid.*?:.*?[//r//n]{0,}.*?startrange)|10|(scopeid.*?:.*?[//r//n]{0,}.*?startrange)' as `DataIn`,\r\n'' as `IDField`,\r\n'1' as `AlertStyle`,\r\n'0' as `ScriptID`,\r\n'' as `datacollector`,\r\n'21' as `Category`,\r\n'0' as `TicketCategory`,\r\n'0' as `ScriptTarget`,\r\nCONCAT(\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\n'-',\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1),\r\nSUBSTRING('abcdef0123456789', FLOOR(RAND()*16+1), 1)\r\n) as `GUID`,\r\n'root' as `UpdatedBy`,\r\n(NOW()) as `UpdateDate`\r\nFROM mastergroups m\r\nWHERE m.groupid IN (1674)\r\nAND m.groupid NOT IN (SELECT DISTINCT groupid FROM groupagents WHERE `Name` = 'ProVal - Production - DHCP Scope(s) < 25% and 20 IP Addresses Available')\n"})}),"\n",(0,a.jsx)(r.h2,{id:"step-4",children:"Step 4"}),"\n",(0,a.jsx)(r.p,{children:"Now execute your query from a RAWSQL monitor set."}),"\n",(0,a.jsx)(r.h2,{id:"step-5",children:"Step 5"}),"\n",(0,a.jsx)(r.p,{children:"Locate your remote monitor by opening the group(s) remote monitors tab, then apply the appropriate alert template."})]})}function R(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>c});var s=t(296540);const a={},n=s.createContext(a);function o(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);