"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[71652],{932702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"powershell/4d7993ab-1fa8-4b96-9f19-f503737ea015","title":"Get-PowerPlan","description":"Documentation for the Get-PowerPlan command to retrieve information about power plans, their subgroups, and power settings.","source":"@site/docs/powershell/Get-PowerPlan.md","sourceDirName":"powershell","slug":"/powershell/4d7993ab-1fa8-4b96-9f19-f503737ea015","permalink":"/docs/powershell/4d7993ab-1fa8-4b96-9f19-f503737ea015","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/powershell/Get-PowerPlan.md","tags":[{"inline":false,"label":"Performance","permalink":"/docs/tags/performance","description":"Documents related to enhancing system and application performance"},{"inline":false,"label":"Windows","permalink":"/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"4d7993ab-1fa8-4b96-9f19-f503737ea015","title":"Get-PowerPlan","title_meta":"Get-PowerPlan","keywords":["powerplan","settings","configuration","energy"],"description":"Documentation for the Get-PowerPlan command to retrieve information about power plans, their subgroups, and power settings.","tags":["performance","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-PatchConfig","permalink":"/docs/powershell/b43fd352-5874-472a-9fd9-02c8aee38515"},"next":{"title":"Get-RecentEventLog","permalink":"/docs/powershell/4cc33728-0327-42b5-86d3-e85c91635c71"}}');var r=n(474848),s=n(28453);const i={id:"4d7993ab-1fa8-4b96-9f19-f503737ea015",title:"Get-PowerPlan",title_meta:"Get-PowerPlan",keywords:["powerplan","settings","configuration","energy"],description:"Documentation for the Get-PowerPlan command to retrieve information about power plans, their subgroups, and power settings.",tags:["performance","windows"],draft:!1,unlisted:!1},a=void 0,l={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Output",id:"output",level:2}];function p(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Retrieves information about power plans, their subgroups, and power settings."}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Executes the ",(0,r.jsx)(t.code,{children:"powercfg /list"})," command to get a list of available power plans."]}),"\n",(0,r.jsx)(t.li,{children:"Iterates through each power plan in the list obtained from the previous step."}),"\n",(0,r.jsxs)(t.li,{children:["For each power plan, extracts the GUID and queries its settings using ",(0,r.jsx)(t.code,{children:"powercfg /query"}),"."]}),"\n",(0,r.jsx)(t.li,{children:"Identifies subgroups within the power plan settings by using the 'Subgroup GUID:' string as a marker."}),"\n",(0,r.jsx)(t.li,{children:"For each subgroup, extracts information about power settings, including GUID, name, current AC power setting, current DC power setting, and possible settings."}),"\n",(0,r.jsx)(t.li,{children:"Creates custom PowerShell objects for each power setting and subgroup, organizing them into a structured format."}),"\n",(0,r.jsx)(t.li,{children:"Assembles the information about the power plan, including its name, GUID, active status, and the subgroups with their associated power settings."}),"\n",(0,r.jsx)(t.li,{children:"Aggregates all the power plans with their respective subgroups and power settings into an array."}),"\n",(0,r.jsx)(t.li,{children:"Returns the array containing detailed information about available power plans, subgroups, and power settings."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"To retrieve information about available power plans, subgroups, and power settings, run the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-powershell",children:".\\\\Get-PowerPlansInfo.ps1\n"})}),"\n",(0,r.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,r.jsxs)(t.p,{children:["The output will be saved in ",(0,r.jsx)(t.code,{children:"Get-PowerPlansInfo-log.txt"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(296540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);