"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[22709],{10295:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"cwa/scripts/f01cab64-00bf-4f94-92ea-280c87cf06ca","title":"Move Agents to Correct Location","description":"This document outlines the process and requirements for running the Agent Checking in with Wrong Location Autofix script. It details the necessary variables, dependencies, and the expected output when the script is executed as part of a monitor set in ProVal.","source":"@site/docs/cwa/scripts/Move Agents to Correct Location.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/f01cab64-00bf-4f94-92ea-280c87cf06ca","permalink":"/proval-docs/docs/cwa/scripts/f01cab64-00bf-4f94-92ea-280c87cf06ca","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/Move Agents to Correct Location.md","tags":[],"version":"current","frontMatter":{"id":"f01cab64-00bf-4f94-92ea-280c87cf06ca","title":"Move Agents to Correct Location","title_meta":"Move Agents to Correct Location","keywords":["autofix","monitor","location","computer","agent"],"description":"This document outlines the process and requirements for running the Agent Checking in with Wrong Location Autofix script. It details the necessary variables, dependencies, and the expected output when the script is executed as part of a monitor set in ProVal.","tags":[],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Move Agent to Retired Assets and Create Ticket","permalink":"/proval-docs/docs/cwa/scripts/b091a26a-23d5-43cc-a00b-0075e2940ad2"},"next":{"title":"Move New Agent to Matching Location (DomainRouter)","permalink":"/proval-docs/docs/cwa/scripts/f04ef005-9203-4967-9bcc-11457c91d2dc"}}');var s=n(474848),i=n(28453);const c={id:"f01cab64-00bf-4f94-92ea-280c87cf06ca",title:"Move Agents to Correct Location",title_meta:"Move Agents to Correct Location",keywords:["autofix","monitor","location","computer","agent"],description:"This document outlines the process and requirements for running the Agent Checking in with Wrong Location Autofix script. It details the necessary variables, dependencies, and the expected output when the script is executed as part of a monitor set in ProVal.",tags:[],draft:!1,unlisted:!1},r=void 0,a={},d=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"Process",id:"process",level:2},{value:"Output",id:"output",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(t.p,{children:["The script must be run as an Autofix script from the ",(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/monitors/b8313365-d95d-41bd-b2fc-e3e77f4fdcf7",children:"ProVal - Development - Agent Checking in with Wrong Location"})," monitor set. It will move the computer to the New_Location detected in the monitor set."]}),"\n",(0,s.jsx)(t.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,s.jsxs)(t.p,{children:["Since ",(0,s.jsx)(t.code,{children:"@FieldName@"})," and ",(0,s.jsx)(t.code,{children:"@Result@"})," are compulsory variables for the script to function, it will not work for manual executions."]}),"\n",(0,s.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/monitors/b8313365-d95d-41bd-b2fc-e3e77f4fdcf7",children:"ProVal - Development - Agent Checking in with Wrong Location"})}),"\n",(0,s.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"STATUS"}),(0,s.jsx)(t.td,{children:"Success or Failed status of the monitor set."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"RESULT"}),(0,s.jsx)(t.td,{children:"Result or test value from the monitor set."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FIELDNAME"}),(0,s.jsx)(t.td,{children:"Field name or identity field from the monitor set."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"process",children:"Process"}),"\n",(0,s.jsx)(t.p,{children:"The monitor set will call the script, which will move the computer to the new location as specified in the monitor set."}),"\n",(0,s.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,s.jsx)(t.p,{children:"Removal of agents from the monitor set's detection."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var o=n(296540);const s={},i=o.createContext(s);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);