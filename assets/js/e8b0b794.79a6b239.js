"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[48072],{215639:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"cwa/scripts/a9e0b7ac-4ce2-4376-ac97-8cdee2d122dc","title":"Get-DCDiagReport","description":"This document describes an automated wrapper for the agnostic Get-DCDiagReport.ps1 script. It details how the script creates a ticket when the PowerShell script fails or when the diagnostic report indicates any failure. It includes sample runs, dependencies, variables, and parameters for both global and user-defined settings.","source":"@site/docs/cwa/scripts/Get-DCDiagReport.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/a9e0b7ac-4ce2-4376-ac97-8cdee2d122dc","permalink":"/proval-docs/docs/cwa/scripts/a9e0b7ac-4ce2-4376-ac97-8cdee2d122dc","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/Get-DCDiagReport.md","tags":[{"inline":false,"label":"Diagnostic","permalink":"/proval-docs/docs/tags/diagnostic","description":"Documents focused on diagnosing and troubleshooting system issues"},{"inline":false,"label":"Report","permalink":"/proval-docs/docs/tags/report","description":"Documents focused on generating and managing reports"}],"version":"current","frontMatter":{"id":"a9e0b7ac-4ce2-4376-ac97-8cdee2d122dc","title":"Get-DCDiagReport","title_meta":"Get-DCDiagReport","keywords":["automate","wrapper","ticket","diagnostic","report"],"description":"This document describes an automated wrapper for the agnostic Get-DCDiagReport.ps1 script. It details how the script creates a ticket when the PowerShell script fails or when the diagnostic report indicates any failure. It includes sample runs, dependencies, variables, and parameters for both global and user-defined settings.","tags":["diagnostic","report"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Get-CrashDump","permalink":"/proval-docs/docs/cwa/scripts/dde000a0-373a-4023-a594-04e532b5ad57"},"next":{"title":"Get-DellDockStation","permalink":"/proval-docs/docs/cwa/scripts/910bdf04-c4ab-413d-a1a6-aafcd6d583d0"}}');var i=s(474848),n=s(28453);const c={id:"a9e0b7ac-4ce2-4376-ac97-8cdee2d122dc",title:"Get-DCDiagReport",title_meta:"Get-DCDiagReport",keywords:["automate","wrapper","ticket","diagnostic","report"],description:"This document describes an automated wrapper for the agnostic Get-DCDiagReport.ps1 script. It details how the script creates a ticket when the PowerShell script fails or when the diagnostic report indicates any failure. It includes sample runs, dependencies, variables, and parameters for both global and user-defined settings.",tags:["diagnostic","report"],draft:!1,unlisted:!1},a=void 0,d={},l=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"Global Parameters",id:"global-parameters",level:4},{value:"User Parameters",id:"user-parameters",level:4},{value:"Output",id:"output",level:2},{value:"Ticketing",id:"ticketing",level:2}];function o(e){const t={a:"a",br:"br",code:"code",h2:"h2",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(t.p,{children:"This is an automated wrapper for the agnostic Get-DCDiagReport.ps1. The script will create a ticket if the PowerShell script fails on the computer for any reason or if the diagnostic report returns any failure."}),"\n",(0,i.jsx)(t.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,i.jsxs)(t.p,{children:["Run the script without setting the ",(0,i.jsx)(t.code,{children:"Excluded_TestNames"})," parameter to perform all available tests during the diagnostic.",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.img,{alt:"Sample Run 1",src:s(669284).A+"",width:"485",height:"401"})]}),"\n",(0,i.jsxs)(t.p,{children:["A set of specific test names can be passed to the ",(0,i.jsx)(t.code,{children:"Excluded_TestNames"})," parameter to exclude from the diagnostic.",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.img,{alt:"Sample Run 2",src:s(6143).A+"",width:"497",height:"420"})]}),"\n",(0,i.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/proval-docs/docs/powershell/3c0d8537-9331-4623-90a0-8d2f724d19af",children:"EPM - Data Collection - Agnostic - Get-DCDiagReport.ps1"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,i.jsx)(t.p,{children:"Document the various variables in the script. Delete any section that is not relevant to your script."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PsExecuteCommand"}),(0,i.jsx)(t.td,{children:"The command to send to PowerShell to execute the agnostic script."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"PowerShellResult"}),(0,i.jsx)(t.td,{children:"The result of the DCDiag report."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"TicketFinishBody"}),(0,i.jsx)(t.td,{children:"The body of a finished ticket."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"TicketBody"}),(0,i.jsx)(t.td,{children:"The body of a created ticket or comment."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"TickID"}),(0,i.jsx)(t.td,{children:"The ID of any currently open ticket for this issue."})]})]})]}),"\n",(0,i.jsx)(t.h4,{id:"global-parameters",children:"Global Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Example"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ProjectName"}),(0,i.jsx)(t.td,{children:"Get-DCDiagReport"}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The name of the agnostic solution"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ExpectedSuccessReturn"}),(0,i.jsx)(t.td,{children:"TestName"}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Validates the results of the PowerShell execution."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"TicketCreateSubject"}),(0,i.jsx)(t.td,{children:"DC Diag Results for %ComputerName%"}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The subject of any ticket created from this script."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"TicketCreationCategory"}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The ticket creation category for any created ticket from this script."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"DoNotCommentOpenTicket"}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"Toggles commenting on open tickets for subsequent runs."})]})]})]}),"\n",(0,i.jsx)(t.h4,{id:"user-parameters",children:"User Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Example"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Excluded_TestNames"}),(0,i.jsx)(t.td,{children:"DNS,Advertising,FrsEvent,VerifyReplicas,Services"}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"Names of the tests to exclude from the diagnostic. Names should be separated by a comma (do not use spaces). Allowed test names are as follows: 'Advertising', 'CutoffServers', 'FrsEvent', 'DFSREvent', 'SysVolCheck', 'FrsSysVol', 'KccEvent', 'MachineAccount', 'NCSecDesc', 'NetLogons', 'ObjectsReplicated', 'Replications', 'RidManager', 'Services', 'SystemLog', 'Topology', 'VerifyReferences', 'VerifyReplicas', 'DNS', 'CheckSDRefDom', 'CrossRefValidation', 'LocatorCheck', 'FsmoCheck', 'Intersite'."})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Script log"}),"\n",(0,i.jsx)(t.li,{children:"Ticket"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"ticketing",children:"Ticketing"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"Ticketing",src:s(109206).A+"",width:"808",height:"1000"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.strong,{children:"The script will not close or finish any ticket."})]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},669284:(e,t,s)=>{s.d(t,{A:()=>r});const r=s.p+"assets/images/image_1-dfa0567a58d5a31b07db3e92b05ad88d.png"},6143:(e,t,s)=>{s.d(t,{A:()=>r});const r=s.p+"assets/images/image_2-7e53d0c704cf88820c1cbb88c0d7c4dc.png"},109206:(e,t,s)=>{s.d(t,{A:()=>r});const r=s.p+"assets/images/image_3-957ea18d94fb741fd40bdd8c3e078e73.png"},28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var r=s(296540);const i={},n=r.createContext(i);function c(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);