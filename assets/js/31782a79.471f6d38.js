"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[11393],{847145:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"cwa/views/7f064a98-679c-4e7c-a8da-499c269b551f","title":"plugin_proval_v_monitorauditat","description":"This document provides a detailed SQL script to create a monitor audit view for clients utilizing AutoTask plugins. The script includes necessary joins and conditions to retrieve relevant monitoring information, ensuring effective management and oversight of monitoring activities.","source":"@site/docs/cwa/views/plugin_proval_v_monitorauditat.md","sourceDirName":"cwa/views","slug":"/cwa/views/7f064a98-679c-4e7c-a8da-499c269b551f","permalink":"/proval-docs/docs/cwa/views/7f064a98-679c-4e7c-a8da-499c269b551f","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/views/plugin_proval_v_monitorauditat.md","tags":[{"inline":false,"label":"Autotask","permalink":"/proval-docs/docs/tags/autotask","description":"Documents on Autotask software for IT management and task automation"},{"inline":false,"label":"Database","permalink":"/proval-docs/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"SQL","permalink":"/proval-docs/docs/tags/sql","description":"Documents discussing Structured Query Language and database interactions"}],"version":"current","frontMatter":{"id":"7f064a98-679c-4e7c-a8da-499c269b551f","title":"plugin_proval_v_monitorauditat","title_meta":"plugin_proval_v_monitorauditat","keywords":["monitor","autotask","view","sql","audit"],"description":"This document provides a detailed SQL script to create a monitor audit view for clients utilizing AutoTask plugins. The script includes necessary joins and conditions to retrieve relevant monitoring information, ensuring effective management and oversight of monitoring activities.","tags":["autotask","database","sql"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"plugin_proval_probeconfig","permalink":"/proval-docs/docs/cwa/views/bd07c1dc-34ff-4f87-aae9-b43dcd1b5057"},"next":{"title":"plugin_proval_v_patching_metrics_overview","permalink":"/proval-docs/docs/cwa/views/2a7060e4-0b45-4246-a9ea-f39818cc93e8"}}');var a=r(474848),l=r(28453);const i={id:"7f064a98-679c-4e7c-a8da-499c269b551f",title:"plugin_proval_v_monitorauditat",title_meta:"plugin_proval_v_monitorauditat",keywords:["monitor","autotask","view","sql","audit"],description:"This document provides a detailed SQL script to create a monitor audit view for clients utilizing AutoTask plugins. The script includes necessary joins and conditions to retrieve relevant monitoring information, ensuring effective management and oversight of monitoring activities.",tags:["autotask","database","sql"],draft:!1,unlisted:!1},s=void 0,o={},c=[{value:"Dependencies",id:"dependencies",level:2},{value:"Description",id:"description",level:2},{value:"SQL",id:"sql",level:2}];function u(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"AutoTask Plugin - Enabled and Setup"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(t.p,{children:"Creates a monitor audit view for clients with the AutoTask plugins."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Notes"}),": If the script doesn't work, run the SELECT statement below and export from a RAWSQL monitor."]}),"\n",(0,a.jsx)(t.h2,{id:"sql",children:"SQL"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"CREATE VIEW `plugin_proval_v_monitorauditat` AS \r\nSELECT \r\n  `ga`.`AgentID` AS `AgentID`, \r\n  `ga`.`Name` AS `Monitor`, \r\n  `mg`.`FullName` AS `Group Path`, \r\n  'N/A' AS `Next Scan`, \r\n  'N/A' AS `Disabled`, \r\n  'Remote' AS `Monitor Type`, \r\n  `ga`.`AlertMessage` AS `AlertMessage`, \r\n  `alt`.`Name` AS `Alert Template`, \r\n  `alts`.`alertid` AS `AlertID`, \r\n  IF(\r\n    (1024 & `alts`.`alertaction`) = 1024, \r\n    'True', \r\n    'False'\r\n  ) AS `Alert Ticket Creation`, \r\n  IF(\r\n    (512 & `alts`.`alertaction`) = 512, \r\n    IFNULL(\r\n      (SELECT \r\n        `labtech`.`lt_scripts`.`ScriptName` \r\n      FROM \r\n        `labtech`.`lt_scripts` \r\n      WHERE \r\n        `labtech`.`lt_scripts`.`ScriptId` = `alts`.`scriptid`\r\n      ), \r\n      'N/A'\r\n    ), \r\n    'N/A'\r\n  ) AS `Script Assigned`, \r\n  `cat`.`CategoryName` AS `CategoryName`, \r\n  IF(\r\n    ISNULL(`sb`.`AtQueueName`), \r\n    CONCAT(\r\n      (SELECT \r\n        `labtech`.`plugin_at_queues`.`AtQueueName` \r\n      FROM \r\n        `labtech`.`plugin_at_queues` \r\n      WHERE \r\n        `labtech`.`plugin_at_queues`.`ATQueueID` = (\r\n          SELECT \r\n            `labtech`.`properties`.`value` \r\n          FROM \r\n            `labtech`.`properties` \r\n          WHERE \r\n            `labtech`.`properties`.`name` = 'plugin_at_dbqueue'\r\n        )\r\n      ), \r\n      '(Default)'\r\n    ), \r\n    `sb`.`AtQueueName`\r\n  ) AS `AT Queue` \r\nFROM \r\n  (\r\n    (\r\n      (\r\n        (\r\n          (\r\n            `labtech`.`groupagents` `ga` \r\n            JOIN `labtech`.`mastergroups` `mg` ON(`mg`.`GroupID` = `ga`.`GroupID`)\r\n          ) \r\n          LEFT JOIN `labtech`.`alerttemplate` `alt` ON(`alt`.`AlertActionID` = `ga`.`AlertAction`)\r\n        ) \r\n        LEFT JOIN (\r\n          SELECT \r\n            `labtech`.`alerttemplates`.`AlertActionID` AS `alertactionid`, \r\n            `labtech`.`alerttemplates`.`AlertAction` AS `alertaction`, \r\n            `labtech`.`alerttemplates`.`AlertID` AS `alertid`, \r\n            `labtech`.`alerttemplates`.`ScriptID` AS `scriptid` \r\n          FROM \r\n            `labtech`.`alerttemplates` \r\n          WHERE \r\n            `labtech`.`alerttemplates`.`AlertActionID` = 2 \r\n          GROUP BY \r\n            `labtech`.`alerttemplates`.`AlertActionID`\r\n        ) `alts` ON(`alt`.`AlertActionID` = `alts`.`alertactionid`)\r\n      ) \r\n      LEFT JOIN `labtech`.`infocategory` `cat` ON(`cat`.`ID` = `ga`.`TicketCategory`)\r\n    ) \r\n    LEFT JOIN `labtech`.`plugin_at_categorymapping` `map` ON(`map`.`CategoryID` = `cat`.`ID`)\r\n  ) \r\n  LEFT JOIN `labtech`.`plugin_at_queues` `sb` ON(`sb`.`AtQueueID` = `map`.`AtQueueID`)\r\n) \r\nUNION ALL \r\nSELECT \r\n  `a`.`AgentID` AS `AgentID`, \r\n  `a`.`Name` AS `Monitor`, \r\n  `mgs`.`FullName` AS `Group Path`, \r\n  `a`.`LastScan` AS `Next Scan`, \r\n  IF(\r\n    TIMESTAMPDIFF(SECOND, `a`.`LastScan`, NOW()) < -(`a`.`interval` * 4), \r\n    'Yes', \r\n    'No'\r\n  ) AS `Disabled`, \r\n  'Internal' AS `Monitor Type`, \r\n  `a`.`AlertMessage` AS `AlertMessage`, \r\n  `alt`.`Name` AS `Alert Template`, \r\n  `alts`.`alertid` AS `AlertID`, \r\n  IF(\r\n    (1024 & `alts`.`alertaction`) = 1024, \r\n    'True', \r\n    'False'\r\n  ) AS `Alert Ticket Creation`, \r\n  IF(\r\n    (512 & `alts`.`alertaction`) = 512, \r\n    IFNULL(\r\n      (SELECT \r\n        `labtech`.`lt_scripts`.`ScriptName` \r\n      FROM \r\n        `labtech`.`lt_scripts` \r\n      WHERE \r\n        `labtech`.`lt_scripts`.`ScriptId` = `alts`.`scriptid`\r\n      ), \r\n      'N/A'\r\n    ), \r\n    'N/A'\r\n  ) AS `Script Assigned`, \r\n  `cat`.`CategoryName` AS `CategoryName`, \r\n  IF(\r\n    ISNULL(`sb`.`ATQueueName`), \r\n    CONCAT(\r\n      (SELECT \r\n        `labtech`.`plugin_at_queues`.`AtQueueName` \r\n      FROM \r\n        `labtech`.`plugin_at_queues` \r\n      WHERE \r\n        `labtech`.`plugin_at_queues`.`ATQueueID` = (\r\n          SELECT \r\n            `labtech`.`properties`.`value` \r\n          FROM \r\n            `labtech`.`properties` \r\n          WHERE \r\n            `labtech`.`properties`.`name` = 'plugin_at_dbqueue'\r\n        )\r\n      ), \r\n      '(Default)'\r\n    ), \r\n    `sb`.`ATQueueName`\r\n  ) AS `At Queue` \r\nFROM \r\n  (\r\n    (\r\n      (\r\n        (\r\n          (\r\n            `labtech`.`agents` `a` \r\n            JOIN `labtech`.`groupdagents` `gda` ON(`gda`.`AgentID` = `a`.`AgentID`)\r\n          ) \r\n          LEFT JOIN `labtech`.`mastergroups` `mgs` ON(`mgs`.`GroupID` = `gda`.`GroupID`)\r\n        ) \r\n        LEFT JOIN `labtech`.`alerttemplate` `alt` ON(`alt`.`AlertActionID` = `gda`.`AlertAction`)\r\n      ) \r\n      LEFT JOIN (\r\n        SELECT \r\n          `labtech`.`alerttemplates`.`AlertActionID` AS `alertactionid`, \r\n          `labtech`.`alerttemplates`.`AlertAction` AS `alertaction`, \r\n          `labtech`.`alerttemplates`.`AlertID` AS `alertid`, \r\n          `labtech`.`alerttemplates`.`ScriptID` AS `scriptid` \r\n        FROM \r\n          `labtech`.`alerttemplates` \r\n        WHERE \r\n          `labtech`.`alerttemplates`.`AlertActionID` = 2 \r\n        GROUP BY \r\n          `labtech`.`alerttemplates`.`AlertActionID`\r\n      ) `alts` ON(`alt`.`AlertActionID` = `alts`.`alertactionid`)\r\n    ) \r\n    LEFT JOIN `labtech`.`infocategory` `cat` ON(`cat`.`ID` = `gda`.`TicketCategory`)\r\n  ) \r\n  LEFT JOIN `labtech`.`plugin_at_categorymapping` `map` ON(`map`.`CategoryID` = `cat`.`ID`)\r\n) \r\nLEFT JOIN `labtech`.`plugin_at_queues` `sb` ON(`sb`.`ATQueueID` = `map`.`ATQueueID`)\r\n) \r\nUNION ALL \r\nSELECT \r\n  `a`.`AgentID` AS `AgentID`, \r\n  `a`.`Name` AS `Monitor`, \r\n  'Global' AS `Group Path`, \r\n  `a`.`LastScan` AS `Next Scan`, \r\n  IF(\r\n    TIMESTAMPDIFF(SECOND, `a`.`LastScan`, NOW()) < -(`a`.`interval` * 4), \r\n    'Yes', \r\n    'No'\r\n  ) AS `Disabled`, \r\n  'Global' AS `Monitor Type`, \r\n  `a`.`AlertMessage` AS `AlertMessage`, \r\n  IF(\r\n    ISNULL(`alt`.`Name`), \r\n    'Not Set', \r\n    `alt`.`Name`\r\n  ) AS `Alert Template`, \r\n  `alts`.`alertid` AS `AlertID`, \r\n  IF(\r\n    (1024 & `alts`.`alertaction`) = 1024, \r\n    'True', \r\n    'False'\r\n  ) AS `Alert Ticket Creation`, \r\n  IF(\r\n    (512 & `alts`.`alertaction`) = 512, \r\n    IFNULL(\r\n      (SELECT \r\n        `labtech`.`lt_scripts`.`ScriptName` \r\n      FROM \r\n        `labtech`.`lt_scripts` \r\n      WHERE \r\n        `labtech`.`lt_scripts`.`ScriptId` = `alts`.`scriptid`\r\n      ), \r\n      'N/A'\r\n    ), \r\n    'N/A'\r\n  ) AS `Script Assigned`, \r\n  IF(\r\n    ISNULL(`cat`.`CategoryName`), \r\n    'Not Set', \r\n    `cat`.`CategoryName`\r\n  ) AS `CategoryName`, \r\n  IF(\r\n    ISNULL(`sb`.`ATQueueName`), \r\n    CONCAT(\r\n      (SELECT \r\n        `labtech`.`plugin_at_queues`.`AtQueueName` \r\n      FROM \r\n        `labtech`.`plugin_at_queues` \r\n      WHERE \r\n        `labtech`.`plugin_at_queues`.`ATQueueID` = (\r\n          SELECT \r\n            `labtech`.`properties`.`value` \r\n          FROM \r\n            `labtech`.`properties` \r\n          WHERE \r\n            `labtech`.`properties`.`name` = 'plugin_at_dbqueue'\r\n        )\r\n      ), \r\n      '(Default)'\r\n    ), \r\n    `sb`.`ATQueueName`\r\n  ) AS `AT Queue` \r\nFROM \r\n  (\r\n    (\r\n      (\r\n        (\r\n          (\r\n            `labtech`.`agents` `a` \r\n            LEFT JOIN `labtech`.`alerttemplate` `alt` ON(`alt`.`AlertActionID` = `a`.`AlertAction`)\r\n          ) \r\n          LEFT JOIN (\r\n            SELECT \r\n              `labtech`.`alerttemplates`.`AlertActionID` AS `alertactionid`, \r\n              `labtech`.`alerttemplates`.`AlertAction` AS `alertaction`, \r\n              `labtech`.`alerttemplates`.`AlertID` AS `alertid`, \r\n              `labtech`.`alerttemplates`.`ScriptID` AS `scriptid` \r\n            FROM \r\n              `labtech`.`alerttemplates` \r\n            WHERE \r\n              `labtech`.`alerttemplates`.`AlertActionID` = 2 \r\n            GROUP BY \r\n              `labtech`.`alerttemplates`.`AlertActionID`\r\n          ) `alts` ON(`alt`.`AlertActionID` = `alts`.`alertactionid`)\r\n        ) \r\n        LEFT JOIN `labtech`.`infocategory` `cat` ON(`cat`.`ID` = `a`.`TicketCategory`)\r\n      ) \r\n      LEFT JOIN `labtech`.`plugin_at_categorymapping` `map` ON(`map`.`CategoryID` = `cat`.`ID`)\r\n    ) \r\n    LEFT JOIN `labtech`.`plugin_at_queues` `sb` ON(`sb`.`ATQueueID` = `map`.`ATQueueID`)\r\n  ) \r\nWHERE \r\n  (\r\n    (`a`.`DriveID` = '') \r\n    OR (`a`.`DriveID` = '0')\r\n  ) \r\n  AND (`a`.`ComputerID` < 1)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var n=r(296540);const a={},l=n.createContext(a);function i(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);