"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[39276],{25245:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"cwa/scripts/f68801e5-ac94-4219-900c-15f9d2fb92d4","title":"Build and Map Information Base Categories from CWM(board-Type-SubType)","description":"This document describes a script that automates the creation of information base categories for every imported manage board in the CW Manage Plugin, saving approximately 30 minutes of manual work. It includes details on dependencies, variables, global parameters, and the process involved.","source":"@site/docs/cwa/scripts/Build and Map Information Base Categories from CWM(board-Type-SubType).md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/f68801e5-ac94-4219-900c-15f9d2fb92d4","permalink":"/proval-docs/docs/cwa/scripts/f68801e5-ac94-4219-900c-15f9d2fb92d4","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/Build and Map Information Base Categories from CWM(board-Type-SubType).md","tags":[{"inline":false,"label":"Database","permalink":"/proval-docs/docs/tags/database","description":"Documents related to database management systems and operations"},{"inline":false,"label":"Security","permalink":"/proval-docs/docs/tags/security","description":"Documents discussing security measures and practices for IT systems"},{"inline":false,"label":"Update","permalink":"/proval-docs/docs/tags/update","description":"Documents discussing software and system updates and their management"}],"version":"current","frontMatter":{"id":"f68801e5-ac94-4219-900c-15f9d2fb92d4","title":"Build and Map Information Base Categories from CWM(board-Type-SubType)","title_meta":"Build and Map Information Base Categories from CWM(board-Type-SubType)","keywords":["script","manage","categories","ticket","automation"],"description":"This document describes a script that automates the creation of information base categories for every imported manage board in the CW Manage Plugin, saving approximately 30 minutes of manual work. It includes details on dependencies, variables, global parameters, and the process involved.","tags":["database","security","update"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Build and Map Information Base Categories from CWM(board-Type)","permalink":"/proval-docs/docs/cwa/scripts/5028b9c1-b787-4e98-801f-efc670c0d662"},"next":{"title":"Build and Map Information Base Categories from CWM(board-Type-SubType-Item","permalink":"/proval-docs/docs/cwa/scripts/ff2075a4-f6a2-4ac1-b548-286276aa35d8"}}');var i=t(474848),r=t(28453);const n={id:"f68801e5-ac94-4219-900c-15f9d2fb92d4",title:"Build and Map Information Base Categories from CWM(board-Type-SubType)",title_meta:"Build and Map Information Base Categories from CWM(board-Type-SubType)",keywords:["script","manage","categories","ticket","automation"],description:"This document describes a script that automates the creation of information base categories for every imported manage board in the CW Manage Plugin, saving approximately 30 minutes of manual work. It includes details on dependencies, variables, global parameters, and the process involved.",tags:["database","security","update"],draft:!1,unlisted:!1},o=void 0,d={},c=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"Global Parameters",id:"global-parameters",level:4},{value:"Process",id:"process",level:2},{value:"Output",id:"output",level:2}];function l(e){const a={h2:"h2",h4:"h4",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(a.p,{children:"This script will create information base categories (ticket categories) for every imported manage board."}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"Time Saved by Automation:"})," 30 Minutes"]}),"\n",(0,i.jsx)(a.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"Sample Run",src:t(614300).A+"",width:"380",height:"311"})}),"\n",(0,i.jsx)(a.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(a.p,{children:"The CW Manage Plugin should be configured."}),"\n",(0,i.jsx)(a.h2,{id:"variables",children:"Variables"}),"\n",(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:(0,i.jsx)(a.strong,{children:"Variable Name"})}),(0,i.jsx)(a.th,{children:(0,i.jsx)(a.strong,{children:"Description"})})]})}),(0,i.jsxs)(a.tbody,{children:[(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"InfoCats"}),(0,i.jsx)(a.td,{children:"This variable stores the results of the SQL query which fetches the info categories."})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"UpdateExistingInfoCats"}),(0,i.jsx)(a.td,{children:"This variable stores the results of the SQL query which updates the info base categories."})]})]})]}),"\n",(0,i.jsx)(a.h4,{id:"global-parameters",children:"Global Parameters"}),"\n",(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:"Name"}),(0,i.jsx)(a.th,{children:"Example"}),(0,i.jsx)(a.th,{children:"Required"}),(0,i.jsx)(a.th,{children:"Description"})]})}),(0,i.jsx)(a.tbody,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"I have backed up the db"}),(0,i.jsx)(a.td,{children:"1"}),(0,i.jsx)(a.td,{children:"True"}),(0,i.jsx)(a.td,{children:"This indicates that the DB has been backed up prior to making any changes to the Infobase categories."})]})})]}),"\n",(0,i.jsx)(a.h2,{id:"process",children:"Process"}),"\n",(0,i.jsx)(a.p,{children:"This script will create information base categories (ticket categories) for every imported manage board. It runs three SQL queries to retrieve, ignore, and update the info base categories in the CW Manage Plugin."}),"\n",(0,i.jsx)(a.h2,{id:"output",children:"Output"}),"\n",(0,i.jsx)(a.p,{children:"CW Manage Plugin"})]})}function p(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},614300:(e,a,t)=>{t.d(a,{A:()=>s});const s=t.p+"assets/images/image_1-0147bbdf55d2baf2a74e0fbd1c508730.png"},28453:(e,a,t)=>{t.d(a,{R:()=>n,x:()=>o});var s=t(296540);const i={},r=s.createContext(i);function n(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);