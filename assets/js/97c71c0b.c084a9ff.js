"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[59743],{824932:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"cwa/roles/39e9d048-14cc-4614-b47b-c74e0dd18440","title":"Microsoft - Hybrid AD Joined","description":"This document provides a method for detecting Hybrid Active Directory Joined Machines using a specific PowerShell command. It includes details on the detection string, comparator, result, and applicable operating systems.","source":"@site/docs/cwa/roles/Microsoft - Hybrid AD Joined.md","sourceDirName":"cwa/roles","slug":"/cwa/roles/39e9d048-14cc-4614-b47b-c74e0dd18440","permalink":"/proval-docs/docs/cwa/roles/39e9d048-14cc-4614-b47b-c74e0dd18440","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/roles/Microsoft - Hybrid AD Joined.md","tags":[{"inline":false,"label":"Active Directory","permalink":"/proval-docs/docs/tags/active-directory","description":"Documents related to Active Directory services and management"},{"inline":false,"label":"Windows","permalink":"/proval-docs/docs/tags/windows","description":"Documents related to Microsoft Windows operating system and its functionalities"}],"version":"current","frontMatter":{"id":"39e9d048-14cc-4614-b47b-c74e0dd18440","title":"Microsoft - Hybrid AD Joined","title_meta":"Microsoft - Hybrid AD Joined","keywords":["hybrid","ad","joined","machines","detection"],"description":"This document provides a method for detecting Hybrid Active Directory Joined Machines using a specific PowerShell command. It includes details on the detection string, comparator, result, and applicable operating systems.","tags":["active-directory","windows"],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"Microsoft - Domain Joined","permalink":"/proval-docs/docs/cwa/roles/8708cf1b-fdf5-4128-a8f9-4e864052b8ae"},"next":{"title":"Microsoft - Not Domain Joined","permalink":"/proval-docs/docs/cwa/roles/366bdd63-2a07-4b15-a030-933ac05024ff"}}');var n=i(474848),s=i(28453);const d={id:"39e9d048-14cc-4614-b47b-c74e0dd18440",title:"Microsoft - Hybrid AD Joined",title_meta:"Microsoft - Hybrid AD Joined",keywords:["hybrid","ad","joined","machines","detection"],description:"This document provides a method for detecting Hybrid Active Directory Joined Machines using a specific PowerShell command. It includes details on the detection string, comparator, result, and applicable operating systems.",tags:["active-directory","windows"],draft:!1,unlisted:!1},r=void 0,c={},a=[{value:"Summary",id:"summary",level:2},{value:"Settings",id:"settings",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.p,{children:"This role detects Hybrid AD Joined Machines."}),"\n",(0,n.jsx)(t.h2,{id:"settings",children:"Settings"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Detection String"}),(0,n.jsx)(t.th,{children:"Comparator"}),(0,n.jsx)(t.th,{children:"Result"}),(0,n.jsx)(t.th,{children:"Applicable OS"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"%{@powershell.exe -nologo -noprofile -command \\\"$ErrorActionPreference='SilentlyContinue';$DSRegStatus = dsregcmd.exe /status;@('False','True')[($DSRegStatus -like '*AzureAdJoined : YES*') -and ($DSRegStatus -like '*EnterpriseJoined : NO*') -and ($DSRegStatus -like '*DomainJoined : YES*')]\\\"}%"})}),(0,n.jsx)(t.td,{children:"Equals"}),(0,n.jsx)(t.td,{children:"True"}),(0,n.jsx)(t.td,{children:"Windows"})]})})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>d,x:()=>r});var o=i(296540);const n={},s=o.createContext(n);function d(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);