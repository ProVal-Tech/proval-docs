"use strict";(self.webpackChunkproval_docs=self.webpackChunkproval_docs||[]).push([[12915],{18902:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"cwa/scripts/ab3118dc-bc06-4443-9af0-78ccfb594844","title":"ScreenConnect - Offline Agent Remediation Autofix,RMM+","description":"This document provides a detailed overview of a script that utilizes the RMM+ extension in CW Control to reinstall Automate Agents. It addresses scenarios where agents are online in Control but offline in Automate, and includes functionality for creating tickets for offline servers or broken agents. The script aims to enhance efficiency by automating the agent restart process and ticket creation for better monitoring and management.","source":"@site/docs/cwa/scripts/ScreenConnect - Offline Agent Remediation Autofix,RMM+.md","sourceDirName":"cwa/scripts","slug":"/cwa/scripts/ab3118dc-bc06-4443-9af0-78ccfb594844","permalink":"/proval-docs/docs/cwa/scripts/ab3118dc-bc06-4443-9af0-78ccfb594844","draft":false,"unlisted":false,"editUrl":"https://github.com/proval-tech/proval-docs/tree/main/docs/cwa/scripts/ScreenConnect - Offline Agent Remediation Autofix,RMM+.md","tags":[],"version":"current","frontMatter":{"id":"ab3118dc-bc06-4443-9af0-78ccfb594844","title":"ScreenConnect - Offline Agent Remediation Autofix,RMM+","title_meta":"ScreenConnect - Offline Agent Remediation Autofix,RMM+","keywords":["automate","agents","rmm","ticket","service","monitoring","offline","control"],"description":"This document provides a detailed overview of a script that utilizes the RMM+ extension in CW Control to reinstall Automate Agents. It addresses scenarios where agents are online in Control but offline in Automate, and includes functionality for creating tickets for offline servers or broken agents. The script aims to enhance efficiency by automating the agent restart process and ticket creation for better monitoring and management.","tags":[],"draft":false,"unlisted":false},"sidebar":"contentSidebar","previous":{"title":"ScreenConnect - End Session Command RMM+","permalink":"/proval-docs/docs/cwa/scripts/6357c957-b5b6-42eb-aacc-f4f2a12d3021"},"next":{"title":"ScreenConnect - RMM+ Autofix - AD Plugin - Sync Out of Date Ticket","permalink":"/proval-docs/docs/cwa/scripts/6c9ef438-835d-44a9-bf31-4a1db9253347"}}');var s=i(474848),r=i(28453);const o={id:"ab3118dc-bc06-4443-9af0-78ccfb594844",title:"ScreenConnect - Offline Agent Remediation Autofix,RMM+",title_meta:"ScreenConnect - Offline Agent Remediation Autofix,RMM+",keywords:["automate","agents","rmm","ticket","service","monitoring","offline","control"],description:"This document provides a detailed overview of a script that utilizes the RMM+ extension in CW Control to reinstall Automate Agents. It addresses scenarios where agents are online in Control but offline in Automate, and includes functionality for creating tickets for offline servers or broken agents. The script aims to enhance efficiency by automating the agent restart process and ticket creation for better monitoring and management.",tags:[],draft:!1,unlisted:!1},c=void 0,a={},l=[{value:"Summary",id:"summary",level:2},{value:"Sample Run",id:"sample-run",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Variables",id:"variables",level:2},{value:"Global Variables",id:"global-variables",level:2},{value:"System Properties",id:"system-properties",level:2},{value:"Script States",id:"script-states",level:2},{value:"Process",id:"process",level:2},{value:"For Failed Monitor Status:",id:"for-failed-monitor-status",level:3},{value:"For Success Monitor Status:",id:"for-success-monitor-status",level:3},{value:"Output",id:"output",level:2}];function d(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"This script utilizes the RMM+ extension in CW Control to reinstall Automate Agents. If the agent is found to be online in Control but offline in Automate, it will attempt to restart the agent service via the Control portal."}),"\n",(0,s.jsxs)(t.p,{children:["This script also allows for the creation of tickets for offline servers or broken agents. To enable the ticket creation feature, a ticket category ID should be set for the global variable ",(0,s.jsx)(t.code,{children:"TicketCreationCategory"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Time Saved by Automation:"})," 15 Minutes"]}),"\n",(0,s.jsx)(t.h2,{id:"sample-run",children:"Sample Run"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Intended Target:"})," An Autofix script for Offline Server Monitoring.",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.img,{alt:"Sample Run",src:i(984039).A+"",width:"492",height:"357"})]}),"\n",(0,s.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/b713bbc8-a1d9-4e08-ac77-d02b634569f6",children:"CWM - Control - Script - CW Control RMM+ API - Execute Command*"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/18562eaa-d162-4362-98d3-4bbaa2922458",children:"CWM - Control - Script - CW Control RMM+ API - Is Online [Properties]*"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/f99ddaae-0cb3-4941-b2aa-dc93671dd246",children:"CWM - Automate - RMM+ Plugin Configuration"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Online"}),(0,s.jsx)(t.td,{children:"1 or 0. Indicates the status of the computer in the CW Control portal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Command"}),(0,s.jsx)(t.td,{children:"Agent Restart Command for each Operating System."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Subject"}),(0,s.jsx)(t.td,{children:"Subject of the ticket."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Body"}),(0,s.jsx)(t.td,{children:"Ticket Body."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Tickid"}),(0,s.jsx)(t.td,{children:"Ticket ID of Existing Ticket."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"global-variables",children:"Global Variables"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Name"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Example"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Required"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Description"})})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TicketCreationCategory"}),(0,s.jsx)(t.td,{children:"118"}),(0,s.jsx)(t.td,{children:"True"}),(0,s.jsx)(t.td,{children:"ID for the ticket category to be created in"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"system-properties",children:"System Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Example"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"RMMPlus_AccessKey"}),(0,s.jsx)(t.td,{children:"ajw8fh2p93ufn;o31ifu2091j23oif"}),(0,s.jsx)(t.td,{children:"True"}),(0,s.jsx)(t.td,{children:"This is the key set up in the CW Control RMM+ Plugin so Automate can reach out to gain access to the API."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"RMMPlus_Headers"}),(0,s.jsxs)(t.td,{children:["Origin: ",(0,s.jsx)(t.a,{href:"http://site.site.com/",children:"site.site.com"})]}),(0,s.jsx)(t.td,{children:"True"}),(0,s.jsx)(t.td,{children:"This is the URL (without http/https) for the CW Control server. This value needs to match the value in the RMM+ Plugin configuration in CW Control."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"RMMPlus_StaleAgentThreshold"}),(0,s.jsx)(t.td,{children:"30"}),(0,s.jsx)(t.td,{children:"True"}),(0,s.jsx)(t.td,{children:'The number of days to indicate what a "stale" agent is to the scripts. 30 is the default.'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"RMMPlus_Timeout"}),(0,s.jsx)(t.td,{children:"1000"}),(0,s.jsx)(t.td,{children:"True"}),(0,s.jsx)(t.td,{children:"The default timeout for commands run via RMM+ through Automate. 1000 is the default."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"script-states",children:"Script States"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Example"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"AgentStatus"}),(0,s.jsx)(t.td,{children:"Broken"}),(0,s.jsx)(t.td,{children:"Verified Offline"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"process",children:"Process"}),"\n",(0,s.jsx)(t.h3,{id:"for-failed-monitor-status",children:"For Failed Monitor Status:"}),"\n",(0,s.jsxs)(t.p,{children:["This script will first run the ",(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/18562eaa-d162-4362-98d3-4bbaa2922458",children:"CWM - Control - Script - CW Control RMM+ API - Is Online [Properties]*"})," script to determine if the agent is online or not in CW Control. If the agent is offline in both systems, the script will create an offline server ticket if ",(0,s.jsx)(t.code,{children:"TicketCreationCategory"})," is defined; otherwise, it will exit with a log message that the agent is offline in both systems. It will put this output into the ",(0,s.jsx)(t.code,{children:"AgentStatus"})," script state."]}),"\n",(0,s.jsxs)(t.p,{children:["If the agent is found online in CW Control but offline in CW Automate, it will attempt to perform a restart of the Automate agent services on the target device. It will issue the command via the ",(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/scripts/b713bbc8-a1d9-4e08-ac77-d02b634569f6",children:"CWM - Control - Script - CW Control RMM+ API - Execute Command*"})," script. A command depending on the OS type will be issued."]}),"\n",(0,s.jsxs)(t.p,{children:["After the command is issued to restart the services, the script will check for 15 minutes to see if the agent checks back in successfully in Automate. If the agent is found, the script will exit with success. It will also clear the ",(0,s.jsx)(t.code,{children:"AgentStatus"})," script state from the target device."]}),"\n",(0,s.jsxs)(t.p,{children:["If it does not find a match, it will create a broken agent ticket if ",(0,s.jsx)(t.code,{children:"TicketCreationCategory"}),' is defined; otherwise, it will output a log message stating that the agent is "broken" and needs to be reinstalled manually or reviewed by a technician. The script will update the ',(0,s.jsx)(t.code,{children:"AgentStatus"}),' script state to indicate the agent is "broken" and needs to be reinstalled. This data is visible in the ',(0,s.jsx)(t.a,{href:"/proval-docs/docs/cwa/dataviews/a326b230-2a55-42c6-a9bd-59ad1b1c3288",children:"CWM - Automate - Dataview - Agent - Agent Check-in Over 30 Days"})," Info dataview."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Offline Server Ticket Description:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Ticket Subject:"})," LT - Server Offline for %Clientname%/%ComputerName% (%Computerid%)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Ticket Body:"})," Server Offline Alert for %ComputerName% (%Computerid%) at %Clientname%. Last contact was @Result@"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Broken Agent Ticket Description:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Ticket Subject:"})," LT - Broken Agent Detected for %Clientname%/%ComputerName% (%Computerid%)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Ticket Body:"})," Server %ComputerName% (%Computerid%) at %Clientname% is offline in Automate, but Control is working fine. An autofix attempt to restart the Ltechagent service was made from Automate, but it failed. Please check it out manually."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The script prefers adding a comment in a new or existing ticket rather than creating a new ticket every time."}),"\n",(0,s.jsx)(t.h3,{id:"for-success-monitor-status",children:"For Success Monitor Status:"}),"\n",(0,s.jsxs)(t.p,{children:["It will clear the ",(0,s.jsx)(t.code,{children:"AgentStatus"})," script state and will finish any open offline server or broken agent ticket for the computer."]}),"\n",(0,s.jsx)(t.h2,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Script Log"}),"\n",(0,s.jsx)(t.li,{children:"Script State"}),"\n",(0,s.jsx)(t.li,{children:"Ticket"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},984039:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/image_1-e0dcd4fc744d57b7d8f568f00bc28ff4.png"},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(296540);const s={},r=n.createContext(s);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);