<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="API" treePres="3">
    <Folder name="Monitoring" treePres="3">
      <Procedure name="Monitoring Exclusion - Set Agent" treePres="3" id="670677205" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;Yes&quot; for the specified Agent.">
          <Statement description="Exclude specified agent from Monitoring&#xD;&#xA;The procedure will prompt for an agent name on run to exclude.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Agent Name" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="agent" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -Exclude -AgentName #agent#" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion - Set ALL" treePres="3" id="12549019" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;Yes&quot; for ALL agents in the VSA.&#xA;Typically not used. Only applicable when a client specifically requests monitoring be disabled for the entire environment.">
          <Statement description="Exclude ALL agents from Monitoring&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -ExcludeAll" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion - Set Group" treePres="3" id="1853264725" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;Yes&quot; for all agents in the Specified Machine Group.&#xA;&#xA;Typically used when a client requests that monitoring is disabled for all agents in, for example, a staging group.">
          <Statement description="Exclude all agents in a specified Machine Group from Monitoring&#xD;&#xA;The procedure will prompt for a Machine Group to exclude on run.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Group Name" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="group" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -Exclude -GroupName #group#" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion - Set Org" treePres="3" id="169557491" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;Yes&quot; for ALL agents in the Specified Organization.&#xA;Typically not used.">
          <Statement description="Exclude all agents in the specified organization from Monitoring&#xD;&#xA;The procedure will prompt for an organization on run to exclude.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Organization Name" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="org" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -Exclude -OrgName #org#" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion Override - Set Agent" treePres="3" id="888378607" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;No&quot; for the specified Agent, enabling monitoring on the endpoint.">
          <Statement description="Enable Monitoring on a specified agent.&#xD;&#xA;The procedure will prompt for an agent name on run to include.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Agent Name" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="agent" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -Include -AgentName #agent#" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion Override - Set ALL" treePres="3" id="581620675" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;No&quot; for ALL agents in the VSA, enabling monitoring on the endpoint.&#xA;Typically used during Onboarding.">
          <Statement description="Enable Monitoring on ALL agents in the VSA.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -IncludeAll" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion Override - Set Group" treePres="3" id="626232996" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;No&quot; for ALL agents in the specified Machine Group, enabling monitoring on the endpoint.&#xA;">
          <Statement description="Enable Monitoring on all agents in the specified Machine Group&#xD;&#xA;The procedure will prompt for a machine group name on run to include.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Group Name" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="group" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -Include -GroupName #group#" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
      <Procedure name="Monitoring Exclusion Override - Set Org" treePres="3" id="1696424365" folderId="715950589215359" treeFullPath="PVAL Stack.VSA Automation.API.Monitoring">
        <Body description="Sets the 'xPVAL Exclude From Monitoring' Machine Custom Field value to &quot;No&quot; for ALL agents in the specified Organization, enabling monitoring on the endpoint.&#xA;">
          <Statement description="Enable Monitoring on all agents in the specified Org&#xD;&#xA;The procedure will prompt for an organization on run to include.&#xD;&#xA;No modification of this procedure is necessary for functionality." name="Execute Powershell" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              </Statement>
            </Then>
          </If>
          <Statement name="GetURL" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Organization Name" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="org" />
          </Statement>
          <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -Include -OrgName #org#" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
              </Statement>
            </Else>
          </If>
        </Body>
      </Procedure>
    </Folder>
    <Procedure name="Managed Monitoring CF Update" treePres="3" id="677483665" folderId="127799621656444" treeFullPath="PVAL Stack.VSA Automation.API">
      <Body description="Sets the value of the xPVAL Monitoring Managed Machine Custom Field to Yes or No based on the contents of the parent Organization's 'Monitoring' Org Custom Field.">
        <Statement description="Set xPVAL Monitoring Managed value on all Endpoints&#xD;&#xA;Uses the Stack Script Update-VsaMonitoringFields.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;No Modification is necessary for functionality." name="Execute Powershell" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
            </Statement>
          </Then>
        </If>
        <Statement name="GetURL" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaMonitoringFields.ps1" />
          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaMonitoringFields.ps1" />
          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
        </Statement>
        <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaMonitoringFields.ps1" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -SetManagedValues" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaMonitoringFields-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/ManagedMonitoring.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaMonitoringFields-log.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set the Managed Monitoring CFs. Please Contact support@provaltech.com for assistance." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Org CF to Machine CF Copy" treePres="3" id="764085264" folderId="127799621656444" treeFullPath="PVAL Stack.VSA Automation.API">
      <Body description="Copies data in a supplied Organizational Custom Field to a target Machine custom field on an agent.&#xA;Can target Organizations, Machine Groups, or individual Agents.">
        <Statement description="Copy Organizational CF data to a related Machine CF&#xD;&#xA;Uses the Stack Script Copy-VsaOrgToMachineCF.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;The Procedure will prompt for the Organization Field to copy from and a Target Machine CF to copy to. If this field does not exist it will be created.&#xD;&#xA;Modify the arguments provided to the executePowershellCommand64BitSystem() function on line 16 to change how this procedure functions. One of the following MUST be provided.&#xD;&#xA;//Use -AgentName to select a specific agent. This is how the command is set by default.&#xD;&#xA;//Use -Groupname to copy the org field to the entire group's agents&#xD;&#xA;//Use -OrgName to copy the org field to every agent in that org, Similar to the Monitoring field stack solution.&#xD;&#xA;Example Args: &lt;VSA_API_ARGS&gt; -OrgField #orgField# -MachineField #machineField# -GroupName development.Proval" name="Execute Powershell" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Copy-VsaOrgToMachineCF-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Copy-VsaOrgToMachineCF-log.txt" />
            </Statement>
          </Then>
        </If>
        <Statement name="GetURL" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Copy-VsaOrgToMachineCF.ps1" />
          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Copy-VsaOrgToMachineCF.ps1" />
          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Organization Field to Copy" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="orgField" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Target Machine Custom Field" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="#machineField" />
        </Statement>
        <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Copy-VsaOrgToMachineCF.ps1" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -OrgField #orgField# -MachineField #machineField#" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Copy-VsaOrgToMachineCF-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Copy-VsaOrgToMachineCF-log.txt" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/CFCopy.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Copy-VsaOrgToMachineCF-log.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Failed to copy CF Content. Please Contact support@provaltech.com for assistance." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Org Name CF Update" treePres="3" id="180467607" folderId="127799621656444" treeFullPath="PVAL Stack.VSA Automation.API">
      <Body description="Updates the xPVAL Org Name Machine custom field to the long name of the parent organization.">
        <Statement description="Organization Name Custom Field Update&#xD;&#xA;Uses the Stack Script Update-VsaOrgNameCustomField.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;No modification necessary for functionality" name="Execute Powershell" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaOrgNameCustomField-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaOrgNameCustomField-log.txt" />
            </Statement>
          </Then>
        </If>
        <Statement name="GetURL" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaOrgNameCustomField.ps1" />
          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaOrgNameCustomField.ps1" />
          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
        </Statement>
        <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaOrgNameCustomField.ps1" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt;" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaOrgNameCustomField-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaOrgNameCustomField-log.txt" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/OrgNames.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaOrgNameCustomField-log.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set Organization Name CFs. Please Contact support@provaltech.com for assistance." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="OS Build CF Update" treePres="3" id="1695892051" folderId="127799621656444" treeFullPath="PVAL Stack.VSA Automation.API">
      <Body description="Updates 'xPVAL OS Build' Machine CF on all agents with the agent's OS Build Number (i.e. 19044)&#xA;This works for all OS types.">
        <Statement description="OS Build CF Update&#xD;&#xA;Uses the Stack Script Update-VsaOsBuildCustomField.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;&#xD;&#xA;No modification of the command parameters is necessary for functionality." name="Execute Powershell" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaOSBuildCustomField-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaOSBuildCustomField-log.txt" />
            </Statement>
          </Then>
        </If>
        <Statement name="GetURL" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VsaOSBuildCustomField.ps1" />
          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaOSBuildCustomField.ps1" />
          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
        </Statement>
        <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaOSBuildCustomField.ps1" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt;" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaOSBuildCustomField-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaOSBuildCustomField-log.txt" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/OSBuild.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaOSBuildCustomField-log.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set OS Builds. Please Contact support@provaltech.com for assistance." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Patching Schedule Update" treePres="3" id="1735777842" folderId="127799621656444" treeFullPath="PVAL Stack.VSA Automation.API">
      <Body description="Updates the xPVAL Patching Schedule Machine CF on endpoints based on the ORG CF Data per org.">
        <Statement description="Patching Schedule Update&#xD;&#xA;Uses the Stack Script Update-PatchingSchedule.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;No modification is needed to the parameters for any reason." name="Execute Powershell" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaPatchingSchedule-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaPatchingSchedule-log.txt" />
            </Statement>
          </Then>
        </If>
        <Statement name="GetURL" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Update-VSAPatchingSchedule.ps1" />
          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Update-VsaPatchingSchedule.ps1" />
          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
        </Statement>
        <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Update-VsaPatchingSchedule.ps1" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt;" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Update-VsaPatchingSchedule-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Update-VsaPatchingSchedule-log.txt" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/Patching.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Update-VsaPatchingSchedule-log.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Failed to set Patching Schedules. Please Contact support@provaltech.com for assistance." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Stagnant Agent Removal" treePres="3" id="1247975499" folderId="127799621656444" treeFullPath="PVAL Stack.VSA Automation.API">
      <Body description="Deletes agents in the VSA that have been offline for -OfflineDays days. Can optionally exclude one or more Machine Groups from removal.">
        <Statement description="Remove Stagnant Agents&#xD;&#xA;Uses the Stack Script Remove-StagnantAgents.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;&#xD;&#xA;Modify the arguments provided to the executePowershellCommand64BitSystem() function on line 13 to change how this procedure functions:&#xD;&#xA; //     -OfflineDays: set this to the number of days the Agent should be offline before removal. If this is not provided, a default value of 60 is assumed.&#xD;&#xA;// -MachineGroupException: add a comma seperated list of machine groups to exclude from agent removal.&#xD;&#xA;// Argument Example: &lt;VSA_API_ARGS&gt; -OfflineDays 30 -MachineGroupException 'development.proval','servers.proval'" name="Execute Powershell" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Remove-VsaStagnantAgent-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Remove-VsaStagnantAgent-log.txt" />
            </Statement>
          </Then>
        </If>
        <Statement name="GetURL" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Remove-VsaStagnantAgent.ps1" />
          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Remove-VsaStagnantAgent.ps1" />
          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
        </Statement>
        <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Remove-VsaStagnantAgent.ps1" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt; -OfflineDays 60" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#dir#\Remove-VsaStagnantAgent-log.txt" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\Remove-VsaStagnantAgent-log.txt" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/AgentRemovals.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\Remove-VsaStagnantAgent-log.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Failed to Remove Stagnant Agents. Please Contact support@provaltech.com for assistance." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScExport>