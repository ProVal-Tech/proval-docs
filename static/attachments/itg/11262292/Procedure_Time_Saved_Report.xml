<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Time Saved Report" treePres="3" id="1710654020" folderId="783590323284077" treeFullPath="Development.In Progress">
    <Body description="">
      <Statement description="Patching Schedule Update&#xD;&#xA;Uses the Stack Script Update-PatchingSchedule.ps1 from the ProVal Repository, which uses the ProVal VSAAPI Powershell Module to perform the necessary calls.&#xD;&#xA;No modification is needed to the parameters for any reason." name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item -ItemType Directory -Path %ProgramData%\_automation\ -Name StackContent -ErrorAction SilentlyContinue" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="%ProgramData%\_automation\StackContent" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="dir" />
      </Statement>
      <Statement name="GetURL" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="URL" value="https://file.provaltech.com/repo/script/Get-VsaTimeSaved.ps1" />
        <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#dir#\Get-VsaTimeSaved.ps1" />
        <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
      </Statement>
      <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="#dir#\Get-VsaTimeSaved.ps1" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="&lt;VSA_API_ARGS&gt;" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <Statement name="WriteScriptLogEntry" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Comment" value="#global:PSResult#" />
      </Statement>
      <Statement name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="(Get-Date -format MM-yyyy).ToString()" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#dir#\TimeSavedByAutomation_#global:PSResult#.csv" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <Statement name="GetFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#dir#\TimeSavedByAutomation_#global:PSResult#.csv" />
            <Parameter xsi:type="StringParameter" name="KServerFileName" value="/StackLogs/TimeSavedByAutomation_#global:PSResult#.csv" />
            <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="#dir#\TimeSavedByAutomation_#global:PSResult#.csv" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="log" />
          </Statement>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="#log#" />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Failed to get data. Please contact support@provaltech.com for assistance." />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScExport>